<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hugo 自动部署 vercel</title>
      <link href="web/hugo/"/>
      <url>web/hugo/</url>
      
        <content type="html"><![CDATA[<h1 id="hugo"><a href="#hugo" class="headerlink" title="hugo"></a>hugo</h1><p><a href="https://hugoloveit.com/">LoveIt主题</a></p><h1 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h1><p>algolia<br><a href="https://www.qikqiak.com/post/hugo-integrated-algolia-search/">https://www.qikqiak.com/post/hugo-integrated-algolia-search/</a></p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hugo new posts/first_post.mdhugo servehugo serve --disableFastRenderhugo serve -e production<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="网站图标-浏览器配置-网站清单"><a href="#网站图标-浏览器配置-网站清单" class="headerlink" title="网站图标, 浏览器配置, 网站清单"></a>网站图标, 浏览器配置, 网站清单</h2><p>强烈建议你把:</p><ul><li>apple-touch-icon.png (180x180)</li><li>favicon-32x32.png (32x32)</li><li>favicon-16x16.png (16x16)</li><li>mstile-150x150.png (150x150)</li><li>android-chrome-192x192.png (192x192)</li><li>android-chrome-512x512.png (512x512)</li></ul><h2 id="config配置"><a href="#config配置" class="headerlink" title="config配置"></a>config配置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">baseURL <span class="token operator">=</span> <span class="token string">"http://www.jpdaka.com/"</span><span class="token comment"># [en, zh-cn, fr, ...] 设置默认的语言</span>defaultContentLanguage <span class="token operator">=</span> <span class="token string">"zh-cn"</span><span class="token comment"># 网站语言, 仅在这里 CN 大写</span>languageCode <span class="token operator">=</span> <span class="token string">"zh-CN"</span><span class="token comment"># 是否包括中日韩文字</span>hasCJKLanguage <span class="token operator">=</span> <span class="token boolean">true</span><span class="token comment"># 网站标题</span>title <span class="token operator">=</span> <span class="token string">"迪拜de天空-触手可及的天空之城"</span><span class="token comment"># 更改使用 Hugo 构建网站时使用的默认主题</span>theme <span class="token operator">=</span> <span class="token string">"LoveIt"</span><span class="token punctuation">[</span>menu<span class="token punctuation">]</span>  <span class="token punctuation">[</span><span class="token punctuation">[</span>menu.main<span class="token punctuation">]</span><span class="token punctuation">]</span>    identifier <span class="token operator">=</span> <span class="token string">"posts"</span>    <span class="token comment"># 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标</span>    pre <span class="token operator">=</span> <span class="token string">""</span>    <span class="token comment"># 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标</span>    post <span class="token operator">=</span> <span class="token string">""</span>    name <span class="token operator">=</span> <span class="token string">"文章"</span>    url <span class="token operator">=</span> <span class="token string">"/posts/"</span>    <span class="token comment"># 当你将鼠标悬停在此菜单链接上时, 将显示的标题</span>    title <span class="token operator">=</span> <span class="token string">""</span>    weight <span class="token operator">=</span> <span class="token number">1</span>  <span class="token punctuation">[</span><span class="token punctuation">[</span>menu.main<span class="token punctuation">]</span><span class="token punctuation">]</span>    identifier <span class="token operator">=</span> <span class="token string">"tags"</span>    pre <span class="token operator">=</span> <span class="token string">""</span>    post <span class="token operator">=</span> <span class="token string">""</span>    name <span class="token operator">=</span> <span class="token string">"标签"</span>    url <span class="token operator">=</span> <span class="token string">"/tags/"</span>    title <span class="token operator">=</span> <span class="token string">""</span>    weight <span class="token operator">=</span> <span class="token number">2</span>  <span class="token punctuation">[</span><span class="token punctuation">[</span>menu.main<span class="token punctuation">]</span><span class="token punctuation">]</span>    identifier <span class="token operator">=</span> <span class="token string">"categories"</span>    pre <span class="token operator">=</span> <span class="token string">""</span>    post <span class="token operator">=</span> <span class="token string">""</span>    name <span class="token operator">=</span> <span class="token string">"分类"</span>    url <span class="token operator">=</span> <span class="token string">"/categories/"</span>    title <span class="token operator">=</span> <span class="token string">""</span>    weight <span class="token operator">=</span> <span class="token number">3</span>    <span class="token punctuation">[</span><span class="token punctuation">[</span>menu.main<span class="token punctuation">]</span><span class="token punctuation">]</span>    identifier <span class="token operator">=</span> <span class="token string">"about"</span>    pre <span class="token operator">=</span> <span class="token string">""</span>    post <span class="token operator">=</span> <span class="token string">""</span>    name <span class="token operator">=</span> <span class="token string">"关于"</span>    url <span class="token operator">=</span> <span class="token string">"/about/"</span>    title <span class="token operator">=</span> <span class="token string">""</span>    weight <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">[</span>params<span class="token punctuation">]</span>  <span class="token comment">#  LoveIt 主题版本</span>  version <span class="token operator">=</span> <span class="token string">"0.2.X"</span>  <span class="token comment"># 网站描述</span>  description <span class="token operator">=</span> <span class="token string">"迪拜de天空-触手可及的天空之城"</span>  <span class="token comment"># 网站关键词</span>  keywords <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"迪拜de天空-触手可及的天空之城关"</span>,<span class="token string">"迪拜de天空"</span>,<span class="token string">"迪拜"</span>,<span class="token string">"迪拜的天空"</span>,<span class="token string">"迪拜旅游"</span>,<span class="token string">"迪拜塔"</span>,<span class="token string">"dibai"</span>,<span class="token string">"迪拜de天空技术博客"</span>,<span class="token string">"迪拜时间"</span>,<span class="token string">"Dubai"</span>,<span class="token string">"迪拜人"</span>,<span class="token string">"迪拜世界"</span>,<span class="token string">"天空之城"</span>,<span class="token string">"迪拜学习分享"</span><span class="token punctuation">]</span>  <span class="token comment"># 网站默认主题样式 ("light", "dark", "auto")</span>  defaultTheme <span class="token operator">=</span> <span class="token string">"auto"</span>  <span class="token comment"># 公共 git 仓库路径，仅在 enableGitInfo 设为 true 时有效</span>  gitRepo <span class="token operator">=</span> <span class="token string">""</span>  <span class="token comment">#  哪种哈希函数用来 SRI, 为空时表示不使用 SRI</span>  <span class="token comment"># ("sha256", "sha384", "sha512", "md5")</span>  fingerprint <span class="token operator">=</span> <span class="token string">""</span>  <span class="token comment">#  日期格式</span>  dateFormat <span class="token operator">=</span> <span class="token string">"2006-01-02"</span>  <span class="token comment"># 网站图片, 用于 Open Graph 和 Twitter Cards</span>  images <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"/images/avatar.jpg"</span><span class="token punctuation">]</span>  <span class="token comment"># 页面头部导航栏配置</span>  <span class="token punctuation">[</span>params.header<span class="token punctuation">]</span>    <span class="token comment"># 桌面端导航栏模式 ("fixed", "normal", "auto")</span>    desktopMode <span class="token operator">=</span> <span class="token string">"auto"</span>    <span class="token comment"># 移动端导航栏模式 ("fixed", "normal", "auto")</span>    mobileMode <span class="token operator">=</span> <span class="token string">"auto"</span>    <span class="token comment">#  页面头部导航栏标题配置</span>    <span class="token punctuation">[</span>params.header.title<span class="token punctuation">]</span>      <span class="token comment"># LOGO 的 URL</span>      logo <span class="token operator">=</span> <span class="token string">""</span>      <span class="token comment"># 标题名称</span>      name <span class="token operator">=</span> <span class="token string">"Dubayy"</span>      <span class="token comment"># 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标</span>      pre <span class="token operator">=</span> <span class="token string">""</span>      <span class="token comment"># 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标</span>      post <span class="token operator">=</span> <span class="token string">""</span>      <span class="token comment">#  是否为标题显示打字机动画</span>      typeit <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token comment">#  搜索配置</span>  <span class="token punctuation">[</span>params.search<span class="token punctuation">]</span>    <span class="token builtin class-name">enable</span> <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token comment"># 搜索引擎的类型 ("lunr", "algolia")</span>    <span class="token builtin class-name">type</span> <span class="token operator">=</span> <span class="token string">"lunr"</span>    <span class="token comment"># 文章内容最长索引长度</span>    contentLength <span class="token operator">=</span> <span class="token number">4000</span>    <span class="token comment"># 搜索框的占位提示语</span>    placeholder <span class="token operator">=</span> <span class="token string">""</span>    <span class="token comment">#  最大结果数目</span>    maxResultLength <span class="token operator">=</span> <span class="token number">10</span>    <span class="token comment">#  结果内容片段长度</span>    snippetLength <span class="token operator">=</span> <span class="token number">50</span>    <span class="token comment">#  搜索结果中高亮部分的 HTML 标签</span>    highlightTag <span class="token operator">=</span> <span class="token string">"em"</span>    <span class="token comment">#  是否在搜索索引中使用基于 baseURL 的绝对路径</span>    absoluteURL <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token punctuation">[</span>params.search.algolia<span class="token punctuation">]</span>      index <span class="token operator">=</span> <span class="token string">""</span>      appID <span class="token operator">=</span> <span class="token string">""</span>      searchKey <span class="token operator">=</span> <span class="token string">""</span>          <span class="token comment"># 页面底部信息配置</span>  <span class="token punctuation">[</span>params.footer<span class="token punctuation">]</span>    <span class="token builtin class-name">enable</span> <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token comment">#  自定义内容 (支持 HTML 格式)</span>    custom <span class="token operator">=</span> <span class="token string">''</span>    <span class="token comment">#  是否显示 Hugo 和主题信息</span>    hugo <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token comment">#  是否显示版权信息</span>    copyright <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token comment">#  是否显示作者</span>    author <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token comment"># 网站创立年份</span>    since <span class="token operator">=</span> <span class="token number">2017</span>    <span class="token comment"># ICP 备案信息，仅在中国使用 (支持 HTML 格式)</span>    icp <span class="token operator">=</span> <span class="token string">""</span>    <span class="token comment"># 许可协议信息 (支持 HTML 格式)</span>    license <span class="token operator">=</span> <span class="token string">'&lt;a rel="粤ICP备18020498号" href="http://beian.miit.gov.cn/"> 粤ICP备18020498号 &lt;/a>'</span><span class="token comment"># 作者配置</span><span class="token punctuation">[</span>author<span class="token punctuation">]</span>  name <span class="token operator">=</span> <span class="token string">"迪拜de天空"</span>  email <span class="token operator">=</span> <span class="token string">"1024760955@qq.com"</span>  <span class="token function">link</span> <span class="token operator">=</span> <span class="token string">""</span>  <span class="token comment">#  Section (所有文章) 页面配置</span>  <span class="token punctuation">[</span>params.section<span class="token punctuation">]</span>    <span class="token comment"># section 页面每页显示文章数量</span>    paginate <span class="token operator">=</span> <span class="token number">20</span>    <span class="token comment"># 日期格式 (月和日)</span>    dateFormat <span class="token operator">=</span> <span class="token string">"01-02"</span>    <span class="token comment"># RSS 文章数目</span>    rss <span class="token operator">=</span> <span class="token number">10</span>     <span class="token comment"># 主页配置</span>  <span class="token punctuation">[</span>params.home<span class="token punctuation">]</span>    <span class="token comment">#  RSS 文章数目</span>    rss <span class="token operator">=</span> <span class="token number">10</span>    <span class="token comment"># 主页个人信息</span>    <span class="token punctuation">[</span>params.home.profile<span class="token punctuation">]</span>      <span class="token builtin class-name">enable</span> <span class="token operator">=</span> <span class="token boolean">true</span>      <span class="token comment"># Gravatar 邮箱，用于优先在主页显示的头像</span>      gravatarEmail <span class="token operator">=</span> <span class="token string">""</span>      <span class="token comment"># 主页显示头像的 URL</span>      avatarURL <span class="token operator">=</span> <span class="token string">"/images/avatar.jpg"</span>      <span class="token comment">#  主页显示的网站标题 (支持 HTML 格式)</span>      title <span class="token operator">=</span> <span class="token string">""</span>      <span class="token comment"># 主页显示的网站副标题</span>      subtitle <span class="token operator">=</span> <span class="token string">"迪拜de天空-触手可及的天空之城"</span>      <span class="token comment"># 是否为副标题显示打字机动画</span>      typeit <span class="token operator">=</span> <span class="token boolean">true</span>      <span class="token comment"># 是否显示社交账号</span>      social <span class="token operator">=</span> <span class="token boolean">true</span>      <span class="token comment">#  免责声明 (支持 HTML 格式)</span>      disclaimer <span class="token operator">=</span> <span class="token string">""</span>    <span class="token comment"># 主页文章列表</span>    <span class="token punctuation">[</span>params.home.posts<span class="token punctuation">]</span>      <span class="token builtin class-name">enable</span> <span class="token operator">=</span> <span class="token boolean">true</span>      <span class="token comment"># 主页每页显示文章数量</span>      paginate <span class="token operator">=</span> <span class="token number">6</span>      <span class="token comment">#  被 params.page 中的 hiddenFromHomePage 替代</span>      <span class="token comment"># 当你没有在文章前置参数中设置 "hiddenFromHomePage" 时的默认行为</span>      defaultHiddenFromHomePage <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">#  文章页面配置</span>  <span class="token punctuation">[</span>params.page<span class="token punctuation">]</span>    <span class="token comment">#  是否在主页隐藏一篇文章</span>    hiddenFromHomePage <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token comment">#  是否在搜索结果中隐藏一篇文章</span>    hiddenFromSearch <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token comment">#  是否使用 twemoji</span>    twemoji <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token comment"># 是否使用 lightgallery</span>    lightgallery <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token comment">#  是否使用 ruby 扩展语法</span>    ruby <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token comment">#  是否使用 fraction 扩展语法</span>    fraction <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token comment">#  是否使用 fontawesome 扩展语法</span>    fontawesome <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token comment"># 是否在文章页面显示原始 Markdown 文档链接</span>    linkToMarkdown <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token comment">#  是否在 RSS 中显示全文内容</span>    rssFullText <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token comment">#  目录配置</span>    <span class="token punctuation">[</span>params.page.toc<span class="token punctuation">]</span>      <span class="token comment"># 是否使用目录</span>      <span class="token builtin class-name">enable</span> <span class="token operator">=</span> <span class="token boolean">true</span>      <span class="token comment"># 是否使侧边目录自动折叠展开</span>      auto <span class="token operator">=</span> <span class="token boolean">true</span>     <span class="token comment">#  文章页面的分享信息设置</span>    <span class="token punctuation">[</span>params.page.share<span class="token punctuation">]</span>      <span class="token builtin class-name">enable</span> <span class="token operator">=</span> <span class="token boolean">true</span>      Weibo <span class="token operator">=</span> <span class="token boolean">true</span>      Blogger <span class="token operator">=</span> <span class="token boolean">true</span>      Baidu <span class="token operator">=</span> <span class="token boolean">true</span>      Evernote <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token comment">#  评论系统设置</span>    <span class="token punctuation">[</span>params.page.comment<span class="token punctuation">]</span>       <span class="token builtin class-name">enable</span> <span class="token operator">=</span> <span class="token boolean">true</span>      <span class="token comment"># Valine 评论系统设置</span>      <span class="token punctuation">[</span>params.page.comment.valine<span class="token punctuation">]</span>        <span class="token builtin class-name">enable</span> <span class="token operator">=</span> <span class="token boolean">true</span>        appId <span class="token operator">=</span> <span class="token string">"mTki4DIBw9tVrbXsGF5JUGoF-gzGzoHsz"</span>        appKey <span class="token operator">=</span> <span class="token string">"nJqc2M7fOWiKzIoPJENinWKO"</span>        placeholder <span class="token operator">=</span> <span class="token string">""</span>        avatar <span class="token operator">=</span> <span class="token string">"mp"</span>        <span class="token assign-left variable">meta</span><span class="token operator">=</span> <span class="token string">""</span>        pageSize <span class="token operator">=</span> <span class="token number">10</span>        lang <span class="token operator">=</span> <span class="token string">""</span>        visitor <span class="token operator">=</span> <span class="token boolean">true</span>        recordIP <span class="token operator">=</span> <span class="token boolean">true</span>        highlight <span class="token operator">=</span> <span class="token boolean">true</span>        enableQQ <span class="token operator">=</span> <span class="token boolean">false</span>        serverURLs <span class="token operator">=</span> <span class="token string">""</span>        <span class="token comment">#  emoji 数据文件名称, 默认是 "google.yml"</span>        <span class="token comment"># ("apple.yml", "google.yml", "facebook.yml", "twitter.yml")</span>        <span class="token comment"># 位于 "themes/LoveIt/assets/data/emoji/" 目录</span>        <span class="token comment"># 可以在你的项目下相同路径存放你自己的数据文件:</span>        <span class="token comment"># "assets/data/emoji/"</span>        emoji <span class="token operator">=</span> <span class="token string">""</span>  <span class="token comment"># 网站验证代码，用于 Google/Bing/Yandex/Pinterest/Baidu</span>  <span class="token punctuation">[</span>params.verification<span class="token punctuation">]</span>    google <span class="token operator">=</span> <span class="token string">""</span>    bing <span class="token operator">=</span> <span class="token string">""</span>    yandex <span class="token operator">=</span> <span class="token string">""</span>    pinterest <span class="token operator">=</span> <span class="token string">""</span>    baidu <span class="token operator">=</span> <span class="token string">""</span>    <span class="token comment"># 网站地图配置</span><span class="token punctuation">[</span>sitemap<span class="token punctuation">]</span>  changefreq <span class="token operator">=</span> <span class="token string">"weekly"</span>  filename <span class="token operator">=</span> <span class="token string">"sitemap.xml"</span>  priority <span class="token operator">=</span> <span class="token number">0.5</span><span class="token comment"># Permalinks 配置</span><span class="token punctuation">[</span>Permalinks<span class="token punctuation">]</span>  <span class="token comment"># posts = ":year/:month/:filename"</span>  posts <span class="token operator">=</span> <span class="token string">"posts/:filename"</span><span class="token comment"># 隐私信息配置</span><span class="token punctuation">[</span>privacy<span class="token punctuation">]</span>  <span class="token comment">#  Google Analytics 相关隐私 (被 params.analytics.google 替代)</span>  <span class="token punctuation">[</span>privacy.googleAnalytics<span class="token punctuation">]</span>    <span class="token comment"># ...</span>  <span class="token punctuation">[</span>privacy.twitter<span class="token punctuation">]</span>    enableDNT <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token punctuation">[</span>privacy.youtube<span class="token punctuation">]</span>    privacyEnhanced <span class="token operator">=</span> <span class="token boolean">true</span><span class="token comment"># Hugo 解析文档的配置</span><span class="token punctuation">[</span>markup<span class="token punctuation">]</span>  <span class="token comment"># 语法高亮设置</span>  <span class="token punctuation">[</span>markup.highlight<span class="token punctuation">]</span>    codeFences <span class="token operator">=</span> <span class="token boolean">true</span>    guessSyntax <span class="token operator">=</span> <span class="token boolean">true</span>    lineNos <span class="token operator">=</span> <span class="token boolean">true</span>    lineNumbersInTable <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token comment"># false 是必要的设置</span>    <span class="token comment"># (https://github.com/dillonzq/LoveIt/issues/158)</span>    noClasses <span class="token operator">=</span> <span class="token boolean">false</span>  <span class="token comment"># Goldmark 是 Hugo 0.60 以来的默认 Markdown 解析库</span>  <span class="token punctuation">[</span>markup.goldmark<span class="token punctuation">]</span>    <span class="token punctuation">[</span>markup.goldmark.extensions<span class="token punctuation">]</span>      definitionList <span class="token operator">=</span> <span class="token boolean">true</span>      footnote <span class="token operator">=</span> <span class="token boolean">true</span>      linkify <span class="token operator">=</span> <span class="token boolean">true</span>      strikethrough <span class="token operator">=</span> <span class="token boolean">true</span>      table <span class="token operator">=</span> <span class="token boolean">true</span>      taskList <span class="token operator">=</span> <span class="token boolean">true</span>      typographer <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">[</span>markup.goldmark.renderer<span class="token punctuation">]</span>      <span class="token comment"># 是否在文档中直接使用 HTML 标签</span>      unsafe <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token comment"># 目录设置</span>  <span class="token punctuation">[</span>markup.tableOfContents<span class="token punctuation">]</span>    startLevel <span class="token operator">=</span> <span class="token number">2</span>    endLevel <span class="token operator">=</span> <span class="token number">6</span><span class="token comment"># 用于输出 Markdown 格式文档的设置</span><span class="token punctuation">[</span>mediaTypes<span class="token punctuation">]</span>  <span class="token punctuation">[</span>mediaTypes.<span class="token string">"text/plain"</span><span class="token punctuation">]</span>    suffixes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"md"</span><span class="token punctuation">]</span><span class="token comment"># 用于输出 Markdown 格式文档的设置</span><span class="token punctuation">[</span>outputFormats.MarkDown<span class="token punctuation">]</span>  mediaType <span class="token operator">=</span> <span class="token string">"text/plain"</span>  isPlainText <span class="token operator">=</span> <span class="token boolean">true</span>  isHTML <span class="token operator">=</span> <span class="token boolean">false</span><span class="token comment"># 用于 Hugo 输出文档的设置</span><span class="token punctuation">[</span>outputs<span class="token punctuation">]</span>  <span class="token comment"># </span>  home <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"HTML"</span>, <span class="token string">"RSS"</span>, <span class="token string">"JSON"</span><span class="token punctuation">]</span>  page <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"HTML"</span>, <span class="token string">"MarkDown"</span><span class="token punctuation">]</span>  section <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"HTML"</span>, <span class="token string">"RSS"</span><span class="token punctuation">]</span>  taxonomy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"HTML"</span>, <span class="token string">"RSS"</span><span class="token punctuation">]</span>  taxonomyTerm <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"HTML"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="hugo-上传-vercel"><a href="#hugo-上传-vercel" class="headerlink" title="hugo 上传 vercel"></a>hugo 上传 vercel</h1><p> <a href="https://vercel.com/new">https://vercel.com/new</a></p><blockquote><p>导入hugo项目，选择构建hugo项目，等待构建完成</p></blockquote><p><img src="https://i.loli.net/2021/04/27/TjlWpeUqwSC5Y9Z.png" alt="image-20210427113838057"></p><p><img src="https://i.loli.net/2021/04/27/qhoVNnmvbdRs8W6.png" alt="image-20210427114322895"></p><blockquote><p>配置dns 解析域名完成</p></blockquote><p><img src="https://i.loli.net/2021/04/27/odweqf1MzT4UkXs.png" alt="image-20210427115112975"></p><blockquote><p>之后只要 上传到git就能自动更新了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hugo </tag>
            
            <tag> vercel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>API</title>
      <link href="backend/api/"/>
      <url>backend/api/</url>
      
        <content type="html"><![CDATA[<h1 id="API接口的入口-控制器"><a href="#API接口的入口-控制器" class="headerlink" title="API接口的入口 控制器"></a>API接口的入口 控制器</h1><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Type:text/html; charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// ------------------------------------</span><span class="token comment">// API接口的入口 控制器</span><span class="token comment">// ------------------------------------</span><span class="token comment">// action参数值 就是对应的model类文件的文件名</span><span class="token variable">$action</span> <span class="token operator">=</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">"null"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$action</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"null"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$action</span> <span class="token operator">=</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">"null"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$action</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"null"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 非法的请求(没有系统参数)</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"错误的请求"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token variable">$action</span> <span class="token operator">=</span> <span class="token function">ucfirst</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$action</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">## 调用方法 ##</span><span class="token variable">$action</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"userlist"</span><span class="token punctuation">;</span><span class="token variable">$returntype</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"json"</span><span class="token punctuation">;</span><span class="token comment">// 从用户列表中查询满足条件:"username=wangfan" 的用户</span><span class="token variable">$condition_type</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"username"</span><span class="token punctuation">;</span>  <span class="token comment">// 查询条件类型</span><span class="token variable">$condition_val</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"wangfan"</span><span class="token punctuation">;</span>    <span class="token comment">// 查询条件值</span><span class="token comment">// 接口地址</span><span class="token variable">$url</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"http://localhost/sison/haha.php"</span><span class="token punctuation">;</span> <span class="token comment">##请求参数</span><span class="token comment">// $post_data = "action=".$action."&amp;returntype=".$returntype;</span><span class="token variable">$post_data</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"action="</span><span class="token operator">.</span><span class="token variable">$action</span><span class="token operator">.</span><span class="token string double-quoted-string">"&amp;returntype="</span><span class="token operator">.</span><span class="token variable">$returntype</span><span class="token operator">.</span><span class="token string double-quoted-string">"&amp;condition_type="</span><span class="token operator">.</span><span class="token variable">$condition_type</span><span class="token operator">.</span><span class="token string double-quoted-string">"&amp;condition_val="</span><span class="token operator">.</span><span class="token variable">$condition_val</span><span class="token punctuation">;</span><span class="token comment">// curl实现对接口的调用</span><span class="token variable">$curl</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_NOBODY</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POST</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POSTFIELDS</span><span class="token punctuation">,</span> <span class="token variable">$post_data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// echo "</span><span class="token string double-quoted-string">";var_dump(<span class="token interpolation"><span class="token variable">$res</span></span>);// echo "</span><span class="token string double-quoted-string">";exit();// 解析响应数据(json => array)<span class="token interpolation"><span class="token variable">$res</span></span> = json_decode(<span class="token interpolation"><span class="token variable">$res</span></span>);<span class="token interpolation"><span class="token variable">$res</span></span> = object_array(<span class="token interpolation"><span class="token variable">$res</span></span>);if (is_array(<span class="token interpolation"><span class="token variable">$res</span></span>)) &#123;    // 获取响应结果&#125; else &#123;    <span class="token interpolation"><span class="token variable">$res</span></span> = "</span>出现错误，可能是接口地址错误或网络中断等原因<span class="token string double-quoted-string">";&#125;echo "</span>结果是<span class="token punctuation">:</span> " <span class="token operator">.</span> <span class="token variable">$res</span><span class="token punctuation">;</span><span class="token comment">// PHP要用json格式的数据，通过json_decode()转出来的数组并不是标准的array，所以需要用下面的函数进行转换</span><span class="token keyword">function</span> <span class="token function">object_array</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_object</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$array</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span><span class="token variable">$array</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$array</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=></span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">object_array</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token variable">$array</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css公共样式</title>
      <link href="web/cssgg/"/>
      <url>web/cssgg/</url>
      
        <content type="html"><![CDATA[<h2 id="css公共样式"><a href="#css公共样式" class="headerlink" title="css公共样式"></a>css公共样式</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*css reset*/</span><span class="token selector">body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,form,fieldset,input,textarea,p,blockquote,th,td</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">table</span><span class="token punctuation">&#123;</span><span class="token property">border-collapse</span><span class="token punctuation">:</span>collapse<span class="token punctuation">;</span><span class="token property">border-spacing</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">fieldset,img</span><span class="token punctuation">&#123;</span><span class="token property">border</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">address,caption,cite,code,dfn,em,strong,th,var</span><span class="token punctuation">&#123;</span><span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">ol,ul</span><span class="token punctuation">&#123;</span><span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">caption,th</span><span class="token punctuation">&#123;</span><span class="token property">text-align</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h1,h2,h3,h4,h5,h6</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">q:before,q:after</span><span class="token punctuation">&#123;</span><span class="token property">content</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">abbr,acronym</span><span class="token punctuation">&#123;</span> <span class="token property">border</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*文字排版*/</span><span class="token selector">.f12</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.f13</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.f14</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.f16</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.fb</span><span class="token punctuation">&#123;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.fn</span><span class="token punctuation">&#123;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.t2</span><span class="token punctuation">&#123;</span><span class="token property">text-indent</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.lh150</span><span class="token punctuation">&#123;</span><span class="token property">line-height</span><span class="token punctuation">:</span>150%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.lh180</span><span class="token punctuation">&#123;</span><span class="token property">line-height</span><span class="token punctuation">:</span>180%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.lh200</span><span class="token punctuation">&#123;</span><span class="token property">line-height</span><span class="token punctuation">:</span>200%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.unl</span><span class="token punctuation">&#123;</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.no_unl</span><span class="token punctuation">&#123;</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*定位*/</span><span class="token selector">.tl</span><span class="token punctuation">&#123;</span><span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.tc</span><span class="token punctuation">&#123;</span><span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.tr</span><span class="token punctuation">&#123;</span><span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.bc</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.fl</span><span class="token punctuation">&#123;</span><span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span>inline<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.fr</span><span class="token punctuation">&#123;</span><span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span>inline<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cb</span><span class="token punctuation">&#123;</span><span class="token property">clear</span><span class="token punctuation">:</span>both<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cl</span><span class="token punctuation">&#123;</span><span class="token property">clear</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cr</span><span class="token punctuation">&#123;</span><span class="token property">clear</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.clearfix:after</span><span class="token punctuation">&#123;</span><span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">'.'</span><span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span><span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.clearfix</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span>inline-block<span class="token punctuation">&#125;</span><span class="token selector">*html.clearfix</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span> 1%<span class="token punctuation">&#125;</span><span class="token selector">.Clearfix</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.vm</span><span class="token punctuation">&#123;</span><span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pa</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">abs-right</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.zoom</span><span class="token punctuation">&#123;</span><span class="token property">zoom</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.hidden</span><span class="token punctuation">&#123;</span><span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.none</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token comment">/*长度高度*/</span><span class="token selector">.w10</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w20</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w30</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w40</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w50</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w70</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w90</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 90px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w100</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w300</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w500</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w600</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w700</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w800</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.h50</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.h100</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.h200</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.h</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*编剧*/</span><span class="token selector">.m10</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.m15</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span>15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.m30</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mt5</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mt10</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mt15</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mt20</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mt30</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mt50</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mt100</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mb5</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mb10</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mb15</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mb20</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mb30</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mb50</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mb100</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ml5</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ml10</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ml15</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ml20</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ml30</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ml50</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ml100</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mr5</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mr10</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mr15</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mr20</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mr30</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mr50</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mr100</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.p5</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.p10</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.p15</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.p20</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.p30</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.p50</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.p100</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pt5</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pt10</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pt15</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pt20</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pt30</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pt50</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pt100</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pb5</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pb10</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pb15</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pb20</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pb30</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pb50</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pb100</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pl5</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pl10</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pl15</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pl20</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pl30</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pl50</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pl100</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr5</span><span class="token punctuation">&#123;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr10</span><span class="token punctuation">&#123;</span><span class="token property">padding-right</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr15</span><span class="token punctuation">&#123;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr20</span><span class="token punctuation">&#123;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr30</span><span class="token punctuation">&#123;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr50</span><span class="token punctuation">&#123;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr100</span><span class="token punctuation">&#123;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>element</title>
      <link href="web/element/"/>
      <url>web/element/</url>
      
        <content type="html"><![CDATA[<h2 id="element"><a href="#element" class="headerlink" title="element"></a>element</h2><p>123123</p><p>123123</p>]]></content>
      
      
      <categories>
          
          <category> element </category>
          
      </categories>
      
      
        <tags>
            
            <tag> element </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用函数</title>
      <link href="web/function/"/>
      <url>web/function/</url>
      
        <content type="html"><![CDATA[<h1 id="function"><a href="#function" class="headerlink" title="function"></a>function</h1><h2 id="JS数组对象排序"><a href="#JS数组对象排序" class="headerlink" title="JS数组对象排序"></a>JS数组对象排序</h2><pre class="line-numbers language-none"><code class="language-none">var person &#x3D; [&#123;name:&quot;Rom&quot;,age:12&#125;,&#123;name:&quot;Bob&quot;,age:22&#125;,&#123;name:&quot;Ma&quot;,age:5&#125;,&#123;name:&quot;Tony&quot;,age:25&#125;]person.sort((a,b)&#x3D;&gt;&#123; return a.age-b.age&#125;)&#x2F;&#x2F;升序person.sort((a,b)&#x3D;&gt;&#123; return b.age-a.age&#125;)&#x2F;&#x2F;降序<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> function </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Elasticsearch</title>
      <link href="backend/Elasticsearch/"/>
      <url>backend/Elasticsearch/</url>
      
        <content type="html"><![CDATA[<h1 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h1><h2 id="资料文档"><a href="#资料文档" class="headerlink" title="资料文档"></a>资料文档</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">- 中文版的https://es.xiaoleilu.com/  - 英文版的https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html - 中文版的https://es.xiaoleilu.com/  - Elasticsearch-PHPhttps://www.elastic.co/guide/cn/elasticsearch/php/current/_quickstart.html<span class="token comment">#_quickstart</span>- 全文搜索引擎 Elasticsearch 入门教程https://www.ruanyifeng.com/blog/2017/08/elasticsearch.html- Elasticsearch-PHP 中文文档https://learnku.com/docs/elasticsearch-php/6.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装并运行Elasticsearch"><a href="#安装并运行Elasticsearch" class="headerlink" title="安装并运行Elasticsearch"></a>安装并运行Elasticsearch</h2><p>安装 Elasticsearch 之前，你需要先安装一个较新版本的 Java，最好的选择是，你可以从 <a href="http://www.java.com/">www.java.com</a> 获得官方提供的最新版本的Java。<br>你可以从 elastic 的官网 elastic.co/downloads/elasticsearch 获取最新版本的Elasticsearch。解压文档后，按照下面的操作，即可在前台(foregroud)启动 Elasticsearch：</p><blockquote><p>cd elasticsearch</p><p>./bin/elasticsearch</p></blockquote><p>此时，Elasticsearch运行在本地的9200端口，在浏览器中输入网址“<a href="http://localhost:9200/%E2%80%9D%EF%BC%8C%E5%A6%82%E6%9E%9C%E7%9C%8B%E5%88%B0%E4%BB%A5%E4%B8%8B%E4%BF%A1%E6%81%AF%E5%B0%B1%E8%AF%B4%E6%98%8E%E4%BD%A0%E7%9A%84%E7%94%B5%E8%84%91%E5%B7%B2%E6%88%90%E5%8A%9F%E5%AE%89%E8%A3%85Elasticsearch%EF%BC%9A">http://localhost:9200/”，如果看到以下信息就说明你的电脑已成功安装Elasticsearch：</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">&#123;</span>  <span class="token string">"name"</span> <span class="token builtin class-name">:</span> <span class="token string">"YTK8L4q"</span>,  <span class="token string">"cluster_name"</span> <span class="token builtin class-name">:</span> <span class="token string">"elasticsearch"</span>,  <span class="token string">"cluster_uuid"</span> <span class="token builtin class-name">:</span> <span class="token string">"hB2CZPlvSJavhJxx85fUqQ"</span>,  <span class="token string">"version"</span> <span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>    <span class="token string">"number"</span> <span class="token builtin class-name">:</span> <span class="token string">"6.5.4"</span>,    <span class="token string">"build_flavor"</span> <span class="token builtin class-name">:</span> <span class="token string">"default"</span>,    <span class="token string">"build_type"</span> <span class="token builtin class-name">:</span> <span class="token string">"tar"</span>,    <span class="token string">"build_hash"</span> <span class="token builtin class-name">:</span> <span class="token string">"d2ef93d"</span>,    <span class="token string">"build_date"</span> <span class="token builtin class-name">:</span> <span class="token string">"2018-12-17T21:17:40.758843Z"</span>,    <span class="token string">"build_snapshot"</span> <span class="token builtin class-name">:</span> false,    <span class="token string">"lucene_version"</span> <span class="token builtin class-name">:</span> <span class="token string">"7.5.0"</span>,    <span class="token string">"minimum_wire_compatibility_version"</span> <span class="token builtin class-name">:</span> <span class="token string">"5.6.0"</span>,    <span class="token string">"minimum_index_compatibility_version"</span> <span class="token builtin class-name">:</span> <span class="token string">"5.0.0"</span>  <span class="token punctuation">&#125;</span>,  <span class="token string">"tagline"</span> <span class="token builtin class-name">:</span> <span class="token string">"You Know, for Search"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Kibana"><a href="#Kibana" class="headerlink" title="Kibana"></a>Kibana</h2><p>Kibana 是一个开源的分析和可视化平台，旨在与 Elasticsearch 合作。Kibana 提供搜索、查看和与存储在 Elasticsearch 索引中的数据进行交互的功能。开发者或运维人员可以轻松地执行高级数据分析，并在各种图表、表格和地图中可视化数据。<br>  你可以从 elastic 的官网 <a href="https://www.elastic.co/downloads/kibana">https://www.elastic.co/downloads/kibana</a> 获取最新版本的Kibana</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thinkphp微信Auth实战开发</title>
      <link href="backend/TP_WxAuth/"/>
      <url>backend/TP_WxAuth/</url>
      
        <content type="html"><![CDATA[<h1 id="Thinkphp微信Auth实战开发"><a href="#Thinkphp微信Auth实战开发" class="headerlink" title="Thinkphp微信Auth实战开发"></a>Thinkphp微信Auth实战开发</h1><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">/*** Created by PhpStorm.* User: Mikkle* Email:776329498@qq.com* Date: 2016/12/28* Time: 14:08*/</span><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\</span>api<span class="token punctuation">\</span>controller</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">com<span class="token punctuation">\</span>Wechat</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\</span>Cache</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\</span>Model</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\</span>Session</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Auth</span> <span class="token keyword">extends</span> <span class="token class-name">Base</span><span class="token punctuation">&#123;</span><span class="token keyword">protected</span> <span class="token variable">$isWechatBrowser</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token keyword">protected</span> <span class="token variable">$scope</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'snsapi_base'</span><span class="token punctuation">;</span><span class="token keyword">protected</span> <span class="token variable">$uuid</span><span class="token punctuation">;</span><span class="token keyword">protected</span> <span class="token variable">$open_id</span><span class="token punctuation">;</span><span class="token keyword">protected</span> <span class="token variable">$member_info</span><span class="token punctuation">;</span><span class="token keyword">protected</span> <span class="token variable">$options</span><span class="token punctuation">;</span><span class="token keyword">protected</span> <span class="token variable">$isReg</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token keyword">protected</span> <span class="token variable">$no_login</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">_initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">_initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TODO: Change the autogenerated stub</span>    <span class="token variable">$user_agent</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">request</span><span class="token operator">-></span><span class="token function">server</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'HTTP_USER_AGENT'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$user_agent</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'MicroMessenger'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant boolean">false</span> <span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">isWechatBrowser</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>    <span class="token comment">//判断提交方式和是否微信浏览器</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">request</span><span class="token operator">-></span><span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'GET'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">isWechatBrowser</span> <span class="token operator">===</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//未登录 重新登录</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">checkAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">no_login</span> <span class="token punctuation">)</span>  <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">wxoauth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">isLogin</span><span class="token operator">=</span><span class="token constant boolean">true</span><span class="token punctuation">;</span>        <span class="token comment">//设置全局登录</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">loginGlobal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">isReg</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token comment">//   if(!$this->checkUuidMobile()) $this->redirect('/index/WC_html_1/mainContainer.html#user/user_blind.html');</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 设置全局登录 * #User: Mikkle * #Email:776329498@qq.com * #Date: * @return bool */</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">loginGlobal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">open_id</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token variable">$member</span><span class="token operator">=</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'base/user'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$member_info</span><span class="token operator">=</span><span class="token variable">$member</span><span class="token operator">-></span><span class="token function">infoByOpenId</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">open_id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$member_info</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$data</span><span class="token operator">=</span><span class="token punctuation">[</span>            <span class="token string single-quoted-string">'nickname'</span><span class="token operator">=></span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">member_info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'nickname'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'headimgurl'</span><span class="token operator">=></span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">member_info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'headimgurl'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'wechat_openid'</span><span class="token operator">=></span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">open_id</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$member</span><span class="token operator">-></span><span class="token function">editData</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$member_info</span><span class="token operator">=</span><span class="token variable">$member</span><span class="token operator">-></span><span class="token function">infoByOpenId</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">open_id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">isReg</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$fans</span><span class="token operator">=</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'base/WeFans'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$fans_info</span><span class="token operator">=</span><span class="token variable">$fans</span><span class="token operator">-></span><span class="token function">infoByOpenId</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">open_id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">member_info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'appid'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$fans_info</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$fans</span><span class="token operator">-></span><span class="token function">allowField</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">save</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">member_info</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$fans</span><span class="token operator">-></span><span class="token function">allowField</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">save</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">member_info</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span> <span class="token operator">=></span> <span class="token variable">$fans_info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//设置全局登录 微信浏览器登录</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">checkLoginGlobal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">setLoginGlobal</span><span class="token punctuation">(</span><span class="token variable">$member_info</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">uuid</span> <span class="token operator">=</span> <span class="token variable">$member_info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'uuid'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 微信内页登录 * #User: Mikkle * #Email:776329498@qq.com * #Date: * @return bool */</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">wxoauth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">checkAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token variable">$code</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">request</span><span class="token operator">-></span><span class="token function">param</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$code</span> <span class="token operator">==</span> <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$code</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string single-quoted-string">'token'</span><span class="token operator">=></span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"token"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//填写你设定的key</span>        <span class="token string single-quoted-string">'appid'</span><span class="token operator">=></span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"appid"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//填写高级调用功能的app id</span>        <span class="token string single-quoted-string">'appsecret'</span><span class="token operator">=></span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"appsecret"</span><span class="token punctuation">]</span> <span class="token comment">//填写高级调用功能的密钥</span>    <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'appid'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"appid"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$we_obj</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Wechat</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$code</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$json</span> <span class="token operator">=</span> <span class="token variable">$we_obj</span><span class="token operator">-></span><span class="token function">getOauthAccessToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$json</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">request</span><span class="token operator">-></span><span class="token function">baseUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// die('获取用户授权失败，请重新确认&lt;a href="'.$this->request->baseUrl().'" >点击重试&lt;/a>');</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">open_id</span> <span class="token operator">=</span> <span class="token variable">$json</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"openid"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$access_token</span> <span class="token operator">=</span> <span class="token variable">$json</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'access_token'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_id'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">open_id</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">,</span><span class="token variable">$code</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$user_info</span> <span class="token operator">=</span> <span class="token variable">$we_obj</span><span class="token operator">-></span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">open_id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$user_info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'appid'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'appid'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$user_info</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$user_info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'nickname'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">member_info</span> <span class="token operator">=</span> <span class="token variable">$user_info</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">strstr</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'scope'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'snsapi_userinfo'</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$user_info</span> <span class="token operator">=</span> <span class="token variable">$we_obj</span><span class="token operator">-></span><span class="token function">getOauthUserinfo</span><span class="token punctuation">(</span><span class="token variable">$access_token</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">open_id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$user_info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'appid'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'appid'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$user_info</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$user_info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'nickname'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">member_info</span> <span class="token operator">=</span> <span class="token variable">$user_info</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">open_id</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">member_info</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'member_info'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">member_info</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_id'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">open_id</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'wx_redirect'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">open_id</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">scope</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'snsapi_userinfo'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">scope</span><span class="token operator">==</span><span class="token string single-quoted-string">'snsapi_base'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">request</span><span class="token operator">-></span><span class="token function">url</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'wx_redirect'</span><span class="token punctuation">,</span><span class="token variable">$url</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$url</span> <span class="token operator">=</span><span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'wx_redirect'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$url</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'wx_redirect'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'获取用户授权失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>​    <span class="token variable">$oauth_url</span> <span class="token operator">=</span> <span class="token variable">$we_obj</span><span class="token operator">-></span><span class="token function">getOauthRedirect</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"wxbase"</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">scope</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Location:'</span><span class="token operator">.</span><span class="token variable">$oauth_url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">;</span>​<span class="token punctuation">&#125;</span><span class="token comment">/** * 获取微信Options 使用缓存 * #User: Mikkle * #Email:776329498@qq.com * #Date: * @param int $appid * @return mixed */</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getOptions</span><span class="token punctuation">(</span> <span class="token variable">$appid</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'weOptions'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$weOptions</span><span class="token operator">=</span><span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'weOptions'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$weOptions</span><span class="token operator">=</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'we/We'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">info</span><span class="token punctuation">(</span><span class="token variable">$appid</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">toarray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'weOptions'</span><span class="token punctuation">,</span><span class="token variable">$weOptions</span><span class="token punctuation">,</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token operator">=</span><span class="token variable">$weOptions</span><span class="token punctuation">;</span>    <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">appid</span><span class="token operator">=</span><span class="token variable">$weOptions</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"appid"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$weOptions</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"appid"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 判断登录是否成功 * #User: Mikkle * #Email:776329498@qq.com * #Date: * @return bool */</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">checkAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'member_info'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_id'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">member_info</span> <span class="token operator">=</span> <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'member_info'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">open_id</span> <span class="token operator">=</span> <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_id'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">appid</span> <span class="token operator">=</span> <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'appid'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinkphp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac下载</title>
      <link href="tool/mac-app/"/>
      <url>tool/mac-app/</url>
      
        <content type="html"><![CDATA[<h1 id="mac下载"><a href="#mac下载" class="headerlink" title="mac下载"></a>mac下载</h1><p><a href="http://www.pc6.com/">http://www.pc6.com</a></p><p><a href="https://www.mac69.com/">https://www.mac69.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> link </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpstorm激活码</title>
      <link href="tool/phpstorm/"/>
      <url>tool/phpstorm/</url>
      
        <content type="html"><![CDATA[<h1 id="phpstorm激活码"><a href="#phpstorm激活码" class="headerlink" title="phpstorm激活码"></a>phpstorm激活码</h1><blockquote><p><a href="http://idea.medeming.com/jets/">http://idea.medeming.com/jets/</a></p></blockquote><blockquote><p><a href="https://mp.weixin.qq.com/s/ayIzGQoIm_UCe-e0LdFhmw">https://mp.weixin.qq.com/s/ayIzGQoIm_UCe-e0LdFhmw</a></p></blockquote><h1 id="IntelliJ-IDEA-2020-2-3永久破解激活教程"><a href="#IntelliJ-IDEA-2020-2-3永久破解激活教程" class="headerlink" title="IntelliJ IDEA 2020.2.3永久破解激活教程"></a>IntelliJ IDEA 2020.2.3永久破解激活教程</h1><p><a href="https://shimo.im/docs/VYTcjGWCCPvXYqGy/read">https://shimo.im/docs/VYTcjGWCCPvXYqGy/read</a></p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> phpstorm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目式学习指南</title>
      <link href="tool/xiangmuxuexi/"/>
      <url>tool/xiangmuxuexi/</url>
      
        <content type="html"><![CDATA[<h2 id="项目式学习指南"><a href="#项目式学习指南" class="headerlink" title="项目式学习指南"></a>项目式学习指南</h2><iframe width="100%"  src="//player.bilibili.com/player.html?aid=37385961&cid=65711417&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p>经过长久的筹备之后，苹果公司发布了《人人能创造》（Everyone Can Create）中文课程，让每个人都能通过绘画、摄影、视频和音乐来培养创造力。并且，这套课程在苹果官网即可<a href="https://www.apple.com/cn/education/everyone-can-create-guides/">免费下载</a>。</p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><blockquote><p><a href="https://www.apple.com/cn/education/everyone-can-create-guides/">https://www.apple.com/cn/education/everyone-can-create-guides/</a></p></blockquote><p><img src="https://s1.ax1x.com/2018/12/07/F3AUZn.png" alt="苹果官网项目"></p><p>可以看到，这套课程包括教师指南、个人学习的视频篇、摄影篇、音乐篇、绘画篇。含有中英文版。</p><p>所有下载格式为 iBook，你可以在所有苹果设备上打开它。每一个文件看起来似乎都比较大，在 600 M 以上，事实上，其中一半以上都是图片和视频。以《视频篇》为例，你可以在阅读文本的时候，查看旁边的图片，以及点击文中的视频直接观看。每个人都可以在其中学习到光影、构图、拍摄角度，剪辑技巧等内容，最基础到分镜脚本的绘画与写作。</p><p>当然，其他篇章也同样涵盖了系统的学习内容，比如《绘画篇》，让我们学习线条、形状、阴影和色彩等等，最终学习如何制作 LOGO、涂鸦、肖像和字体等等。</p><p>苹果一直比较注重在教育和创造领域的社会价值，虽然在商业行为上看来，也算是变相打广告。</p><p>1997 年乔布斯回归苹果后就早就定义了苹果产品在创造领域的作用，至今苹果产品线也一直延续着他的设计。前段时间的苹果发布会新品也更加印证了这一点。</p><p>而现在，在苹果官网，你就可以看到专门的教育页面，一直在不断叙述一件事情，那就是：使用苹果的产品，学生可以更好地学习，学校可以更好地教育。除了我们开篇说到的教学内容，你还可能使用苹果设备学习专业的编程开发。</p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue 安装</title>
      <link href="web/vue/"/>
      <url>web/vue/</url>
      
        <content type="html"><![CDATA[<h2 id="vue-安装"><a href="#vue-安装" class="headerlink" title="vue 安装"></a>vue 安装</h2><p>安装npm install webpack -g</p><p>卸载 npm uninstall webpack –save-dev</p><h4 id="安装vue脚手架"><a href="#安装vue脚手架" class="headerlink" title="安装vue脚手架"></a>安装vue脚手架</h4><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">1. npm install vue-cli webpack -g （全局安装vue脚手架和webpack）2. 进入工程目录 vue init webpack my-project （进入目录项目名称）3. cd my-project4. npm install （安装项目依赖，一定要用npm，会比较慢）5. npm install vue-router vue-resource --save-dev（安装 vue 路由模块vue-router和网络请求模块vue-resource）6. npm run dev（本地运行）7. npm run build（生成服务器build）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="http://doc.liangxinghua.com/vue-family/1.3.html">http://doc.liangxinghua.com/vue-family/1.3.html</a></p><p><img src="https://i.loli.net/2020/11/21/VuJmTjK9BIpaLOH.png" alt="image-20201121154027418"></p><pre class="line-numbers language-none"><code class="language-none">&lt;script&gt;export default &#123;  name: &quot;Home&quot;,  data() &#123;    return &#123;&#125;;  &#125;,  methods: &#123;    &#x2F;&#x2F; 组件的方法  &#125;,  watch: &#123;    &#x2F;&#x2F; watch擅长处理的场景：一个数据影响多个数据  &#125;,  computed: &#123;    &#x2F;&#x2F; computed擅长处理的场景：一个数据受多个数据影响  &#125;,  beforeCreate: function() &#123;    &#x2F;&#x2F; 在实例初始化之后，数据观测(data observer) 和 event&#x2F;watcher 事件配置之前被调用。  &#125;,  created: function() &#123;    &#x2F;&#x2F; 实例已经创建完成之后被调用。在这一步，实例已完成以下的配置：数据观测(data observer)，属性和方法的运算， watch&#x2F;event 事件回调。然而，挂载阶段还没开始，$el 属性目前不可见。  &#125;,  beforeMount: function() &#123;    &#x2F;&#x2F; 在挂载开始之前被调用：相关的 render 函数首次被调用。  &#125;,  mounted: function() &#123;    &#x2F;&#x2F; 编译好的HTML挂载到页面完成后执行的事件钩子    &#x2F;&#x2F; el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子。    &#x2F;&#x2F; 此钩子函数中一般会做一些ajax请求获取数据进行数据初始化    console.log(&quot;Home done&quot;);  &#125;,  beforeUpdate: function() &#123;    &#x2F;&#x2F; 数据更新时调用，发生在虚拟 DOM 重新渲染和打补丁之前。 你可以在这个钩子中进一步地更改状态，这不会触发附加的重渲染过程。  &#125;,  updated: function() &#123;    &#x2F;&#x2F; 由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。    &#x2F;&#x2F; 当这个钩子被调用时，组件 DOM 已经更新，所以你现在可以执行依赖于 DOM 的操作。然而在大多数情况下，你应该避免在此期间更改状态，因为这可能会导致更新无限循环。    &#x2F;&#x2F; 该钩子在服务器端渲染期间不被调用。  &#125;,  beforeDestroy: function() &#123;    &#x2F;&#x2F; 实例销毁之前调用。在这一步，实例仍然完全可用。  &#125;,  destroyed: function() &#123;    &#x2F;&#x2F; Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。 该钩子在服务器端渲染期间不被调用。  &#125;&#125;;&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="v-指令是带有v-的特殊属性"><a href="#v-指令是带有v-的特殊属性" class="headerlink" title="v- 指令是带有v-的特殊属性"></a>v- 指令是带有v-的特殊属性</h4><pre class="line-numbers language-none"><code class="language-none">v-if 条件渲染v-showv-else (必须在v-if&#x2F;v-else-if&#x2F;v-show指令后)v-else-if (v-if&#x2F;v-else-if后)v-for (遍历)v-html (绑定HTML属性中的值)   (本篇先讲这6个)v-bind (响应更新HTML特性，绑定自定义属性，如绑定某个class元素或style)v-on (监听指定元素的dom事件)v-model (内置的双向数据绑定，用在表单控件，绑定的value通常是静态字符串)v-cloak 关于vuejs页面闪烁&#123;&#123;message&#125;&#125;v-once 只渲染元素和组件一次，随后的重新渲染,元素&#x2F;组件及其所有的子节点将被视为静态内容并跳过<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> index <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>id <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>a_id<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//根据 已知id（this.a_id） 获取在数组中的位置(index)；</span><span class="token keyword">const</span> obj <span class="token operator">=</span> response<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> obj<span class="token punctuation">.</span>id <span class="token operator">===</span> that<span class="token punctuation">.</span>form<span class="token punctuation">.</span>adminCourseId<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>vue日期转时间戳</p><pre class="line-numbers language-none"><code class="language-none">console.log((new Date(this.form.startTime)).getTime() &#x2F; 1000)当前时间戳Math.round(new Date() &#x2F; 1000)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack</title>
      <link href="web/webpack/"/>
      <url>web/webpack/</url>
      
        <content type="html"><![CDATA[<h2 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h2><p><a href="https://github.com/poetries/mywiki/wiki/webpack">webpack使用教程</a></p><blockquote><p>安装全局依赖 webpack</p></blockquote><pre><code>$ npm install -g webpack</code></pre><p>安装webpack的时候 遇到的情况; 直接按照提示安装 提示Module webpack-cli 不存在<br>解决 npm install  webpack-cli -g</p><p>用 npm init 初始化项目</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 随便进一个目录</span>$ <span class="token builtin class-name">cd</span> ~/codes<span class="token comment"># 创建一个存放 webpack 项目的目录，名为 hello-webpack</span>$ <span class="token function">mkdir</span> hello-webpack$ <span class="token function">npm</span> init多出了一个名为 package.jsonwebpack.dev.config.js → 开发环境中用到的配置文件webpack.pub.config.js → 生产环境中用到的配置文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>通过运行下面的命令进行配置文件的选择</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">webpack --config webpack.dev.config.js配置npm的package.json文件<span class="token string">"scripts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">"test"</span><span class="token builtin class-name">:</span> <span class="token string">"echo <span class="token entity" title="\&quot;">\"</span>Error: no test specified<span class="token entity" title="\&quot;">\"</span> &amp;&amp; exit 1"</span>,<span class="token string">"dev"</span><span class="token builtin class-name">:</span><span class="token string">"webpack --config webpack.dev.config.js"</span>,<span class="token string">"pub"</span><span class="token builtin class-name">:</span><span class="token string">"webpack --config webpack.pub.config.js"</span><span class="token punctuation">&#125;</span>,在根目录下执行命令<span class="token function">npm</span> run dev这样之后就不要敲那么复杂的命令了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>加载CSS</strong></p><blockquote><p>npm install –save-dev css-loader   style-loader</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">修改配置文件，在loaders中加上<span class="token punctuation">&#123;</span>test: /<span class="token punctuation">\</span>.css$/,loader: <span class="token string">'style!css'</span> // 如果有多个加载器，中间用感叹号隔开，多个加载器从右往左执行<span class="token punctuation">&#125;</span>src/app.js 你可以为整个项目加载所有的 CSS<span class="token function">import</span>  <span class="token string">'./project-styles.css'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>图片处理</p><blockquote><p>下载依赖</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span>  <span class="token function">install</span>  --save-dev url-loader file-loader修改配置文件<span class="token punctuation">&#123;</span>test: /<span class="token punctuation">\</span>.<span class="token punctuation">(</span>png<span class="token operator">|</span>jpeg<span class="token operator">|</span>gif<span class="token operator">|</span>jpg<span class="token punctuation">)</span>$/,loader: <span class="token string">'url?limit=25000'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="package-json文件"><a href="#package-json文件" class="headerlink" title="package.json文件"></a>package.json文件</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">var path <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module.exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>entry: path.resolve<span class="token punctuation">(</span>__dirname, <span class="token string">'src/js/app.js'</span><span class="token punctuation">)</span>,output: <span class="token punctuation">&#123;</span>path: path.resolve<span class="token punctuation">(</span>__dirname, <span class="token string">'dist'</span><span class="token punctuation">)</span>,filename: <span class="token string">'bundle.js'</span><span class="token punctuation">&#125;</span>,module: <span class="token punctuation">&#123;</span>loaders: <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>test: /<span class="token punctuation">\</span>.jsx?$/, loader: <span class="token string">'babel'</span>,query: <span class="token punctuation">&#123;</span>presets: <span class="token punctuation">[</span><span class="token string">'es2015'</span>, <span class="token string">'react'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>,<span class="token punctuation">&#123;</span>test: /<span class="token punctuation">\</span>.css$/, loader: <span class="token string">'style!css'</span> <span class="token punctuation">&#125;</span>,<span class="token punctuation">&#123;</span>test: /<span class="token punctuation">\</span>.scss$/,loader: <span class="token string">'style!css!sass'</span><span class="token punctuation">&#125;</span>,<span class="token punctuation">&#123;</span>test: /<span class="token punctuation">\</span>.<span class="token punctuation">(</span>png<span class="token operator">|</span>jpeg<span class="token operator">|</span>gif<span class="token operator">|</span>jpg<span class="token punctuation">)</span>$/,loader: <span class="token string">'file-loader?name=images/[name].[ext]'</span><span class="token punctuation">&#125;</span>,<span class="token punctuation">]</span><span class="token punctuation">&#125;</span>,<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="常用插件介绍"><a href="#常用插件介绍" class="headerlink" title="常用插件介绍"></a>常用插件介绍</h1><blockquote><p>压缩插件</p></blockquote><pre class="line-numbers language-js" data-language="js"><code class="language-js">这个插件是webpack自带的<span class="token comment">// 用webpack压缩代码，可以忽略代码中的警告</span><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>optimize<span class="token punctuation">.</span>UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>compress<span class="token operator">:</span> <span class="token punctuation">&#123;</span>warnings<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>CSS插件</li></ul><blockquote><p>npm install –save-dev extract-text-webpack-plugin</p></blockquote><pre class="line-numbers language-js" data-language="js"><code class="language-js">使用<span class="token comment">// 可以新建多个抽离样式的文件，这样就可以有多个css文件了。</span><span class="token keyword">new</span> <span class="token class-name">ExtractTextPlugin</span><span class="token punctuation">(</span><span class="token string">"app.css"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token comment">// 可以新建多个抽离样式的文件，这样就可以有多个css文件了。</span><span class="token keyword">new</span> <span class="token class-name">ExtractTextPlugin</span><span class="token punctuation">(</span><span class="token string">"app.css"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span>修改loaders中的配置：<span class="token punctuation">&#123;</span>test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>loader<span class="token operator">:</span> ExtractTextPlugin<span class="token punctuation">.</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token string">'style-loader'</span> <span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>html页面插件</li></ul><blockquote><p>npm install –save-dev html-webpack-plugin </p></blockquote><p>使用</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 自动生成index.html页面插件</span><span class="token keyword">var</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>template<span class="token operator">:</span> <span class="token string">'./src/template.html'</span><span class="token punctuation">,</span>htmlWebpackPlugin<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string">"files"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string">"css"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"app.css"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"js"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"vendors.js"</span><span class="token punctuation">,</span><span class="token string">"bundle.js"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>minify<span class="token operator">:</span> <span class="token punctuation">&#123;</span>removeComments<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>collapseWhitespace<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>removeAttributeQuotes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>删除插件</li></ul><blockquote><p>npm install –save-dev clean-webpack-plugin</p></blockquote><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 删除文件夹</span><span class="token keyword">var</span> CleanPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'clean-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token comment">// 构建之前先删除dist目录下面的文件夹</span><span class="token keyword">new</span> <span class="token class-name">CleanPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'dist'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>去掉react中的警告</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js">plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DefinePlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token comment">//去掉react中的警告，react会自己判断</span><span class="token string">'process.env'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token constant">NODE_ENV</span><span class="token operator">:</span> <span class="token string">'"production"'</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><blockquote><p>输入npm install webpack –save-dev </p></blockquote><p><strong>局部安装webpack提示无法依赖</strong><br>    npm ERR！ Windows_NT 6.1.7601<br>说明你执行命令的目录里有一个package.json文件，并且该文件里的name字段就叫webpack。换个名字就好了</p><h1 id="webpack-插件"><a href="#webpack-插件" class="headerlink" title="webpack 插件"></a>webpack 插件</h1><p><strong>学习插件的第一步，是进入其主页，先把它的 readme 文档看看，至少知道它是干什么的，能解决什么问题，最后知道如何用就行了</strong></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序</title>
      <link href="web/wx/"/>
      <url>web/wx/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h1><h3 id="图片等比例"><a href="#图片等比例" class="headerlink" title="图片等比例"></a>图片等比例</h3><pre class="line-numbers language-none"><code class="language-none">&lt;image src&#x3D;&quot;test.png&quot; mode&#x3D;&quot;widthFix&quot;&#x2F;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="动态标题"><a href="#动态标题" class="headerlink" title="动态标题"></a>动态标题</h3><p>onLoad的时候动态设置标题</p><pre class="line-numbers language-none"><code class="language-none">wx.setNavigationBarTitle(&#123;  title: &#39;新标题&#39;&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="扫一扫"><a href="#扫一扫" class="headerlink" title="扫一扫"></a>扫一扫</h1><pre class="line-numbers language-none"><code class="language-none"> var scene &#x3D; decodeURIComponent(options.scene); &#x2F;&#x2F;获取等号前的let queryarr &#x3D; scene.split(&quot;&#x3D;&quot;)[0];&#x2F;&#x2F;多个值转对象  filterUrlParam : (urlSearch) &#x3D;&gt; &#123;    let ret &#x3D; &#123;&#125;    let regParam &#x3D; &#x2F;([^&amp;&#x3D;]+)&#x3D;([\w\W]*?)(&amp;|$|#)&#x2F;g    if (urlSearch) &#123;      var strParam &#x3D; urlSearch;      var result      while ((result &#x3D; regParam.exec(strParam)) !&#x3D; null) &#123;        ret[result[1]] &#x3D; result[2]      &#125;    &#125;    return ret  &#125;,    &#x2F;&#x2F;web端显示二进制流图片  const url &#x3D; &#39;data:image&#x2F;png;base64,&#39; + encodeURI(response.data.qrCode)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="小程序-插入"><a href="#小程序-插入" class="headerlink" title="小程序 插入"></a>小程序 插入</h3><pre class="line-numbers language-none"><code class="language-none">const yi &#x3D; &#123;&quot;id&quot;: count,&quot;name&quot;: name,&quot;time&quot;: time&#125;let list &#x3D;jicilist.concat(yi)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="小程序-appId"><a href="#小程序-appId" class="headerlink" title="小程序 appId"></a>小程序 appId</h1><blockquote><h3 id="wx-getAccountInfoSync"><a href="#wx-getAccountInfoSync" class="headerlink" title="wx.getAccountInfoSync()"></a>wx.getAccountInfoSync()</h3></blockquote><h3 id="小程序的更新机制"><a href="#小程序的更新机制" class="headerlink" title="小程序的更新机制"></a>小程序的更新机制</h3><p>开发者可以通过 wx.getUpdateManager可以获知是否有新版本小程序、新版本是否下载好以及应用新版本的能力</p><h1 id="小程序-实现横向滚动"><a href="#小程序-实现横向滚动" class="headerlink" title="小程序 实现横向滚动"></a>小程序 实现横向滚动</h1><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scroll-view</span> <span class="token attr-name">scroll-x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"> <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span><span class="token style language-css"><span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span></span><span class="token punctuation">'</span></span></span> <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>&#123;&#123;viewPath&#125;&#125;<span class="token punctuation">'</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>&#123;&#123;item&#125;&#125;<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>&#123;&#123;item&#125;&#125;<span class="token punctuation">'</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>bigimg<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>iconfont icon-ai54<span class="token punctuation">'</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>delimg<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scroll-view</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS</title>
      <link href="web/xss/"/>
      <url>web/xss/</url>
      
        <content type="html"><![CDATA[<h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><p>当浏览器请求 <a href="http://xxx/search?keyword=&quot;">http://xxx/search?keyword=&quot;</a></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'XSS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span> 时，服务端会解析出请求参数 keyword，得到 "<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'XSS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p> 拼接到 HTML 中返回给浏览器。形成了如下的 HTML：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> value<span class="token operator">=</span><span class="token string">""</span> <span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'XSS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>"<span class="token operator">&lt;</span>button<span class="token operator">~</span>搜索<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span>div<span class="token operator">></span>您搜索的关键词是："<span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'XSS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> value<span class="token operator">=</span><span class="token string">"&lt;%= escapeHTML(getParameter("</span>keyword<span class="token string">")) %"</span><span class="token operator">></span><span class="token operator">&lt;</span>button<span class="token operator">~</span>搜索<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span>div<span class="token operator">></span>您搜索的关键词是：<span class="token operator">&lt;</span><span class="token operator">%=</span> <span class="token function">escapeHTML</span><span class="token punctuation">(</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"keyword"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>escapeHTML()</strong></p><pre class="line-numbers language-js" data-language="js"><code class="language-js">http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>xxx<span class="token operator">/</span><span class="token operator">?</span>redirect_to<span class="token operator">=</span>javascript<span class="token operator">:</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'XSS'</span><span class="token punctuation">)</span><span class="token comment">// 禁止 URL 以 "javascript:" 开头</span>xss <span class="token operator">=</span> <span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"redirect_to"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'javascript:'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>xss<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"~%= escapeHTML(getParameter("</span>redirect_to<span class="token string">"))%~"</span><span class="token operator">></span>跳转<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"/404"</span><span class="token operator">~</span>跳转<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">&#125;</span><span class="token comment">// 根据项目情况进行过滤，禁止掉 "javascript:" 链接、非法 scheme 等</span>allowSchemes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"http"</span><span class="token punctuation">,</span> <span class="token string">"https"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>valid <span class="token operator">=</span> <span class="token function">isValid</span><span class="token punctuation">(</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"redirect_to"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> allowSchemes<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>valid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"~%= escapeHTML(getParameter("</span>redirect_to<span class="token string">"))%>"</span><span class="token operator">></span>跳转<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"/404"</span><span class="token operator">></span>跳转<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 插入 JSON 的地方不能使用 escapeHTML()，因为转义 “ 后，JSON 格式会被破坏。</p><pre class="line-numbers language-none"><code class="language-none">var initData &#x3D; &lt; escapeEmbedJSON(data.toJSON()) &#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>DOM 型 XSS 攻击，实际上就是网站前端 JavaScript 代码本身不够严谨，把不可信的数据当作代码执行了。</p><p>在使用 .innerHTML、.outerHTML、document.write() 时要特别小心，不要把不可信的数据作为 HTML 插到页面上，而应尽量使用 .textContent、.setAttribute() 等。</p><p>如果用 Vue/React 技术栈，并且不使用 v-html/dangerouslySetInnerHTML 功能，就在前端 render 阶段避免 innerHTML、outerHTML 的 XSS 隐患。</p><p>DOM 中的内联事件监听器，如 location、onclick、onerror、onload、onmouseover 等，<del>a</del> 标签的 href 属性，JavaScript 的 eval()、setTimeout()、setInterval() 等，都能把字符串作为代码运行。如果不可信的数据拼接到字符串中传递给这些 API，很容易产生安全隐患，请务必避免。</p><blockquote><p>XSS攻击可以分为3类：反射型（非持久型）、存储型（持久型）、基于DOM。</p></blockquote><p><strong>反射型</strong></p><p>反射型 XSS 只是简单地把用户输入的数据 “反射” 给浏览器，这种攻击方式往往需要攻击者诱使用户点击一个恶意链接，或者提交一个表单，或者进入一个恶意网站时，注入脚本进入被攻击者的网站。</p><p>看一个示例。我先准备一个如下的静态页：</p><p><img src="https://user-images.githubusercontent.com/7871813/42720000-30a9b93a-8752-11e8-879b-edd8519f4e3e.png"></p><p>恶意链接的地址指向了 localhost:8001/?q=111&amp;p=222。然后，我再启一个简单的 Node 服务处理恶意链接的请求：</p><pre class="line-numbers language-none"><code class="language-none">const http &#x3D; require(&#39;http&#39;);function handleReequest(req, res) &#123;res.setHeader(&#39;Access-Control-Allow-Origin&#39;, &#39;*&#39;);res.writeHead(200, &#123;&#39;Content-Type&#39;: &#39;text&#x2F;html; charset&#x3D;UTF-8&#39;&#125;);res.write(&#39;&lt;script&gt;alert(&quot;反射型 XSS 攻击&quot;)&lt;&#x2F;script&gt;&#39;);res.end();&#125;const server &#x3D; new http.Server();server.listen(8001, &#39;127.0.0.1&#39;);server.on(&#39;request&#39;, handleReequest);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当用户点击恶意链接时，页面跳转到攻击者预先准备的页面，会发现在攻击者的页面执行了 js 脚本：</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;weibo.com&#x2F;login.php?&#39;u&#x3D;1931138954&#39;&lt;script&gt;alert(&#x2F;ssss&#x2F;)&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用标签iframe.</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;weibo.com&#x2F;login.php?&#39;u&#x3D;1931138954&#39;&lt;iframe src&#x3D;&#39;http:&#x2F;&#x2F;www.baidu.com&#39;&#x2F;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>存储型</strong></p><p>存储型 XSS 会把用户输入的数据 “存储” 在服务器端，当浏览器请求数据时，脚本从服务器上传回并执行。这种 XSS 攻击具有很强的稳定性。</p><pre class="line-numbers language-none"><code class="language-none">&lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;input&quot;&gt;&lt;button id&#x3D;&quot;btn&quot;&gt;Submit&lt;&#x2F;button&gt;&lt;script&gt;    const input &#x3D; document.getElementById(&#39;input&#39;);    const btn &#x3D; document.getElementById(&#39;btn&#39;);    let val;         input.addEventListener(&#39;change&#39;, (e) &#x3D;&gt; &#123;        val &#x3D; e.target.value;    &#125;, false);    btn.addEventListener(&#39;click&#39;, (e) &#x3D;&gt; &#123;        fetch(&#39;http:&#x2F;&#x2F;localhost:8001&#x2F;save&#39;, &#123;            method: &#39;POST&#39;,            body: val        &#125;);    &#125;, false);&lt;&#x2F;script&gt;     启动一个 Node 服务监听 save 请求。为了简化，用一个变量来保存用户的输入：const http &#x3D; require(&#39;http&#39;);let userInput &#x3D; &#39;&#39;;function handleReequest(req, res) &#123;    const method &#x3D; req.method;    res.setHeader(&#39;Access-Control-Allow-Origin&#39;, &#39;*&#39;);    res.setHeader(&#39;Access-Control-Allow-Headers&#39;, &#39;Content-Type&#39;)        if (method &#x3D;&#x3D;&#x3D; &#39;POST&#39; &amp;&amp; req.url &#x3D;&#x3D;&#x3D; &#39;&#x2F;save&#39;) &#123;        let body &#x3D; &#39;&#39;;        req.on(&#39;data&#39;, chunk &#x3D;&gt; &#123;            body +&#x3D; chunk;        &#125;);        req.on(&#39;end&#39;, () &#x3D;&gt; &#123;            if (body) &#123;                userInput &#x3D; body;            &#125;            res.end();        &#125;);    &#125; else &#123;        res.writeHead(200, &#123;&#39;Content-Type&#39;: &#39;text&#x2F;html; charset&#x3D;UTF-8&#39;&#125;);        res.write(userInput);        res.end();    &#125;&#125;const server &#x3D; new http.Server();server.listen(8001, &#39;127.0.0.1&#39;);server.on(&#39;request&#39;, handleReequest);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://user-images.githubusercontent.com/7871813/42720476-eb71a5c8-8759-11e8-8763-eb08b3480201.gif"></p><p><strong>基于DOM</strong></p><p>基于 DOM 的 XSS 攻击是指通过恶意脚本修改页面的 DOM 结构，是纯粹发生在客户端的攻击。</p><p>看如下代码：</p><pre class="line-numbers language-none"><code class="language-none">&lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;input&quot;&gt;&lt;button id&#x3D;&quot;btn&quot;&gt;Submit&lt;&#x2F;button&gt;&lt;div id&#x3D;&quot;div&quot;&gt;&lt;&#x2F;div&gt;   const input &#x3D; document.getElementById(&#39;input&#39;);   const btn &#x3D; document.getElementById(&#39;btn&#39;);   const div &#x3D; document.getElementById(&#39;div&#39;);   let val;       input.addEventListener(&#39;change&#39;, (e) &#x3D;&gt; &#123;       val &#x3D; e.target.value;   &#125;, false);   btn.addEventListener(&#39;click&#39;, () &#x3D;&gt; &#123;       div.innerHTML &#x3D; &#96;&lt;a href&#x3D;$&#123;val&#125;&gt;testLink&lt;&#x2F;a&gt;&#96;   &#125;, false);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>点击 Submit 按钮后，会在当前页面插入一个链接，其地址为用户的输入内容。如果用户在输入时构造了如下内容：</p><pre class="line-numbers language-none"><code class="language-none">&#39;&#39; onclick&#x3D;alert(&#x2F;xss&#x2F;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用户提交之后，页面代码就变成了：</p><pre class="line-numbers language-none"><code class="language-none">&lt;a href onlick&#x3D;&quot;alert(&#x2F;xss&#x2F;)&quot;&gt;testLink&lt;&#x2F;a&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="XSS-攻击的防范"><a href="#XSS-攻击的防范" class="headerlink" title="XSS 攻击的防范"></a>XSS 攻击的防范</h2><p><strong>输入检查</strong><br>用于对用户输入所包含的特殊字符或标签进行编码或过滤，如 &lt;，&gt;，script，防止 XSS 攻击</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; vuejs 中的 decodingMap&#x2F;&#x2F; 在 vuejs 中，如果输入带 script 标签的内容，会直接过滤掉const decodingMap &#x3D; &#123;  &#39;&lt;&#39;: &#39;&lt;&#39;,  &#39;&gt;&#39;: &#39;&gt;&#39;,  &#39;&quot;&#39;: &#39;&quot;&#39;,  &#39;&amp;&#39;: &#39;&amp;&#39;,  &#39;&amp;#10;&#39;: &#39;\n&#39;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p>CSRF 攻击是攻击者借助受害者的 Cookie 骗取服务器的信任</p><ul><li><p>会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）</p></li><li><p>个性化设置（如用户自定义设置、主题等）</p></li><li><p>个性化设置（如用户自定义设置、主题等）</p></li></ul><p>通过 Cookie 进行 CSRF 攻击</p><p>假设有一个 bbs 站点：<a href="http://www.c.com,当登录后的用户发起如下/">http://www.c.com，当登录后的用户发起如下</a> GET 请求时，会删除 ID 指定的帖子：</p><pre><code>http://www.c.com:8002/content/delete/:id</code></pre><p><strong>CSRF 攻击的防范</strong></p><p>CSRF (Cross—Site Request Forgery)，既跨站点请求伪造，也被叫做 XSRF，和 XSS 一样也是一种比较常见的 web 攻击。CSRF攻击者会过过构造的第三方页面诱导受害者完成加载或者点击，利用受害者的权限，以其身份向合法网站发起恶意请求，通常用户发生状态改变的请求，比如虚拟货币的转账，账号信息修改，恶意发邮件等等，由于具有一定的隐蔽性，所以比较防范。</p><p> 我们通过一个简单例子来演示 CSRF的攻击原理，如上图所示（TODO需要重做），正常网站A，攻击网站B，用户C，正常网站具有一个虚拟币转账的公功能，转账通过GET请求完成，且网站A不具备 CSRF 防范机制，攻击者利用这个漏洞恶意构造网站B，诱导用户C访问，达到恶意转账目的。</p><p>转账的GET请求如下：</p><pre class="line-numbers language-none"><code class="language-none">GET http:&#x2F;&#x2F;normal-site.com&#x2F;transfer.do?from&#x3D;rommel&amp;to&#x3D;alice&amp;amount&#x3D;100 HTTP&#x2F;1.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是我们出于演示方便使用GET请求来完成转账，实际应用远比这个列子要复杂，需要更加安全的机制，比如一次性 token，https 等，而且一般都是用POST请求。<br>​</p><p>CSRF 的攻击过程过程图上图所示：</p><p>CSRF 攻击有一个前提条件，是用户具有某个正常访问的访问权限。一般网站的访问断线都具备一定的有效期，比如1天过期，或者几个小时骨气，再次期间权限信息会保留在用户浏览器的cookie中，这本例子中假设用户C刚刚登录了网站A，全新还没有过期。</p><p>攻击者利用正常网站A的CSFR漏洞，构造页面一个恶意网页B，在页面中包含对发往正常网站A的请求，在用户C加载页面B（或者点击某些元素时触发）时，会触发攻击请求，目的是为了实现虚拟币的转账，请求可能隐藏得很深，用户并不一定能发现，伪造的请求如下：</p><pre><code>![](https://coderxing.gitbooks.io/architecture-evolution/assets/0D485010-0672-43D8-AC1E-9468D64AA14F.png)</code></pre><p>由于加载恶意页面B和触发攻击请求都是在用户浏览器端完成的，因为之前用户登录过正常网站，发往正常网站的请求会带有用户授权信息（在cookie中），在授权信息没有过期的情况达到攻击目的。</p><p>CSRF 的防范</p><p>目前主要有如下几种方式：</p><p>添加 Referer 域名白名单：HTTP 的 Referer 头记录了当前请求的来源页面的URL，如果用户是通过浏览器打开的网页一般都会带有这个信息。可以验证 URL 的域名是否在网站允许的白名单呢内，如果不在则拒绝请求。这种方式实现比较简单，而且可以在web 服务器层统一配置，减少了后端开发成本，当 Referer 页可以伪造，用户浏览器的可靠性也不能完全信赖，判断 Referer 可以做为一种辅助手段，但不能根治 CSRF。</p><p>令牌 (Token )验证：令牌验证的方式，这是目前方法CSRF的一种普遍方法，其原理是在用户正式提交数据更新之前，给用户生成一个 token，一方面token保存在服务端，比如Session 或者缓存中，一方面输出请求发生的页面上，在用户提交请求时连同token一同提交，服务获得接收到请求之后再做token验证，token 不存在、或者token不一致，或者失效都算作验证失败。token 的生成具有一定的随机性，而且是在提交数据的页面生成，攻击这往往难于伪造。token 一般作为一个post 字段提交，或者作为ajax请求的header信息提交，例如：</p><pre class="line-numbers language-none"><code class="language-none">&lt;form&gt;&lt;input name&#x3D;&quot;from&quot; value&#x3D;&quot;rommel&quot; &#x2F;&gt;&lt;input name&#x3D;&quot;to&quot; value&#x3D;&quot;&quot; &#x2F;&gt;&lt;input name&#x3D;&quot;csrf_token&quot; value&#x3D;&quot;QMYjiBlZ9V9mGnap&quot; &#x2F;&gt;&lt;&#x2F;form&gt;$.ajax(&#123;headers: &#123;&quot;X-CSRF-TOKEN&quot;: &quot;QMYjiBlZ9V9mGnap&quot;&#125;&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>另外，为了更可靠的安全性，token 在使用之后一般置为失效，避免被窃取。</p><p>二次验证：对于一些铭感操作，比如设计到交易的操作，可以更加严格一些。在用户提交时可以让用户输入验证码，或者再次输入交易密码，确保是用户的真实操作，而不是机器触发的。</p><p>使用 SameSite Cookie 属性：SameSite 是在跨域请求时是否传输 Cookie 的一种约束，顾名思义在 SameSite 的限制下，Cookie 的传输必须在同一个域名下。SameSite 属性有两种限制模式 strict 和 lax，默认为 lax。下面举例说明，对于下面的代码：</p><pre class="line-numbers language-none"><code class="language-none">&lt;?php&#x2F;&#x2F;www.a.com&#x2F;test_samecookie.php&#x2F;&#x2F;第二个参数为false表示不不进行覆盖，否则只能设置一个cookieheader(&quot;Set-Cookie: cookie1&#x3D;value1; domain&#x3D;a.com; SameSite&#x3D;Strict&quot;, false);header(&quot;Set-Cookie: cookie2&#x3D;value2; domain&#x3D;a.com; SameSite&#x3D;Lax&quot;, false);?&gt;访问，www.a.com&#x2F;test_samecookie.php 通过Chome 的开发者工具查看cookie信息，如下：在 www.b.com&#x2F;access_same_page_in_site.php 构造同样的页面访问 www.a.com 中的任何页面。&lt;a href&#x3D;&quot;www.a.com&#x2F;test.html&quot;&gt;test&lt;&#x2F;a&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>点击页面上的链接之后，会发现，只有 cookie2 传递到了<a href="http://www.a.com/">www.a.com</a> strict 模式限制所有的跨域cookie传输，lax 模式相当于在安全性和可用性之间做了个折中，某些场景允许跨域传输，比如 a 标签中中的GET请求，但会对 img、iframe 和 ajax 中的GET请求以及POST请求做限制，<br>目前只有 Chrome 和 Opera 浏览器支持 SameSite 属性。</p><pre class="line-numbers language-none"><code class="language-none">&lt;?php$callback &#x3D; $_GET[&#39;callback&#39;];$data &#x3D; array(&#39;userid&#39; &#x3D;&gt; &#39;12345678&#39;,&#39;usernick&#39; &#x3D;&gt; &#39;coderxing&#39;);$json &#x3D; json_encode($data);echo &quot;$callback($json);&quot;;?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出内容为：</p><pre class="line-numbers language-none"><code class="language-none">cb(&#123;&quot;userid&quot;:&quot;12345678&quot;,&quot;usernick&quot;:&quot;coderxing&quot;&#125;);B 网站通过 JQuery 使用 jsonp 的代码如下：&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;jquery&#x2F;3.2.1&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;$.ajax(&#123;url:&quot;http:&#x2F;&#x2F;www.a.com&#x2F;jsonp.php?callback&#x3D;cb&quot;,dataType:&#39;jsonp&#39;,jsonp:&#39;callback&#39;,success:function(result) &#123;console.log(result);&#125;&#125;);&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过Chrome浏览器访问：<a href="http://www.b.com/use_jsonp.html%EF%BC%8C%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%BC%9A%E8%BE%93%E5%87%BA">http://www.b.com/use_jsonp.html，控制台会输出</a>:</p><pre class="line-numbers language-none"><code class="language-none">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;var url &#x3D; &quot;http:&#x2F;&#x2F;www.a.com&#x2F;jsonp.php?callback&#x3D;cb&quot;;&#x2F;&#x2F;创建 script 节点var scriptNode &#x3D; document.createElement(&#39;script&#39;);scriptNode.type &#x3D; &#39;text&#x2F;javascript&#39;;scriptNode.src &#x3D; url;&#x2F;&#x2F;和好回调函数名称一致var cb &#x3D; function(data)&#123;console.log(data);&#125;&#x2F;&#x2F;动态添加 script 节点document.head.appendChild(scriptNode);&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 动态添加 script 节点之后，会自动加载 jsonp 网络请求，由于回调函数的名称为为 cb，当加载成功之后会自动执行 cb(data); 函数，使用JSON数据。</p><p> 上面的 PHP 服务端代码没有加任何JSON劫持的防范，任何域名都可以通过JSONP的方式进行访问，就像前面CSRF一节介绍的攻击方法一样，如果攻击者诱导受害者访问含有攻击代码的页面，就会获取到相关的JSON数据，达到劫持目的，如果是登录之后才可见的数据，就会暴露用户隐私。</p><p>对于JSON 劫持的方法其实和CSRF的防范方式是一脉相承的</p><p>对 Referer 进行严格检查，通过白名单方式进行拦截过滤，并包括 Referer 为空的情况，不在白名单内的域名，或Referer为空均返回失败。<br>使用一次性TOKEN，和JSONP请求同时发送。<br>对callback参数进行校验，限制长度，并过滤掉符号字符。</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信红包封面</title>
      <link href="tool/workweixin/"/>
      <url>tool/workweixin/</url>
      
        <content type="html"><![CDATA[<h2 id="微信红包封面"><a href="#微信红包封面" class="headerlink" title="微信红包封面"></a>微信红包封面</h2><p>#微信红包封面 #</p><p>定制“微信红包封面”，成员领取后可在发微信红包时使用</p><p><a href="https://work.weixin.qq.com/nl/wxhongbao/guide/manual">文档地址</a></p><p>发红包的时候选择企业封面即可</p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PDFJS</title>
      <link href="web/pdfjs/"/>
      <url>web/pdfjs/</url>
      
        <content type="html"><![CDATA[<h2 id="PDFJS在线预览PDF"><a href="#PDFJS在线预览PDF" class="headerlink" title="PDFJS在线预览PDF"></a>PDFJS在线预览PDF</h2><p>df.js是一款开源的pdf文档读取解析插件，据说在HTML5下诞生的，对于主流的浏览器基本都支持。</p><p><strong>使用pdfjs在线预览pdf可以有两个选择：</strong></p><ol><li>使用pdfjs已经写好的viewer.html页面<br>pdf.js主要包含两个库文件，一个pdf.js和一个pdf.worker.js，，一个负责API解析，一个负责核心解析</li></ol><p>官网GitHub地址如下：<a href="https://github.com/mozilla/pdf.js">https://github.com/mozilla/pdf.js</a></p><p><a href="http://mozilla.github.io/pdf.js/">http://mozilla.github.io/pdf.js/</a></p><p>浏览pdf文档：<a href="http://xxxxxx/viewer.html?name=pdf%E5%9C%B0%E5%9D%80">http://xxxxxx/viewer.html?name=pdf地址</a></p><p>pdf.js nmp 搭建或者找个web目录放入，不跨域</p><p> <strong>viewer.js</strong></p><blockquote><p>var DEFAULT_URL = ‘compressed.tracemonkey-pldi-09.pdf’  里面是PDF</p></blockquote><ol start="2"><li>我们只用修改viewer.js文件中的pdf路径参数即可：</li></ol><blockquote><p>var DEFAULT_URL = ‘09.pdf’;</p></blockquote><p>如果pdf文件与viewer.html不在一层目录中，改成相对路径即可：</p><blockquote><p>var DEFAULT_URL = ‘ ../doc/ 09.pdf’;</p></blockquote><p><strong>下面我就介绍下，具体嵌入项目中是如何运用的！</strong></p><blockquote><p>页面可以使用iframe标签来加载pdf</p></blockquote><pre><code>&lt;iframe src=&quot;x/pdfJs/generic/web/viewer.html&quot; /&gt;?file=xxx&quot; /&gt;&quot; width=&quot;100%&quot; height=&quot;800&quot;&gt;&lt;/iframe&gt;</code></pre><p><img src="https://www.linuxidc.com/upload/2015_06/150612094867576.png"></p><blockquote><p>不知道大家有没有试过下面这段url请求:</p></blockquote><pre><code>http://localhost:8080/akane/resources/plugin/pdfJs/generic/web/viewer.html?file=/akane/displayPDF.do?id=966c6f0e-3c06-4154-aafd-afdbee5bcb65</code></pre><p> 我们在实际应用中，可能会根据不同的参数，来选择展示不同的pdf文件，此时就涉及到传参的问题了，仔细观察上面这段url地址会发现，在file请求参数中的值为一个url地址，而这个url地址又追加了自己的请求参数，这就导致一个url地址中出现2个”?”</p><p>导致浏览器不能正常解析这段url！</p><p>一种解决思路是：我们可以把file形参的值，先编码，然后再解码来解决这个问题！</p><p>此时，就可以请encodeURIComponent()函数出场了！因为其为js函数，所以需要在文档就绪函数中动态为iframe设置src的值，如下所示：</p><pre><code>&lt;%@ page contentType=&quot;text/html;charset=GBK&quot; language=&quot;java&quot; %&gt;&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;&lt;script type=&quot;text/javascript&quot;&gt;    $(function()&#123;        $(&quot;#displayPdfIframe&quot;).attr(&quot;src&quot;,&#39;&lt;c:url value=&quot;/resources/plugin/pdfJs/generic/web/viewer.html&quot; /&gt;?file=&#39; + encodeURIComponent(&#39;&lt;c:url value=&quot;/displayPDF.do?id=$&#123;id&#125;&quot;/&gt;&#39;));    &#125;);&lt;/script&gt;&lt;div class=&quot;ctrlDiv&quot;&gt;    &lt;div class=&quot;eleContainer elePaddingBtm&quot;&gt;        &lt;iframe id=&quot;displayPdfIframe&quot; width=&quot;100%&quot; height=&quot;100%&quot;&gt;&lt;/iframe&gt;    &lt;/div&gt;&lt;/div&gt; </code></pre><p>既然有编码，那么就一定要有解码来解析他，不过这个工作generic/web/viewer.js已经替我们做过了，如下所示：</p><p><img src="https://www.linuxidc.com/upload/2015_06/150612094867577.png"></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PDFJS </tag>
            
            <tag> pdf.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wordpress</title>
      <link href="backend/wordpress/"/>
      <url>backend/wordpress/</url>
      
        <content type="html"><![CDATA[<h1 id="wordpress"><a href="#wordpress" class="headerlink" title="wordpress"></a>wordpress</h1><h2 id="wordpress主题"><a href="#wordpress主题" class="headerlink" title="wordpress主题"></a>wordpress主题</h2><blockquote><p><a href="https://wordpress.org/themes/">https://wordpress.org/themes/</a></p></blockquote><h2 id="解决wordpress打开慢"><a href="#解决wordpress打开慢" class="headerlink" title="解决wordpress打开慢"></a>解决wordpress打开慢</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$open_sans_font_url</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"https://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,300,400,600&amp;subset=<span class="token interpolation"><span class="token variable">$subsets</span></span>"</span><span class="token punctuation">;</span> <span class="token variable">$open_sans_font_url</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"https://fonts.useso.com/css?family=Open+Sans:300italic,400italic,600italic,300,400,600&amp;subset=<span class="token interpolation"><span class="token variable">$subsets</span></span>"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="加速网站"><a href="#加速网站" class="headerlink" title="加速网站"></a>加速网站</h2><p>WPJAM BASIC插件加速网站</p><p>使用CDN加速网站 可参考《<a href="https://aliyun.gaomeluo.com/414.html">wordpress如何使用阿里云CDN加速网站？</a>》</p><p>1安装静态插件，生成html静态页。我推荐使用WP Fastest Cache插件，具体查看《<a href="https://aliyun.gaomeluo.com/424.html">wordpress真正静态化插件WP Fastest Cache如何设置使用</a>》</p><p>2、wordpress开启Memcached缓存，具体查看《<a href="https://aliyun.gaomeluo.com/435.html">wordpress如何开启Memcached缓存来加速网站？</a>》</p><p>3、使用Cachify插件，具体查看《<a href="https://aliyun.gaomeluo.com/444.html">如何解决wordpress站waiting ttfb时间过长</a>》</p><h2 id="WordPress版微信小程序安装"><a href="#WordPress版微信小程序安装" class="headerlink" title="WordPress版微信小程序安装"></a>WordPress版微信小程序安装</h2><p><img src="https://s1.ax1x.com/2018/12/25/Fc3Uqs.png" alt="Fc3Uqs.png"><br>WordPress的插件里，有个json api 的插件</p><ul><li>配置微信小程序的服务器域名和业务域名</li><li>配置HTTPS <a href="https://www.watch-life.net/wordpress/wordpress-https-link.html">参考</a></li><li>安装Wordpress版微信小程序</li></ul>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>travis-ci</title>
      <link href="server/travis-ci/"/>
      <url>server/travis-ci/</url>
      
        <content type="html"><![CDATA[<h2 id="travis-ci"><a href="#travis-ci" class="headerlink" title="travis-ci"></a>travis-ci</h2><ul><li>获取 travis-ci 项目的 ID 跟 slug</li><li><a href="https://api.travis-ci.org/owner/zhangsison/repos">https://api.travis-ci.org/owner/zhangsison/repos</a></li></ul><p><img src="https://i.loli.net/2019/12/12/If2npYciqNCgdPK.png"></p>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> travis-ci </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gulp</title>
      <link href="web/gulp/"/>
      <url>web/gulp/</url>
      
        <content type="html"><![CDATA[<h2 id="gulp"><a href="#gulp" class="headerlink" title="gulp"></a>gulp</h2><p><img src="https://lc-gold-cdn.xitu.io/525072a07f737c146231.png?imageView2/1/w/1304/h/734/q/85/interlace/1"></p><h2 id="gulp-1"><a href="#gulp-1" class="headerlink" title="gulp"></a>gulp</h2><p><a href="https://gulpjs.com/">gulp</a>是一个自动化工具,搭建web服务器,文件保存时自动重载浏览器,合并文件、压缩代码、检查语法错误、将Sass代码转成CSS代码等等,可以帮助我们自动管理和运行各种任务</p><h2 id="gulp安装"><a href="#gulp安装" class="headerlink" title="gulp安装"></a>gulp安装</h2><p>先安装Node.js npm</p><blockquote><p>官方示例</p><p>npm install gulp-cli -g</p><p>npm install gulp -D</p><p>npx -p touch nodetouch gulpfile.js</p><p>gulp –help</p></blockquote><h2 id="创建Gulp项目"><a href="#创建Gulp项目" class="headerlink" title="创建Gulp项目"></a>创建Gulp项目</h2><p>首先，我们新建一个文件夹，并在该目录下执行npm init命令</p><blockquote><p>npm init</p></blockquote><p>npm init命令会为你创建一个package.json文件，这个文件保存着这个项目相关信息。</p><h2 id="gulpfile-js"><a href="#gulpfile-js" class="headerlink" title="gulpfile.js"></a>gulpfile.js</h2><p>项目根目录下创建一个名为 gulpfile.js 的文件，此文件为gulp的配置文件</p><pre><code> var gulp = require(&#39;gulp&#39;),//基础库    htmlmin = require(&#39;gulp-htmlmin&#39;),//html压缩    uglify = require(&#39;gulp-uglify&#39;);    clean = require(&#39;gulp-clean-css&#39;);    imagemin = require(&#39;gulp-imagemin&#39;);    rename = require(&#39;gulp-rename&#39;);    concat = require(&#39;gulp-concat&#39;);</code></pre><p>​<br>​<br>    // 压缩js<br>    gulp.task(‘htmlcompress’, function () {<br>      return gulp.src(‘*.html’)<br>        .pipe(htmlmin())<br>        .pipe(gulp.dest(‘/www/yasuo/ya/‘))<br>    })</p><p>​<br>    // 压缩js<br>    gulp.task(‘jscompress’, function () {<br>      return gulp.src(‘js/*.js’)<br>        .pipe(uglify())<br>        .pipe(gulp.dest(‘/www/yasuo/ya/js’))<br>    })</p><pre><code>// 压缩cssgulp.task(&#39;csscompress&#39;, function () &#123;  return gulp.src(&#39;css/*.css&#39;)    .pipe(clean())    .pipe(gulp.dest(&#39;/www/yasuo/ya/css&#39;))&#125;)// 压缩imagegulp.task(&#39;imagecompress&#39;, function () &#123;  return gulp.src([&#39;images/*.jpg&#39;, &#39;images/*.png&#39;])    .pipe(imagemin())    .pipe(gulp.dest(&#39;/www/yasuo/ya/images&#39;))&#125;)// 合并jsgulp.task(&#39;concatJs&#39;, function () &#123;  return gulp.src(&#39;js/index.js&#39;)    .pipe(concat(&#39;concat.js&#39;))    .pipe(gulp.dest(&#39;/www/zhuanpan/ya/js&#39;))&#125;)// 监听js和css的改动gulp.task(&#39;auto&#39;, function () &#123;  gulp.watch(&#39;js/*.js&#39;, [&#39;jscompress&#39;]);  gulp.watch(&#39;css/*.css&#39;, [&#39;csscompress&#39;]);&#125;)// 默认任务gulp.task(&#39;default&#39;, [&#39;jscompress&#39;, &#39;csscompress&#39;, &#39;imagecompress&#39;, &#39;concatJs&#39;, &#39;htmlcompress&#39;]);// gulp.task(&#39;default&#39;, [ &#39;csscompress&#39;, &#39;imagecompress&#39;,  &#39;htmlcompress&#39;]);</code></pre><h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><p>gulp-load-plugins：自动加载 package.json 中的 gulp 插件，避免一个个require插件<br>gulp-rename： 重命名<br>gulp-uglify：文件压缩<br>gulp-concat：文件合并<br>gulp-less：编译 less<br>gulp-sass：编译 sass<br>gulp-clean-css：压缩 CSS 文件<br>gulp-htmlmin：压缩 HTML 文件<br>gulp-babel: 使用 babel 编译 JS 文件<br>gulp-jshint：jshint 检查<br>gulp-imagemin：压缩jpg、png、gif等图片<br>gulp-livereload：当代码变化时，它可以帮我们自动刷新页面，除在模块中需要安装外，还需要在浏览器中安装。<br>gulp-csso 压缩优化css<br>gulp-html-minify压缩HTML<br>gulp-imagemin压缩图片<br>gulp-zip ZIP压缩文件<br>gulp-base64将css文件里引用的图片转为base64</p><p><a href="https://gulpjs.com/plugins/">插件下载地址</a></p><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><ul><li>run-sequence - 按照顺序执行task (注意: 在 Gulp4.0 中, 已经提供了 gulp.series 方法)</li></ul><ul><li>gulp-if - If-Else-流程控制</li></ul><ul><li>gulp-ignore - 选择性过滤文件</li></ul><ul><li>gulp-filter - 过滤文件, 和 gulp-ignore感觉类似</li></ul><ul><li>merge-stream - Merge multiple streams into one interleaved stream.</li></ul><ul><li>event-stream - 方便操作stream</li></ul><ul><li>gulp-plumber - Prevent pipe breaking caused by errors.</li></ul><ul><li>gulp-notify - 系统通知</li></ul><ul><li>gulp-changed - 只通过修改过的文件</li></ul><ul><li>gulp-changed-in-place - 只通过修改过的文件<br>区别? </li></ul><ul><li>gulp-changed 比较的是生成的文件, gulp-changed-in-place比较的是源文件, 复杂情况用后者. (比如需要babel的时候)</li></ul><ul><li>gulp-order - 重新对文件进行排序 (引入顺序重要的话, 这个插件结合 event-stream 是神器)</li></ul><h2 id="gulp的API"><a href="#gulp的API" class="headerlink" title="gulp的API"></a>gulp的API</h2><p>使用gulp，仅需知道4个API即可：**gulp.task(),gulp.src(),gulp.dest(),gulp.watch()**，所以很容易就能掌握。为了避免出现理解偏差，建议先看一遍官方文档<br><a href="https://www.gulpjs.com.cn/docs/api/">https://www.gulpjs.com.cn/docs/api/</a></p><h2 id="匹配符-、-、！、"><a href="#匹配符-、-、！、" class="headerlink" title="匹配符 *、**、！、{}"></a>匹配符 *、**、！、{}</h2><pre><code>    gulp.src(&#39;./js/*.js&#39;)               // * 匹配js文件夹下所有.js格式的文件    gulp.src(&#39;./js/**/*.js&#39;)            // ** 匹配js文件夹的0个或多个子文件夹    gulp.src([&#39;./js/*.js&#39;,&#39;!./js/index.js&#39;])    // ! 匹配除了index.js之外的所有js文件    gulp.src(&#39;./js/**/&#123;omui,common&#125;.js&#39;)        // &#123;&#125; 匹配&#123;&#125;里的文件名</code></pre><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><pre><code>    var del = require(&#39;del&#39;);        del(&#39;./dist&#39;);                      // 删除整个dist文件</code></pre><h2 id="gulp-rename重命名文件"><a href="#gulp-rename重命名文件" class="headerlink" title="gulp-rename重命名文件"></a>gulp-rename重命名文件</h2><pre><code>var rename = require(&quot;gulp-rename&quot;);gulp.src(&#39;./hello.txt&#39;)  .pipe(rename(&#39;gb/goodbye.md&#39;))    // 直接修改文件名和路径  .pipe(gulp.dest(&#39;./dist&#39;));  gulp.src(&#39;./hello.txt&#39;)  .pipe(rename(&#123;    dirname: &quot;text&quot;,                // 路径名    basename: &quot;goodbye&quot;,            // 主文件名    prefix: &quot;pre-&quot;,                 // 前缀    suffix: &quot;-min&quot;,                 // 后缀    extname: &quot;.html&quot;                // 扩展名  &#125;))  .pipe(gulp.dest(&#39;./dist&#39;));</code></pre><h2 id="gulp-concat合并文件"><a href="#gulp-concat合并文件" class="headerlink" title="gulp-concat合并文件"></a>gulp-concat合并文件</h2><pre><code>var concat = require(&#39;gulp-concat&#39;);gulp.src(&#39;./js/*.js&#39;)    .pipe(concat(&#39;all.js&#39;))         // 合并all.js文件    .pipe(gulp.dest(&#39;./dist&#39;));    gulp.src([&#39;./js/demo1.js&#39;,&#39;./js/demo2.js&#39;,&#39;./js/demo2.js&#39;])    .pipe(concat(&#39;all.js&#39;))         // 按照[]里的顺序合并文件    .pipe(gulp.dest(&#39;./dist&#39;));</code></pre><h1 id="gulp自动化压缩合并、加版本号解决方案"><a href="#gulp自动化压缩合并、加版本号解决方案" class="headerlink" title="gulp自动化压缩合并、加版本号解决方案"></a>gulp自动化压缩合并、加版本号解决方案</h1><blockquote><p>主要是为了实现js/css的压缩合并、自动添加版本号和压缩html。</p></blockquote><pre><code>gulp-csso 压缩优化cssgulp-uglify 压缩jsgulp-html-minify 压缩htmlgulp-rev-all 生成版本号</code></pre><blockquote><p>主要通过上面插件实现功能，其他插件配合使用。</p></blockquote><pre><code>   // gulpfile.js   var gulp = require(&#39;gulp&#39;),    htmlmini = require(&#39;gulp-html-minify&#39;),    useref = require(&#39;gulp-useref&#39;),    uglify = require(&#39;gulp-uglify&#39;),    csso = require(&#39;gulp-csso&#39;),    filter = require(&#39;gulp-filter&#39;),    RevAll = require(&#39;gulp-rev-all&#39;),    del = require(&#39;del&#39;);    gulp.task(&#39;default&#39;,[&#39;del&#39;], function () &#123;        var jsFilter = filter(&#39;**/*.js&#39;,&#123;restore:true&#125;),            cssFilter = filter(&#39;**/*.css&#39;,&#123;restore:true&#125;),            htmlFilter = filter([&#39;**/*.html&#39;],&#123;restore:true&#125;);        gulp.src(&#39;/*.html&#39;)            .pipe(useref())                         // 解析html中的构建块            .pipe(jsFilter)                         // 过滤所有js            .pipe(uglify())                         // 压缩js            .pipe(jsFilter.restore)            .pipe(cssFilter)                        // 过滤所有css            .pipe(csso())                           // 压缩优化css            .pipe(cssFilter.restore)            .pipe(RevAll.revision(&#123;                 // 生成版本号                dontRenameFile: [&#39;.html&#39;],          // 不给 html 文件添加版本号                dontUpdateReference: [&#39;.html&#39;]      // 不给文件里链接的html加版本号            &#125;))            .pipe(htmlFilter)                       // 过滤所有html            .pipe(htmlmini())                       // 压缩html            .pipe(htmlFilter.restore)            .pipe(gulp.dest(&#39;/dist&#39;))    &#125;)        gulp.task(&#39;del&#39;,function () &#123;        del(&#39;/dist&#39;);                               // 构建前先删除dist文件里的旧版本    &#125;)</code></pre><blockquote><p>在html中，先定义好构建块。</p></blockquote><pre><code>    &lt;!DOCTYPE html&gt;    &lt;html lang=&quot;en&quot;&gt;    &lt;head&gt;        &lt;meta charset=&quot;UTF-8&quot;&gt;        &lt;title&gt;gulp自动化构建解决方案&lt;/title&gt;        &lt;!-- build:css static/css/index.css --&gt;     // 定义了构建后引用的css路径        &lt;link rel=&quot;stylesheet&quot; href=&quot;static/css/common.css&quot;/&gt;        &lt;link rel=&quot;stylesheet&quot; href=&quot;static/css/index.css&quot;/&gt;        &lt;!-- endbuild --&gt;    &lt;/head&gt;    &lt;body&gt;        ......                &lt;!-- build:js static/js/index.js --&gt;        // 定义了构建后引用的js路径        &lt;script src=&quot;static/js/jquery.js&quot;&gt;&lt;/script&gt;        &lt;script src=&quot;static/js/common.js&quot;&gt;&lt;/script&gt;        &lt;script src=&quot;static/js/index.js&quot;&gt;&lt;/script&gt;        &lt;!-- endbuild --&gt;    &lt;/body&gt;    &lt;/html&gt;</code></pre><blockquote><p>执行构建完成后，会生成 dist 文件夹，目录</p></blockquote><pre><code>    |-dist    |   |-static    |       |-css    |           |-index.96cf44da.css    |       |-js    |           |-index.42ce3282.js    |   |-index.html</code></pre><blockquote><p>构建完的index.html，我们忽略压缩的html，完成了压缩合并添加版本号等功能。</p></blockquote><pre><code>// dist/index.html&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;gulp自动化构建解决方案&lt;/title&gt;    &lt;link rel=&quot;stylesheet&quot; href=&quot;static/css/index.96cf44da.css&quot;/&gt;&lt;/head&gt;&lt;body&gt;    ......    &lt;script src=&quot;static/js/index.42ce3282.js&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gulp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git History</title>
      <link href="server/githistory/"/>
      <url>server/githistory/</url>
      
        <content type="html"><![CDATA[<h2 id="Git-History-查看git修改记录"><a href="#Git-History-查看git修改记录" class="headerlink" title="Git History 查看git修改记录"></a>Git History 查看git修改记录</h2><p><img src="https://user-images.githubusercontent.com/1911623/52460615-f3899d80-2b49-11e9-8c21-06af4097a527.gif"></p><h1 id="Git-History"><a href="#Git-History" class="headerlink" title="Git History"></a><a href="https://github.com/pomber/git-history">Git History</a></h1><p>快速浏览文件修改记录的 Git History</p><p>如上图所示，该工具的功能和使用方法简洁明了：<br>1、将任何文件的 URL 中的“github.com”替换成“github.githistory.xyz”即可<br>2、没有第二步</p><p>只要一步操作即可以动画的方式快速查看该文件的修改历史记录</p>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> History，git修改记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cookie、Session、Token、JWT</title>
      <link href="web/session/"/>
      <url>web/session/</url>
      
        <content type="html"><![CDATA[<h1 id="Cookie、Session、Token、JWT-的区别"><a href="#Cookie、Session、Token、JWT-的区别" class="headerlink" title="Cookie、Session、Token、JWT 的区别"></a>Cookie、Session、Token、JWT 的区别</h1><h2 id="认证（Authentication）"><a href="#认证（Authentication）" class="headerlink" title="认证（Authentication）"></a>认证（Authentication）</h2><p>通俗地讲就是验证当前用户的身份，证明“你是你自己”（比如：你每天上下班打卡，都需要通过指纹打卡，当你的指纹和系统里录入的指纹相匹配时，就打卡成功）</p><ul><li><p>互联网中的认证：</p><ul><li><p>用户名密码登录</p></li><li><p>邮箱发送登录链接</p></li><li><p>手机号接收验证码</p></li><li><p>只要你能收到邮箱/验证码，就默认你是账号的主人</p></li></ul></li></ul><h2 id="授权（Authorization）"><a href="#授权（Authorization）" class="headerlink" title="授权（Authorization）"></a>授权（Authorization）</h2><ul><li><p>用户授予第三方应用访问该用户某些资源的权限</p></li><li><p>你在安装手机应用的时候，APP 会询问是否允许授予权限（访问相册、地理位置等权限）</p></li><li><p>你在访问微信小程序时，当登录时，小程序会询问是否允许授予权限（获取昵称、头像、地区、性别等个人信息）</p></li><li><p>实现授权的方式有：cookie、session、token、OAuth</p></li></ul><h2 id="凭证（Credentials）"><a href="#凭证（Credentials）" class="headerlink" title="凭证（Credentials）"></a>凭证（Credentials）</h2><ul><li><p>实现认证和授权的前提是需要一种媒介（证书） 来标记访问者的身份</p><ul><li>在互联网应用中，一般网站（如掘金）会有两种模式，游客模式和登录模式。游客模式下，可以正常浏览网站上面的文章，一旦想要点赞/收藏/分享文章，就需要登录或者注册账号。当用户登录成功后，服务器会给该用户使用的浏览器颁发一个令牌（token），这个令牌用来表明你的身份，每次浏览器发送请求时会带上这个令牌，就可以使用游客模式下无法使用的功能。</li></ul></li></ul><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><ul><li>HTTP 是无状态的协议（对于事务处理没有记忆能力，每次客户端和服务端会话完成时，服务端不会保存任何会话信息）：每个请求都是完全独立的，服务端无法确认当前访问者的身份信息，无法分辨上一次的请求发送者和这一次的发送者是不是同一个人。所以服务器与浏览器为了进行会话跟踪（知道是谁在访问我），就必须主动的去维护一个状态，这个状态用于告知服务端前后两个请求是否来自同一浏览器。而这个状态需要通过 cookie 或者 session 去实现。</li><li>cookie 存储在客户端： cookie 是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。</li><li>cookie 是不可跨域的： 每个 cookie 都会绑定单一的域名，无法在别的域名下获取使用，一级域名和二级域名之间是允许共享使用的（靠的是 domain）。<br>cookie 重要的属性属性说明name=value键值对，设置 Cookie 的名称及相对应的值，都必须是字符串类型</li></ul><table><thead><tr><th>属性</th><th align="center">说明</th></tr></thead><tbody><tr><td>name=value</td><td align="center">键值对，设置 Cookie 的名称及相对应的值，都必须是字符串类型- 如果值为 Unicode 字符，需要为字符编码。- 如果值为二进制数据，则需要使用 BASE64 编码。</td></tr><tr><td></td><td align="center"></td></tr><tr><td>domain</td><td align="center">指定 cookie 所属域名，默认是当前域名</td></tr><tr><td>path</td><td align="center">指定 cookie 在哪个路径（路由）下生效，默认是 ‘/‘。如果设置为 /abc，则只有 /abc 下的路由可以访问到该 cookie，如：/abc/read。</td></tr></tbody></table><pre><code>  |</code></pre><p>| maxAge  |  cookie 失效的时间，单位秒。如果为整数，则该 cookie 在 maxAge 秒后失效。如果为负数，该 cookie 为临时 cookie ，关闭浏览器即失效，浏览器也不会以任何形式保存该 cookie 。如果为 0，表示删除该 cookie 。默认为 -1。- 比 expires 好用。<br>      |<br>| expires  |  过期时间，在设置的某个时间点后该 cookie 就会失效。一般浏览器的 cookie 都是默认储存的，当关闭浏览器结束这个会话的时候，这个 cookie 也就会被删除<br>      |<br>| secure  |  该 cookie 是否仅被使用安全协议传输。安全协议有 HTTPS，SSL等，在网络上传输数据之前先将数据加密。默认为false。当 secure 值为 true 时，cookie 在 HTTP 中是无效，在 HTTPS 中才有效。      |<br>| httpOnly  |  如果给某个 cookie 设置了 httpOnly 属性，则无法通过 JS 脚本 读取到该 cookie 的信息，但还是能通过 Application 中手动修改 cookie，所以只是在一定程度上可以防止 XSS 攻击，不是绝对的安全      |</p><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><ul><li>session 是另一种记录服务器和客户端会话状态的机制</li><li>session 是基于 cookie 实现的，session 存储在服务器端，sessionId 会被存储到客户端的cookie 中</li></ul><h3 id="session-认证流程："><a href="#session-认证流程：" class="headerlink" title="session 认证流程："></a>session 认证流程：</h3><ul><li>用户第一次请求服务器的时候，服务器根据用户提交的相关信息，创建对应的 Session</li><li>请求返回时将此 Session 的唯一标识信息 SessionID 返回给浏览器</li><li>浏览器接收到服务器返回的 SessionID 信息后，会将此信息存入到 Cookie 中，同时 Cookie 记录此 SessionID 属于哪个域名</li><li>当用户第二次访问服务器的时候，请求会自动判断此域名下是否存在 Cookie 信息，如果存在自动将 Cookie 信息也发送给服务端，服务端会从 Cookie 中获取 - - SessionID，再根据 SessionID 查找对应的 Session 信息，如果没有找到说明用户没有登录或者登录失效，如果找到 Session 证明用户已经登录可执行后面操作。</li><li>根据以上流程可知，SessionID 是连接 Cookie 和 Session 的一道桥梁，大部分系统也是根据此原理来验证用户登录状态。</li></ul><h2 id="Cookie-和-Session-的区别"><a href="#Cookie-和-Session-的区别" class="headerlink" title="Cookie 和 Session 的区别"></a>Cookie 和 Session 的区别</h2><ul><li>安全性： Session 比 Cookie 安全，Session 是存储在服务器端的，Cookie 是存储在客户端的。<br>存取值的类型不同：Cookie 只支持存字符串数据，想要设置其他类型的数据，需要将其转换成字符串，Session 可以存任意数据类型。<br>有效期不同： Cookie 可设置为长时间保持，比如我们经常使用的默认登录功能，Session 一般失效时间较短，客户端关闭（默认情况下）或者 Session 超时都会失效。</li><li>存储大小不同： 单个 Cookie 保存的数据不能超过 4K，Session 可存储数据远高于 Cookie，但是当访问量过多，会占用过多的服务器资源。</li><li><h2 id="Token（令牌）"><a href="#Token（令牌）" class="headerlink" title="Token（令牌）"></a>Token（令牌）</h2><h3 id="Acesss-Token"><a href="#Acesss-Token" class="headerlink" title="Acesss Token"></a>Acesss Token</h3></li></ul><p>访问资源接口（API）时所需要的资源凭证</p><p>简单 token 的组成： uid(用户唯一的身份标识)、time(当前时间的时间戳)、sign（签名，token 的前几位以哈希算法压缩成的一定长度的十六进制字符串）</p><ul><li><p>特点：</p><ul><li><p>服务端无状态化、可扩展性好</p></li><li><p>支持移动端设备</p></li><li><p>安全</p></li><li><p>支持跨程序调用</p></li><li><p>token 的身份验证流程：</p></li></ul></li></ul><ul><li><p>客户端使用用户名跟密码请求登录</p></li><li><p>服务端收到请求，去验证用户名与密码</p></li><li><p>验证成功后，服务端会签发一个 token 并把这个 token 发送给客户端</p></li><li><p>客户端收到 token 以后，会把它存储起来，比如放在 cookie 里或者 localStorage 里</p></li><li><p>客户端每次向服务端请求资源的时候需要带着服务端签发的 token</p></li><li><p>服务端收到请求，然后去验证客户端请求里面带着的 token ，如果验证成功，就向客户端返回请求的数据</p></li><li><p>每一次请求都需要携带 token，需要把 token 放到 HTTP 的 Header 里</p></li><li><p>基于 token 的用户认证是一种服务端无状态的认证方式，服务端不用存放 token 数据。用解析 token 的计算时间换取 session 的存储空间，从而减轻服务器的压力，减少频繁的查询数据库</p></li><li><p>oken 完全由应用管理，所以它可以避开同源策略</p><h3 id="Refresh-Token"><a href="#Refresh-Token" class="headerlink" title="Refresh Token"></a>Refresh Token</h3></li><li><p>另外一种 token——refresh token</p></li><li><p>refresh token 是专用于刷新 access token 的 token。如果没有 refresh token，也可以刷新 access token，但每次刷新都要用户输入登录用户名与密码，会很麻烦。有了 refresh token，可以减少这个麻烦，客户端直接用 refresh token 去更新 access token，无需用户进行额外的操作。</p></li></ul><ul><li>Access Token 的有效期比较短，当 Acesss Token 由于过期而失效时，使用 Refresh Token 就可以获取到新的 Token，如果 Refresh Token 也失效了，用户就只能重新登录了。</li><li>Refresh Token 及过期时间是存储在服务器的数据库中，只有在申请新的 Acesss Token 时才会验证，不会对业务接口响应时间造成影响，也不需要向 Session 一样一直保持在内存中以应对大量的请求。<h2 id="Token-和-Session-的区别"><a href="#Token-和-Session-的区别" class="headerlink" title="Token 和 Session 的区别"></a>Token 和 Session 的区别</h2></li><li>Session 是一种记录服务器和客户端会话状态的机制，使服务端有状态化，可以记录会话信息。而 Token 是令牌，访问资源接口（API）时所需要的资源凭证。Token 使服务端无状态化，不会存储会话信息。</li><li>Session 和 Token 并不矛盾，作为身份认证 Token 安全性比 Session 好，因为每一个请求都有签名还能防止监听以及重放攻击，而 Session 就必须依赖链路层来保障通讯安全了。如果你需要实现有状态的会话，仍然可以增加 Session 来在服务器端保存一些状态。</li><li>Session 认证只是简单的把 User 信息存储到 Session 里，因为 SessionID 的不可预测性，暂且认为是安全的。而 Token ，如果指的是 OAuth Token 或类似的机制的话，提供的是 认证 和 授权 ，认证是针对用户，授权是针对 App 。其目的是让某 App 有权利访问某用户的信息。这里的 Token 是唯一的。不可以转移到其它 App上，也不可以转到其它用户上。Session 只提供一种简单的认证，即只要有此 SessionID ，即认为有此 User 的全部权利。是需要严格保密的，这个数据应该只保存在站方，不应该共享给其它网站或者第三方 App。所以简单来说：如果你的用户数据可能需要和第三方共享，或者允许第三方调用 API 接口，用 Token 。如果永远只是自己的网站，自己的 App，用什么就无所谓了。<h2 id="JWT"><a href="#JWT" class="headerlink" title="JWT"></a>JWT</h2></li><li>JSON Web Token（简称 JWT）是目前最流行的跨域认证解决方案。</li><li>是一种认证授权机制。</li><li>JWT 是为了在网络应用环境间传递声明而执行的一种基于 JSON 的开放标准（RFC 7519）。JWT 的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源。比如用在用户登录上。<br>可以使用 HMAC 算法或者是 RSA 的公/私秘钥对 JWT 进行签名。因为数字签名的存在，这些传递的信息是可信的。<br>阮一峰老师的 JSON Web Token 入门教程 讲的非常通俗易懂，这里就不再班门弄斧了<h3 id="生成-JWT"><a href="#生成-JWT" class="headerlink" title="生成 JWT"></a>生成 JWT</h3>jwt.io/<a href="http://www.jsonwebtoken.io/">www.jsonwebtoken.io/</a></li></ul><h3 id="JWT-的原理"><a href="#JWT-的原理" class="headerlink" title="JWT 的原理"></a>JWT 的原理</h3><ul><li>JWT 认证流程：</li></ul><p>用户输入用户名/密码登录，服务端认证成功后，会返回给客户端一个 JWT</p><p>客户端将 token 保存到本地（通常使用 localstorage，也可以使用 cookie）</p><p>当用户希望访问一个受保护的路由或者资源的时候，需要请求头的 Authorization 字段中使用Bearer 模式添加 JWT，其内容看起来是下面这样</p><p>Authorization: Bearer复制代码</p><p>服务端的保护路由将会检查请求头 Authorization 中的 JWT 信息，如果合法，则允许用户的行为</p><p>因为 JWT 是自包含的（内部包含了一些会话信息），因此减少了需要查询数据库的需要</p><p>因为 JWT 并不使用 Cookie 的，所以你可以使用任何域名提供你的 API 服务而不需要担心跨域资源共享问题（CORS）</p><p>因为用户的状态不再存储在服务端的内存中，所以这是一种无状态的认证机制</p><h3 id="JWT-的使用方式"><a href="#JWT-的使用方式" class="headerlink" title="JWT 的使用方式"></a>JWT 的使用方式</h3><p>客户端收到服务器返回的 JWT，可以储存在 Cookie 里面，也可以储存在 localStorage。</p><h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><p>当用户希望访问一个受保护的路由或者资源的时候，可以把它放在 Cookie 里面自动发送，但是这样不能跨域，所以更好的做法是放在 HTTP 请求头信息的 Authorization 字段里，使用 Bearer 模式添加 JWT。<br>    GET /calendar/v1/events<br>    Host: api.example.com<br>    Authorization: Bearer <token><br>用户的状态不会存储在服务端的内存中，这是一种 无状态的认证机制<br>服务端的保护路由将会检查请求头 Authorization 中的 JWT 信息，如果合法，则允许用户的行为。<br>由于 JWT 是自包含的，因此减少了需要查询数据库的需要<br>JWT 的这些特性使得我们可以完全依赖其无状态的特性提供数据 API 服务，甚至是创建一个下载流服务。<br>因为 JWT 并不使用 Cookie ，所以你可以使用任何域名提供你的 API 服务而不需要担心跨域资源共享问题（CORS）</p><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><p>跨域的时候，可以把 JWT 放在 POST 请求的数据体里。</p><h4 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h4><p>通过 URL 传输<br>    <a href="http://www.example.com/user?token=xxx">http://www.example.com/user?token=xxx</a><br>项目中使用 JWT<br>**项目地址: <a href="https://github.com/yjdjiayou/jwt-demo">https://github.com/yjdjiayou/jwt-demo</a> **</p><h2 id="Token-和-JWT-的区别"><a href="#Token-和-JWT-的区别" class="headerlink" title="Token 和 JWT 的区别"></a>Token 和 JWT 的区别</h2><ul><li>相同：</li></ul><p>都是访问资源的令牌<br>都可以记录用户的信息<br>都是使服务端无状态化<br>都是只有验证成功后，客户端才能访问服务端上受保护的资源</p><ul><li><p>区别：</p></li><li><p>Token：服务端验证客户端发送过来的 Token 时，还需要查询数据库获取用户信息，然后验证 Token 是否有效。</p></li><li><p>JWT：将 Token 和 Payload 加密后存储于客户端，服务端只需要使用密钥解密进行校验（校验也是 JWT 自己实现的）即可，不需要查询或者减少查询数据库，因为 JWT 自包含了用户信息和加密的数据。</p><h2 id="常见的前后端鉴权方式"><a href="#常见的前后端鉴权方式" class="headerlink" title="常见的前后端鉴权方式"></a>常见的前后端鉴权方式</h2><blockquote><p>Session-Cookie</p><p>Token 验证（包括 JWT，SSO）</p><p>OAuth2.0（开放授权）</p></blockquote></li></ul><h2 id="常见的加密算法"><a href="#常见的加密算法" class="headerlink" title="常见的加密算法"></a>常见的加密算法</h2><ul><li><p>哈希算法(Hash Algorithm)又称散列算法、散列函数、哈希函数，是一种从任何一种数据中创建小的数字“指纹”的方法。哈希算法将数据重新打乱混合，重新创建一个哈希值。</p></li><li><p>哈希算法主要用来保障数据真实性(即完整性)，即发信人将原始消息和哈希值一起发送，收信人通过相同的哈希函数来校验原始数据是否真实。</p></li></ul><h3 id="哈希算法通常有以下几个特点："><a href="#哈希算法通常有以下几个特点：" class="headerlink" title="哈希算法通常有以下几个特点："></a>哈希算法通常有以下几个特点：</h3><p>正像快速：原始数据可以快速计算出哈希值</p><p>逆向困难：通过哈希值基本不可能推导出原始数据</p><p>输入敏感：原始数据只要有一点变动，得到的哈希值差别很大</p><ul><li>注意：<br>以上不能保证数据被恶意篡改，原始数据和哈希值都可能被恶意篡改，要保证不被篡改，可以使用RSA 公钥私钥方案，再配合哈希值。<br>哈希算法主要用来防止计算机传输过程中的错误，早期计算机通过前 7 位数据第 8 位奇偶校验码来保障（12.5% 的浪费效率低），对于一段数据或文件，通过哈希算法生成 128bit 或者 256bit 的哈希值，如果校验有问题就要求重传。</li></ul><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="使用-cookie-时需要考虑的问题"><a href="#使用-cookie-时需要考虑的问题" class="headerlink" title="使用 cookie 时需要考虑的问题"></a>使用 cookie 时需要考虑的问题</h3><p>因为存储在客户端，容易被客户端篡改，使用前需要验证合法性<br>不要存储敏感数据，比如用户密码，账户余额<br>使用 httpOnly 在一定程度上提高安全性<br>尽量减少 cookie 的体积，能存储的数据量不能超过 4kb<br>设置正确的 domain 和 path，减少数据传输<br>cookie 无法跨域<br>一个浏览器针对一个网站最多存 20 个Cookie，浏览器一般只允许存放 300 个Cookie<br>移动端对 cookie 的支持不是很好，而 session 需要基于 cookie 实现，所以移动端常用的是 token</p><h3 id="使用-session-时需要考虑的问题"><a href="#使用-session-时需要考虑的问题" class="headerlink" title="使用 session 时需要考虑的问题"></a>使用 session 时需要考虑的问题</h3><ul><li><p>将 session 存储在服务器里面，当用户同时在线量比较多时，这些 session 会占据较多的内存，需要在服务端定期的去清理过期的 session</p></li><li><p>当网站采用集群部署的时候，会遇到多台 web 服务器之间如何做 session 共享的问题。因为 session 是由单个服务器创建的，但是处理用户请求的服务器不一定是那个创建 session 的服务器，那么该服务器就无法拿到之前已经放入到 session 中的登录凭证之类的信息了。</p></li><li><p>当多个应用要共享 session 时，除了以上问题，还会遇到跨域问题，因为不同的应用可能部署的主机不一样，需要在各个应用做好 cookie 跨域的处理。<br>sessionId 是存储在 cookie 中的，假如浏览器禁止 cookie 或不支持 cookie 怎么办？ 一般会把 sessionId 跟在 url 参数后面即重写 url，所以 session 不一定非得需要靠 cookie 实现</p></li><li><p>移动端对 cookie 的支持不是很好，而 session 需要基于 cookie 实现，所以移动端常用的是 token</p><h3 id="使用-token-时需要考虑的问题"><a href="#使用-token-时需要考虑的问题" class="headerlink" title="使用 token 时需要考虑的问题"></a>使用 token 时需要考虑的问题</h3></li><li><p>如果你认为用数据库来存储 token 会导致查询时间太长，可以选择放在内存当中。比如 redis 很适合你对 token 查询的需求。</p></li><li><p>token 完全由应用管理，所以它可以避开同源策略</p></li><li><p>token 可以避免 CSRF 攻击(因为不需要 cookie 了)</p></li><li><p>移动端对 cookie 的支持不是很好，而 session 需要基于 cookie 实现，所以移动端常用的是 token</p><h3 id="使用-JWT-时需要考虑的问题"><a href="#使用-JWT-时需要考虑的问题" class="headerlink" title="使用 JWT 时需要考虑的问题"></a>使用 JWT 时需要考虑的问题</h3></li><li><p>因为 JWT 并不依赖 Cookie 的，所以你可以使用任何域名提供你的 API 服务而不需要担心跨域资源共享问题（CORS）</p></li><li><p>JWT 默认是不加密，但也是可以加密的。生成原始 Token 以后，可以用密钥再加密一次。</p></li><li><p>JWT 不加密的情况下，不能将秘密数据写入 JWT。</p></li><li><p>JWT 不仅可以用于认证，也可以用于交换信息。有效使用 JWT，可以降低服务器查询数据库的次数。</p></li><li><p>JWT 最大的优势是服务器不再需要存储 Session，使得服务器认证鉴权业务可以方便扩展。但这也是 JWT 最大的缺点：由于服务器不需要存储 Session 状态，因此使用过程中无法废弃某个 Token 或者更改 Token 的权限。也就是说一旦 JWT 签发了，到期之前就会始终有效，除非服务器部署额外的逻辑。</p></li><li><p>JWT 本身包含了认证信息，一旦泄露，任何人都可以获得该令牌的所有权限。为了减少盗用，JWT的有效期应该设置得比较短。对于一些比较重要的权限，使用时应该再次对用户进行认证。</p></li><li><p>JWT 适合一次性的命令认证，颁发一个有效期极短的 JWT，即使暴露了危险也很小，由于每次操作都会生成新的 JWT，因此也没必要保存 JWT，真正实现无状态。<br>为了减少盗用，JWT 不应该使用 HTTP 协议明码传输，要使用 HTTPS 协议传输。</p><h3 id="使用加密算法时需要考虑的问题"><a href="#使用加密算法时需要考虑的问题" class="headerlink" title="使用加密算法时需要考虑的问题"></a>使用加密算法时需要考虑的问题</h3></li><li><p>绝不要以明文存储密码<br>永远使用 哈希算法 来处理密码，绝不要使用 Base64 或其他编码方式来存储密码，这和以明文存储密码是一样的，使用哈希，而不要使用编码。编码以及加密，都是双向的过程，而密码是保密的，应该只被它的所有者知道， 这个过程必须是单向的。哈希正是用于做这个的，从来没有解哈希这种说法， 但是编码就存在解码，加密就存在解密。</p></li><li><p>绝不要使用弱哈希或已被破解的哈希算法，像 MD5 或 SHA1 ，只使用强密码哈希算法。<br>绝不要以明文形式显示或发送密码，即使是对密码的所有者也应该这样。如果你需要 “忘记密码” 的功能，可以随机生成一个新的 一次性的（这点很重要）密码，然后把这个密码发送给用户。</p></li></ul><h2 id="分布式架构下-session-共享方案"><a href="#分布式架构下-session-共享方案" class="headerlink" title="分布式架构下 session 共享方案"></a>分布式架构下 session 共享方案</h2><ol><li>session 复制<br>任何一个服务器上的 session 发生改变（增删改），该节点会把这个 session 的所有内容序列化，然后广播给所有其它节点，不管其他服务器需不需要 session ，以此来保证 session 同步<br>优点： 可容错，各个服务器间 session 能够实时响应。</li></ol><p>缺点： 会对网络负荷造成一定压力，如果 session 量大的话可能会造成网络堵塞，拖慢服务器性能。</p><ol start="2"><li>粘性 session /IP 绑定策略<br>采用 Ngnix 中的 ip_hash 机制，将某个 ip的所有请求都定向到同一台服务器上，即将用户与服务器绑定。 用户第一次请求时，负载均衡器将用户的请求转发到了 A 服务器上，如果负载均衡器设置了粘性 session 的话，那么用户以后的每次请求都会转发到 A 服务器上，相当于把用户和 A 服务器粘到了一块，这就是粘性 session 机制。<br>优点： 简单，不需要对 session 做任何处理。</li></ol><p>缺点： 缺乏容错性，如果当前访问的服务器发生故障，用户被转移到第二个服务器上时，他的 session 信息都将失效。</p><p>适用场景： 发生故障对客户产生的影响较小；服务器发生故障是低概率事件。实现方式： 以 Nginx 为例，在 upstream 模块配置 ip_hash 属性即可实现粘性 session。</p><ol start="3"><li>session 共享（常用）<br>使用分布式缓存方案比如 Memcached 、Redis 来缓存 session，但是要求 Memcached 或 Redis 必须是集群</li></ol><p>把 session 放到 Redis 中存储，虽然架构上变得复杂，并且需要多访问一次 Redis ，但是这种方案带来的好处也是很大的：</p><p>实现了 session 共享；</p><p>可以水平扩展（增加 Redis 服务器）；</p><p>服务器重启 session 不丢失（不过也要注意 session 在 Redis 中的刷新/失效机制）；</p><p>不仅可以跨服务器 session 共享，甚至可以跨平台（例如网页端和 APP 端）</p><ol start="4"><li>session 持久化<br>将 session 存储到数据库中，保证 session 的持久化<br>优点： 服务器出现问题，session 不会丢失</li></ol><p>缺点： 如果网站的访问量很大，把 session 存储到数据库中，会对数据库造成很大压力，还需要增加额外的开销维护数据库。</p><h2 id="只要关闭浏览器-，session-真的就消失了？"><a href="#只要关闭浏览器-，session-真的就消失了？" class="headerlink" title="只要关闭浏览器 ，session 真的就消失了？"></a>只要关闭浏览器 ，session 真的就消失了？</h2><p>不对。对 session 来说，除非程序通知服务器删除一个 session，否则服务器会一直保留，程序一般都是在用户做 log off 的时候发个指令去删除 session。然而浏览器从来不会主动在关闭之前通知服务器它将要关闭，因此服务器根本不会有机会知道浏览器已经关闭，之所以会有这种错觉，是大部分 session 机制都使用会话 cookie 来保存 session id，而关闭浏览器后这个 session id 就消失了，再次连接服务器时也就无法找到原来的 session。如果服务器设置的 cookie 被保存在硬盘上，或者使用某种手段改写浏览器发出的 HTTP 请求头，把原来的 session id 发送给服务器，则再次打开浏览器仍然能够打开原来的 session。恰恰是由于关闭浏览器不会导致 session 被删除，迫使服务器为 session 设置了一个失效时间，当距离客户端上一次使用 session 的时间超过这个失效时间时，服务器就认为客户端已经停止了活动，才会把 session 删除以节省存储空间。</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cookie、Session、Token、JWT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>技术链接分享</title>
      <link href="tool/links/"/>
      <url>tool/links/</url>
      
        <content type="html"><![CDATA[<h1 id="链接分享link"><a href="#链接分享link" class="headerlink" title="链接分享link"></a>链接分享link</h1><p>在 Linux 下搭建 Git 服务器<br><a href="https://www.cnblogs.com/dee0912/p/5815267.html">https://www.cnblogs.com/dee0912/p/5815267.html</a></p><p>Redis 分布式锁的实现<br><a href="https://www.cnblogs.com/dee0912/p/9338976.html">https://www.cnblogs.com/dee0912/p/9338976.html</a></p><p>使用 JSONP 实现简单的 SSO 单点登录<br><a href="https://www.cnblogs.com/dee0912/p/5506070.html">https://www.cnblogs.com/dee0912/p/5506070.html</a></p><p>Linux基础类#<br><a href="https://www.cnblogs.com/yanjieli/p/11076316.html">https://www.cnblogs.com/yanjieli/p/11076316.html</a></p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> link </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>baidu-ueditor百度编辑器</title>
      <link href="web/baidu-ueditor/"/>
      <url>web/baidu-ueditor/</url>
      
        <content type="html"><![CDATA[<h2 id="百度编辑器"><a href="#百度编辑器" class="headerlink" title="百度编辑器"></a>百度编辑器</h2><p>先打开ueditor.config.js这个文件。找到如下代码：</p><p>//,iframeCssUrl: URL + ‘/themes/iframe.css’ //给编辑器内部引入一个css文件</p><p>去掉前面的双斜杠。</p><p>接着找到/include/ueditor/themes路径下iframe.css</p><p>/可以在这里添加你自己的css/</p><p>img{max-width:100%;};</p><p>我们通过这段css就可以让图片自适应编辑器大小，从而解决出现横向滚动条的问题，当然除了设置图片，还可以</p><p>设置其他元素的样式</p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> baidu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>https</title>
      <link href="web/https/"/>
      <url>web/https/</url>
      
        <content type="html"><![CDATA[<h2 id="FreeSSL"><a href="#FreeSSL" class="headerlink" title="FreeSSL"></a>FreeSSL</h2><p><a href="https://freessl.org/">https://freessl.org/</a></p><h2 id="ZeroSSL—免费HTTPS证书申请平台"><a href="#ZeroSSL—免费HTTPS证书申请平台" class="headerlink" title="ZeroSSL—免费HTTPS证书申请平台"></a>ZeroSSL—免费HTTPS证书申请平台</h2><p>网站地址: <a href="https://zerossl.com/">https://zerossl.com/</a></p><h2 id="LetSencrypt—免费HTTPS数字证书申请"><a href="#LetSencrypt—免费HTTPS数字证书申请" class="headerlink" title="LetSencrypt—免费HTTPS数字证书申请"></a>LetSencrypt—免费HTTPS数字证书申请</h2><p>网站地址: <a href="https://letsencrypt.org/">https://letsencrypt.org/</a></p><p>七牛免费https证书使用</p><h2 id="腾讯云免费证书申请地址"><a href="#腾讯云免费证书申请地址" class="headerlink" title="腾讯云免费证书申请地址"></a>腾讯云免费证书申请地址</h2><p><a href="https://console.cloud.tencent.com/ssl/apply">https://console.cloud.tencent.com/ssl/apply</a></p><h2 id="Certbot免费https证书"><a href="#Certbot免费https证书" class="headerlink" title="Certbot免费https证书"></a>Certbot免费https证书</h2><p>网站是 <a href="https://certbot.eff.org/">https://certbot.eff.org/</a></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis</title>
      <link href="backend/redis/"/>
      <url>backend/redis/</url>
      
        <content type="html"><![CDATA[<h2 id="redis启动"><a href="#redis启动" class="headerlink" title="redis启动"></a>redis启动</h2><ul><li>本地启动：redis-cli</li><li>远程启动：redis-cli -h host -p port -a password</li><li>前端启动的关闭 强制关闭 ctrl+c 正常关闭 ./redis-cli shutdown</li><li><strong>PING</strong></li><li>查看服务是否运行</li><li><strong>QUIT</strong> </li><li>关闭当前连接</li><li><strong>SELECT index</strong> </li><li>切换到指定的数据库</li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><strong>String 类型</strong></p><p>赋值 set key value</p><pre><code> 127.0.0.1:6379&gt; set test 123 OK</code></pre><p>取值 get key</p><pre><code> 127.0.0.1:6379&gt; get test&quot;123&quot;</code></pre><p>复制代码取值并赋值 getset key value</p><pre><code>127.0.0.1:6379&gt; getset test 321&quot;123&quot;127.0.0.1:6379&gt; get test&quot;321&quot;</code></pre><p>设置获取多个键值</p><pre><code>mset key value [key value...]mget key [key...]127.0.0.1:6379&gt; mset k1 v1 k2 v2 k3 v3OK127.0.0.1:6379&gt; mget k1 k21) &quot;v1&quot;2) &quot;v2&quot;</code></pre><p>删除 del key</p><pre><code>127.0.0.1:6379&gt; del test(integer) 1</code></pre><p>获取 redis 中所有的 key 可用使用 *<br>查找以 w3c 为开头的 key：</p><pre><code>127.0.0.1:6379&gt; KEYS w3c*1. &quot;w3c3&quot;2. &quot;w3c1&quot;3. &quot;w3c2&quot;</code></pre><p>递增数字<br>当存储的字符串是整数时，Redis提供了一个实用的命令INCR，其作用是让当前键值递增，并返回递增后的值。</p><pre><code>语法：incr key127.0.0.1:6379&gt; set num 1OK127.0.0.1:6379&gt; incr num(integer) 2127.0.0.1:6379&gt; incr num(integer) 3127.0.0.1:6379&gt; incr num(integer) 4</code></pre><p>增加指定的整数<br>    incrby key increment</p><pre><code>127.0.0.1:6379&gt; incrby num 2(integer) 4127.0.0.1:6379&gt; incrby num 2(integer) 6</code></pre><p>递减数值</p><pre><code>decr key127.0.0.1:6379&gt; decr num(integer) 10127.0.0.1:6379&gt; decr num(integer) 9</code></pre><p>减少指定的数值</p><pre><code>decryby key decrement127.0.0.1:6379&gt; decrby num 2(integer) 6127.0.0.1:6379&gt; decrby num 2(integer) 4</code></pre><p>向尾部追加值 APPEND的作用是向键值的末尾追加value<br>如果键不存在则将该键的值设置为value，即相当于 SET key value</p><pre><code>127.0.0.1:6379&gt; set str wwwOK127.0.0.1:6379&gt; append str &quot;qqq&quot;(integer) 10127.0.0.1:6379&gt; get str&quot;wwwqqq&quot;</code></pre><p>获取字符串长度 STRLEN</p><pre><code>127.0.0.1:6379&gt; strlen str(integer) 6</code></pre><h2 id="Hash-散列类型"><a href="#Hash-散列类型" class="headerlink" title="Hash 散列类型"></a>Hash 散列类型</h2><p>Redis hash 是一个string类型的field和value的映射表，hash特别适合用于存储对象。<br>Redis 中每个 hash 可以存储 232 - 1 键值对（40多亿）。</p><p>一次只设置一个字段值<br>    语法：hset key field value<br>    127.0.0.1:6379&gt; hset user username zhangsan<br>    (integer) 1</p><p>一次设置多个字段值<br>    语法：hmset key field value [field value…]<br>    127.0.0.1:6379&gt; hmset user age 20 username lisi<br>    OK</p><p><strong>获取hash值</strong></p><p>一次获取一个字段值</p><pre><code>语法：hget key field127.0.0.1:6379&gt; hget user username&quot;lisi&quot;</code></pre><p>一次可以获取多个字段值</p><pre><code>语法：hmget key field [field...]127.0.0.1:6379&gt; hmget user age username1. &quot;20&quot;2. &quot;lisi&quot;</code></pre><p>获取所有字段值</p><pre><code>语法：hgetall key127.0.0.1:6379&gt; hgetall user1. &quot;username&quot;2. &quot;lisi&quot;3. &quot;age&quot;4. &quot;20&quot;</code></pre><p>删除字段 可以删除一个或多个字段<br>语法：hdel key field [field…]</p><pre><code>127.0.0.1:6379&gt; hdel user age(integer) 1127.0.0.1:6379&gt; hdel user age username(integer) 1</code></pre><p>增加数字语法：hincrby key field increment<br>    127.0.0.1:6379&gt; hincrby user age 2<br>    (integer) 2</p><p>复制代码判断字段是否存在语法：hexists key field<br>    127.0.0.1:6379&gt; hexists user age<br>    (integer) 1</p><p>获取字段数量 语法：hlen key</p><pre><code>127.0.0.1:6379&gt; hlen user(integer) 1</code></pre><p>获取信息</p><pre><code>127.0.0.1:6379&gt; hgetall items:10011. &quot;id&quot;2. &quot;3&quot;3. &quot;name&quot;4. &quot;apple&quot;5. &quot;price&quot;6. &quot;5.00&quot;</code></pre><h2 id="Redis的回收策略"><a href="#Redis的回收策略" class="headerlink" title="Redis的回收策略"></a>Redis的回收策略</h2><p>volatile-lru：从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使用的数据淘汰</p><p>volatile-ttl：从已设置过期时间的数据集（server.db[i].expires）中挑选将要过期的数据淘汰</p><p>volatile-random：从已设置过期时间的数据集（server.db[i].expires）中任意选择数据淘汰</p><p>allkeys-lru：从数据集（server.db[i].dict）中挑选最近最少使用的数据淘汰</p><p>allkeys-random：从数据集（server.db[i].dict）中任意选择数据淘汰</p><p>no-enviction（驱逐）：禁止驱逐数据</p><h2 id="Redis-持久化"><a href="#Redis-持久化" class="headerlink" title="Redis 持久化"></a>Redis 持久化</h2><p>Redis 提供了多种不同级别的持久化方式：</p><p>RDB 持久化可以在指定的时间间隔内生成数据集的时间点快照（point-in-time snapshot）。<br>AOF 持久化记录服务器执行的所有写操作命令，并在服务器启动时，通过重新执行这些命令来还原数据集。 AOF 文件中的命令全部以 Redis 协议的格式来保存，新命令会被追加到文件的末尾。 Redis 还可以在后台对 AOF 文件进行重写（rewrite），使得 AOF 文件的体积不会超出保存数据集状态所需的实际大小。<br>Redis 还可以同时使用 AOF 持久化和 RDB 持久化。 在这种情况下， 当 Redis 重启时， 它会优先使用 AOF 文件来还原数据集， 因为 AOF 文件保存的数据集通常比 RDB 文件所保存的数据集更完整。<br>你甚至可以关闭持久化功能，让数据只在服务器运行时存在。</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>h5</title>
      <link href="web/h5/"/>
      <url>web/h5/</url>
      
        <content type="html"><![CDATA[<h2 id="禁止文字缩放"><a href="#禁止文字缩放" class="headerlink" title="禁止文字缩放"></a>禁止文字缩放</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">-webkit-text-size-adjust：100%；参考：https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent禁止ios 长按时不触发系统的菜单，禁止ios&amp;android长按时下载图片.css</span><span class="token punctuation">&#123;</span><span class="token property">-webkit-touch-callout</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token selector">禁止ios和android用户选中文字.css</span><span class="token punctuation">&#123;</span><span class="token property">-webkit-user-select</span><span class="token punctuation">:</span>none<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="移动端点击时的阴影"><a href="#移动端点击时的阴影" class="headerlink" title="移动端点击时的阴影"></a>移动端点击时的阴影</h2><ul><li>-webkit-tap-highlight-color:rgba(0,0,0,0);</li></ul><h2 id="rem配置参考："><a href="#rem配置参考：" class="headerlink" title="rem配置参考："></a>rem配置参考：</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">html</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span>10px<span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>321px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>375px<span class="token punctuation">)</span></span><span class="token punctuation">&#123;</span><span class="token selector">html</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span>11px<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>376px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>414px<span class="token punctuation">)</span></span><span class="token punctuation">&#123;</span><span class="token selector">html</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span>12px<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>415px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>639px<span class="token punctuation">)</span></span><span class="token punctuation">&#123;</span><span class="token selector">html</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span>15px<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>640px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>719px<span class="token punctuation">)</span></span><span class="token punctuation">&#123;</span><span class="token selector">html</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span>20px<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>720px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>749px<span class="token punctuation">)</span></span><span class="token punctuation">&#123;</span><span class="token selector">html</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span>22.5px<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>750px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>799px<span class="token punctuation">)</span></span><span class="token punctuation">&#123;</span><span class="token selector">html</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span>23.5px<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>800px<span class="token punctuation">)</span></span><span class="token punctuation">&#123;</span><span class="token selector">html</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span>25px<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="屏幕旋转的事件和样式"><a href="#屏幕旋转的事件和样式" class="headerlink" title="屏幕旋转的事件和样式"></a>屏幕旋转的事件和样式</h2><p>事件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">window<span class="token punctuation">.</span>orientation，取值：正负<span class="token number">90</span>表示横屏模式、<span class="token number">0</span>和<span class="token number">180</span>表现为竖屏模式；window<span class="token punctuation">.</span><span class="token function-variable function">onorientationchange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">switch</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>orientation<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token operator">-</span><span class="token number">90</span><span class="token operator">:</span><span class="token keyword">case</span> <span class="token number">90</span><span class="token operator">:</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"横屏:"</span> <span class="token operator">+</span> window<span class="token punctuation">.</span>orientation<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span><span class="token keyword">case</span> <span class="token number">180</span><span class="token operator">:</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"竖屏:"</span> <span class="token operator">+</span> window<span class="token punctuation">.</span>orientation<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>//竖屏时使用的样式</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">@media all <span class="token function">and</span> <span class="token punctuation">(</span><span class="token parameter">orientation<span class="token operator">:</span>portrait</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">.</span>css<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//横屏时使用的样式</span>@media all <span class="token function">and</span> <span class="token punctuation">(</span><span class="token parameter">orientation<span class="token operator">:</span>landscape</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">.</span>css<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>audio元素和video元素在ios和andriod中无法自动播放应对方案：触屏即播<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'html'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token string">'touchstart'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>audio<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="禁用-radio-和-checkbox-默认样式"><a href="#禁用-radio-和-checkbox-默认样式" class="headerlink" title="禁用 radio 和 checkbox 默认样式"></a>禁用 radio 和 checkbox 默认样式</h2><ul><li>ms-check 适用于表单复选框或单选按钮默认图标的修改，同样有多个属性值，设置它隐藏 (display:none) 并使用背景图片来修饰可得到我们想要的效果。<br>  input[type=radio]::-ms-check,input[type=checkbox]::-ms-check{display: none;}</li></ul><h2 id="移动端touch事件（区分webkit和winphone）"><a href="#移动端touch事件（区分webkit和winphone）" class="headerlink" title="移动端touch事件（区分webkit和winphone）"></a>移动端touch事件（区分webkit和winphone）</h2><p>/* 当用户手指放在移动设备在屏幕上滑动会触发的touch事件 */<br>// 以下支持webkit<br>touchstart——当手指触碰屏幕时候发生。不管当前有多少只手指<br>touchmove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用event的preventDefault()可以阻止默认情况的发生：阻止页面滚动<br>touchend——当手指离开屏幕时触发<br>touchcancel——系统停止跟踪触摸时候会触发。例如在触摸过程中突然页面alert()一个提示框，此时会触发该事件，这个事件比较少用</p><p>//TouchEvent说明：<br>touches：屏幕上所有手指的信息<br>targetTouches：手指在目标区域的手指信息<br>changedTouches：最近一次触发该事件的手指信息<br>touchend时，touches与targetTouches信息会被删除，changedTouches保存的最后一次的信息，最好用于计算手指信息</p><p>//参数信息(changedTouches[0])<br>clientX、clientY在显示区的坐标<br>target：当前元素</p><p>//事件响应顺序<br>ontouchstart  &gt; ontouchmove  &gt; ontouchend &gt; onclick</p><p>// 以下支持winphone 8<br>MSPointerDown——当手指触碰屏幕时候发生。不管当前有多少只手指<br>MSPointerMove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用css的html{-ms-touch-action: none;}可以阻止默认情况的发生：阻止页面滚动<br>MSPointerUp——当手指离开屏幕时触发</p><h2 id="手机拍照和上传图片"><a href="#手机拍照和上传图片" class="headerlink" title="手机拍照和上传图片"></a>手机拍照和上传图片</h2><p>//IOS有拍照、录像、选取本地图片功能，部分Android只有选择本地图片功能。Winphone不支持</p><blockquote><input type="file" accept="images/*" /><input type="file" accept="video/*" /></blockquote>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> h5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="web/hexo/"/>
      <url>web/hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-主题"><a href="#hexo-主题" class="headerlink" title="hexo 主题"></a>hexo 主题</h1><p><a href="https://butterfly.js.org/">https://butterfly.js.org</a></p><h2 id="Hexo优化与常用命令"><a href="#Hexo优化与常用命令" class="headerlink" title="Hexo优化与常用命令"></a>Hexo优化与常用命令</h2><p>安装</p><blockquote><p>npm install hexo -g #安装</p><p>npm update hexo -g #更新</p><p>hexo init #初始化</p></blockquote><h2 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token string">"postName"</span> <span class="token comment">#新建文章</span>hexo new page <span class="token string">"pageName"</span> <span class="token comment">#新建页面</span>hexo generate <span class="token comment">#生成静态页面至public目录</span>hexo server <span class="token comment">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span>hexo deploy <span class="token comment">#将.deploy目录部署到GitHub</span>清空hexo静态文件和缓存，并重新生成hexo clean<span class="token operator">&amp;&amp;</span>hexo g  //清空缓存并生成静态文件本地预览，确没有问题再进行发布hexo s -p <span class="token number">4000</span> 或者 hexo s  //启动本地服务默认<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="部署发布"><a href="#部署发布" class="headerlink" title="部署发布"></a>部署发布</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean <span class="token comment">#清除缓存 网页正常情况下可以忽略此条命令</span>hexo d 或者  hexo deploy<span class="token comment">#部署</span>hexo d 或者 gulp deploy //部署发布<span class="token comment">## 完成后部署 ##</span>两个命令的作用是相同的hexo generate --deployhexo deploy --generate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="seo优化"><a href="#seo优化" class="headerlink" title="seo优化"></a>seo优化</h2><p>让百度收录你的站点</p><p>我们首先要做的就是让各大搜索引擎收录你的站点，我们在刚建站的时候各个搜索引擎是没有收录我们网站的，在搜索引擎中输入site:&lt;域名&gt;,如果如下图所示就是说明我们的网站并没有被百度收录。我们可以直接点击下面的“网址提交”来提交我们的网站</p><p><img src="https://s1.ax1x.com/2018/12/07/F1vEid.png" alt="jpdaka.com" title="jpdaka.com"></p><h2 id="生成网站地图"><a href="#生成网站地图" class="headerlink" title="生成网站地图"></a>生成网站地图</h2><p>我们需要使用npm自动生成网站的sitemap，然后将生成的sitemap提交到百度和其他搜索引擎<br>安装sitemap插件</p><blockquote><p>npm install hexo-generator-sitemap –save<br>npm install hexo-generator-baidu-sitemap –save</p></blockquote><h2 id="链接提交"><a href="#链接提交" class="headerlink" title="链接提交"></a>链接提交</h2><p>使用说明</p><ol><li>链接提交工具是网站主动向百度搜索推送数据的工具，本工具可缩短爬虫发现网站链接时间，网站时效性内容建议使用链接提交工具，实时向搜索推送数据。本工具可加快爬虫抓取速度，无法解决网站内容是否收录问题</li><li>百度搜索资源平台为站长提供链接提交通道，您可以提交想被百度收录的链接，百度搜索引擎会按照标准处理，但不保证一定能够收录您提交的链接</li></ol><p><img src="https://s1.ax1x.com/2018/12/07/F1vfeO.png" alt="enter description here"></p><p><strong>主动推送</strong></p><blockquote><p>安装插件npm install hexo-baidu-url-submit –save</p></blockquote><p>然后再根目录的配置文件中新增字段</p><blockquote><p>baidu_url_submit: count: 100 # 提交最新的一个链接</p></blockquote><blockquote><p>host: <a href="http://www.cherryblog.site/">www.cherryblog.site</a> # 在百度站长平台中注册的域名</p></blockquote><blockquote><p>token: 8OGYpxowYnhgVsUM # 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</p></blockquote><blockquote><p>path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里</p></blockquote><p><strong>在加入新的deploye</strong></p><blockquote><p>deploy:</p><ul><li>type:baidu_url_submitter</li></ul></blockquote><p>这样执行hexo deploy的时候，新的链接就会被推送了</p><p><strong>自动推送工具代码</strong></p><p>请将以下代码安装在网站页面中，安装完成后即可实现链接自动推送功能</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span><span class="token function-name function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>var bp <span class="token operator">=</span> document.createElement<span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var curProtocol <span class="token operator">=</span> window.location.protocol.split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>curProtocol <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'https'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>bp.src <span class="token operator">=</span> <span class="token string">'https://zz.bdstatic.com/linksubmit/push.js'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>bp.src <span class="token operator">=</span> <span class="token string">'http://push.zhanzhang.baidu.com/push.js'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>var s <span class="token operator">=</span> document.getElementsByTagName<span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>s.parentNode.insertBefore<span class="token punctuation">(</span>bp, s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="让google收录你的站点"><a href="#让google收录你的站点" class="headerlink" title="让google收录你的站点"></a>让google收录你的站点</h2><blockquote><p>相比于百度，google的效率实在不能更快，貌似十分钟左右站点就被收录了，其实方法是和百度是一样的，都是先验证你的站点所有权，然后提交sitemap<br>google站点平台：<a href="https://www.google.com/webmasters/%EF%BC%8C%E7%84%B6%E5%90%8E%E5%B0%B1%E6%98%AF%E6%B3%A8%E5%86%8C%E8%B4%A6%E5%8F%B7%E3%80%81%E9%AA%8C%E8%AF%81%E7%AB%99%E7%82%B9%E3%80%81%E6%8F%90%E4%BA%A4sitemap%EF%BC%8C%E8%A2%ABgoogle%E6%94%B6%E5%BD%95%E4%BA%86">https://www.google.com/webmasters/，然后就是注册账号、验证站点、提交sitemap，被google收录了</a> </p></blockquote><p><img src="https://s1.ax1x.com/2018/12/07/F1xzDK.png"></p><h2 id="优化你的url"><a href="#优化你的url" class="headerlink" title="优化你的url"></a>优化你的url</h2><p>seo搜索引擎优化认为，网站的最佳结构是用户从首页点击三次就可以到达任何一个页面,打开_config.yml编辑</p><blockquote><p>url: <a href="http://xxx.com/">http://xxx.com</a></p></blockquote><blockquote><p>root: /</p></blockquote><blockquote><p>permalink: :title.html</p></blockquote><blockquote><p><a href="https://www.jpdaka.com/hexos/git-coding.html">https://www.jpdaka.com/hexos/git-coding.html</a></p></blockquote><p><strong>robots.txt文件</strong></p><p>在source文件夹中新建文件robots.txt，可以参考我的：</p><blockquote><p>User-agent: * Allow: /<br>Allow: /archives/<br>Disallow: /vendors/<br>Disallow: /categories/</p><p>Sitemap: <a href="http://www.xxx.com/sitemap.xml">http://www.xxx.com/sitemap.xml</a><br>Sitemap: <a href="http://www.xxx.com/baidusitemap.xml">http://www.xxx.com/baidusitemap.xml</a></p></blockquote><p><strong>获取关键词</strong></p><p>现在搜关键词全是广告，其实百度已经提供了一个接口，每次使用过百度搜索的时候下面的下拉条会出现一堆相关的关键词，这下关键词的权重是非常高的，采集这些关键词然后用在自己的文章中效果还可以，但是要记住不能堆砌关键词。</p><p>接口：</p><blockquote><p><a href="https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd=">https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd=</a></p></blockquote><p>比如：</p><blockquote><p><a href="https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd=dibai">https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd=dibai</a>   </p></blockquote><p>搜过结果：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">window<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span><span class="token function">sug</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>q<span class="token operator">:</span><span class="token string">"dibai"</span><span class="token punctuation">,</span>p<span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>s<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"迪拜"</span><span class="token punctuation">,</span><span class="token string">"迪拜旅游"</span><span class="token punctuation">,</span><span class="token string">"迪拜航空"</span><span class="token punctuation">,</span><span class="token string">"迪拜时间"</span><span class="token punctuation">,</span><span class="token string">"迪拜塔"</span><span class="token punctuation">,</span><span class="token string">"迪拜天气"</span><span class="token punctuation">,</span><span class="token string">"迪拜签证"</span><span class="token punctuation">,</span><span class="token string">"迪拜时差"</span><span class="token punctuation">,</span><span class="token string">"迪拜是哪个国家的"</span><span class="token punctuation">,</span><span class="token string">"迪拜机场"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一般回显10个关键词</p><p>提取代码如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">coding:utf-8 <span class="token function">import</span> requests <span class="token function">import</span> <span class="token function">time</span> print unicode<span class="token punctuation">(</span><span class="token string">'Langzi.Fun 关键词采集开启....'</span>,<span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token comment">#time.sleep(0.5) key = raw_input(unicode('输入关键词:','utf-8')) site_url = 'https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd=' + (str(key)) r = requests.get(site_url) print r.content.replace('window.baidu.sug(&#123;q:','').replace('&#125;);','').replace(',p:false,s:','').replace('"','').replace(str(key),'')</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="使用gulp压缩代码"><a href="#使用gulp压缩代码" class="headerlink" title="使用gulp压缩代码"></a>使用gulp压缩代码</h2><p><strong>全局安装gulp</strong></p><blockquote><p>npm install gulp -g</p></blockquote><p>我们需要的是使用gulp压缩我们的代码</p><p><strong>新建package.json</strong></p><p>使用npm init就可以创建package.json文件 </p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>  <span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"hexo-site"</span><span class="token punctuation">,</span>  <span class="token string">"version"</span><span class="token operator">:</span> <span class="token string">"0.0.0"</span><span class="token punctuation">,</span>  <span class="token string">"private"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token string">"hexo"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string">"version"</span><span class="token operator">:</span> <span class="token string">"3.7.1"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token string">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string">"ejs"</span><span class="token operator">:</span> <span class="token string">"^2.5.5"</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token operator">:</span> <span class="token string">"^3.7.0"</span><span class="token punctuation">,</span><span class="token string">"hexo-abbrlink"</span><span class="token operator">:</span> <span class="token string">"^2.0.4"</span><span class="token punctuation">,</span><span class="token string">"gulp-htmlclean"</span><span class="token operator">:</span> <span class="token string">"^2.7.22"</span><span class="token punctuation">,</span><span class="token string">"gulp-htmlmin"</span><span class="token operator">:</span> <span class="token string">"^5.0.1"</span><span class="token punctuation">,</span><span class="token string">"gulp-imagemin"</span><span class="token operator">:</span> <span class="token string">"^5.0.3"</span><span class="token punctuation">,</span><span class="token string">"gulp-minify-css"</span><span class="token operator">:</span> <span class="token string">"^1.2.4"</span><span class="token punctuation">,</span><span class="token string">"gulp-uglify"</span><span class="token operator">:</span> <span class="token string">"^3.0.1"</span><span class="token punctuation">,</span><span class="token string">"hexo-clean-css"</span><span class="token operator">:</span> <span class="token string">"0.0.3"</span><span class="token punctuation">,</span><span class="token string">"hexo-deployer-git"</span><span class="token operator">:</span> <span class="token string">"^0.3.1"</span><span class="token punctuation">,</span><span class="token string">"hexo-generator-archive"</span><span class="token operator">:</span> <span class="token string">"^0.1.5"</span><span class="token punctuation">,</span><span class="token string">"hexo-generator-baidu-sitemap"</span><span class="token operator">:</span> <span class="token string">"^0.1.2"</span><span class="token punctuation">,</span><span class="token string">"hexo-generator-category"</span><span class="token operator">:</span> <span class="token string">"^0.1.3"</span><span class="token punctuation">,</span><span class="token string">"hexo-generator-feed"</span><span class="token operator">:</span> <span class="token string">"^1.2.2"</span><span class="token punctuation">,</span><span class="token string">"hexo-generator-index"</span><span class="token operator">:</span> <span class="token string">"^0.2.1"</span><span class="token punctuation">,</span><span class="token string">"hexo-generator-json-content"</span><span class="token operator">:</span> <span class="token string">"^2.2.0"</span><span class="token punctuation">,</span><span class="token string">"hexo-generator-seo-friendly-sitemap"</span><span class="token operator">:</span> <span class="token string">"0.0.21"</span><span class="token punctuation">,</span><span class="token string">"hexo-generator-sitemap"</span><span class="token operator">:</span> <span class="token string">"^1.2.0"</span><span class="token punctuation">,</span><span class="token string">"hexo-generator-tag"</span><span class="token operator">:</span> <span class="token string">"^0.2.0"</span><span class="token punctuation">,</span><span class="token string">"hexo-html-minifier"</span><span class="token operator">:</span> <span class="token string">"0.0.2"</span><span class="token punctuation">,</span><span class="token string">"hexo-imagemin"</span><span class="token operator">:</span> <span class="token string">"^0.1.0"</span><span class="token punctuation">,</span><span class="token string">"hexo-renderer-ejs"</span><span class="token operator">:</span> <span class="token string">"^0.3.1"</span><span class="token punctuation">,</span><span class="token string">"hexo-renderer-less"</span><span class="token operator">:</span> <span class="token string">"^0.2.0"</span><span class="token punctuation">,</span><span class="token string">"hexo-renderer-marked"</span><span class="token operator">:</span> <span class="token string">"^0.3.2"</span><span class="token punctuation">,</span><span class="token string">"hexo-renderer-stylus"</span><span class="token operator">:</span> <span class="token string">"^0.3.3"</span><span class="token punctuation">,</span><span class="token string">"hexo-server"</span><span class="token operator">:</span> <span class="token string">"^0.3.1"</span><span class="token punctuation">,</span><span class="token string">"hexo-uglify"</span><span class="token operator">:</span> <span class="token string">"0.0.5"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token string">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string">"gulp-htmlclean"</span><span class="token operator">:</span> <span class="token string">"^2.7.15"</span><span class="token punctuation">,</span><span class="token string">"gulp-htmlmin"</span><span class="token operator">:</span> <span class="token string">"^3.0.0"</span><span class="token punctuation">,</span><span class="token string">"gulp-minify-css"</span><span class="token operator">:</span> <span class="token string">"^1.2.4"</span><span class="token punctuation">,</span><span class="token string">"gulp-notify"</span><span class="token operator">:</span> <span class="token string">"^3.0.0"</span><span class="token punctuation">,</span><span class="token string">"gulp-path"</span><span class="token operator">:</span> <span class="token string">"^3.0.3"</span><span class="token punctuation">,</span><span class="token string">"gulp-plumber"</span><span class="token operator">:</span> <span class="token string">"^1.1.0"</span><span class="token punctuation">,</span><span class="token string">"gulp-rename"</span><span class="token operator">:</span> <span class="token string">"^1.2.2"</span><span class="token punctuation">,</span><span class="token string">"gulp-rev-append"</span><span class="token operator">:</span> <span class="token string">"^0.1.8"</span><span class="token punctuation">,</span><span class="token string">"gulp-sequence"</span><span class="token operator">:</span> <span class="token string">"^0.4.6"</span><span class="token punctuation">,</span><span class="token string">"gulp-uglify"</span><span class="token operator">:</span> <span class="token string">"^2.0.0"</span><span class="token punctuation">,</span><span class="token string">"gulp-watch"</span><span class="token operator">:</span> <span class="token string">"^4.3.11"</span><span class="token punctuation">,</span><span class="token string">"jshint-stylish"</span><span class="token operator">:</span> <span class="token string">"^2.2.1"</span><span class="token punctuation">,</span><span class="token string">"gulp"</span><span class="token operator">:</span> <span class="token string">"^3.9.1"</span><span class="token punctuation">,</span><span class="token string">"gulp-autoprefixer"</span><span class="token operator">:</span> <span class="token string">"^6.0.0"</span><span class="token punctuation">,</span><span class="token string">"gulp-jshint"</span><span class="token operator">:</span> <span class="token string">"^2.1.0"</span><span class="token punctuation">,</span><span class="token string">"gulp-less"</span><span class="token operator">:</span> <span class="token string">"^4.0.1"</span><span class="token punctuation">,</span><span class="token string">"jshint"</span><span class="token operator">:</span> <span class="token string">"^2.9.6"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装gulp插件"><a href="#安装gulp插件" class="headerlink" title="安装gulp插件"></a>安装gulp插件</h2><p>本站使用 Snippet主题 （ Gulp入门指南）安装所需要的插件即可</p><blockquote><p>在Hexo根目录下创建一个名为 gulpfile.js 的文件：</p><p>require(‘./themes/hexo-theme-snippet/gulpfile’);</p><p>运行 gulp：</p><p>gulp 或者 gulp default   //执行打包任务</p><p>清空hexo静态文件和缓存，并重新生成</p><p>hexo clean &amp;&amp; hexo g  //清空缓存并生成静态文件</p><p>本地预览，确没有问题再进行发布</p><p>hexo s -p 4000 或者 hexo s  //启动本地服务默认</p></blockquote><h2 id="DNS加速你的网站"><a href="#DNS加速你的网站" class="headerlink" title="DNS加速你的网站"></a>DNS加速你的网站</h2><p>Cloudflare 提供DNS解析服务，而且速度很快，它提供了免费的https服务(但不是应用SSL证书)<br>需要把我们购买域名的那个地方的解析删掉，替换cloudflare给你的DNS解析服务器<br>回到clouldflare 上面选择crypto选项然后下面选择full或者是Flexible</p><h2 id="使用Netlify部署博客及部署自动化"><a href="#使用Netlify部署博客及部署自动化" class="headerlink" title="使用Netlify部署博客及部署自动化"></a>使用Netlify部署博客及部署自动化</h2><p>Netlify 是一个提供静态资源网络托管的综合平台</p><blockquote><p>能够托管服务，免费 CDN</p><p>能够绑定自定义域名</p><p>能够启用免费的TLS证书，启用HTTPS</p><p>支持自动构建</p><p>提供 Webhooks 和 API</p></blockquote><p>首先使用你的 GitHub 账号登陆 Netlify，登陆后进入空间管理中心，，点击New site from git按钮开始部署你的博客然后根据自己的托管平台，可以选择GitHub、GitLab或者BitBucket点击GitHub之后会弹出一个让你授权的窗口，给 Netlify 授权后，就会自动读取你 GitHub选择仓库后，Netlify 会自动识别到 hexo，并填入相关信息，这时候只要无脑点击 Deploy site就可以如果你要绑定自己买的域名，就直接点击第二步Set up custom domain Netlify 会提示你去域名DNS解析处，修改域名的CNAME记录</p><h2 id="hexo-GitHub-coding-404页面"><a href="#hexo-GitHub-coding-404页面" class="headerlink" title="hexo GitHub coding 404页面"></a>hexo GitHub coding 404页面</h2><p>GitHub Pages有提供制作404页面的指引：<a href="https://help.github.com/articles/creating-a-custom-404-page-for-your-github-pages-site/">Custom 404 Pages</a></p><p>直接在根目录下创建自己的404.html或者404.md就可以</p><h2 id="hexo部署到GitHub成功，但是无法访问"><a href="#hexo部署到GitHub成功，但是无法访问" class="headerlink" title="hexo部署到GitHub成功，但是无法访问"></a>hexo部署到GitHub成功，但是无法访问</h2><p>查看Pages 服务或GitHub 的域名是否有部署设置绑定域名，coding有时候会自动删除域名需要手动重新绑定</p><p><a href="https://imgchr.com/i/kFYLgx"><img src="https://s2.ax1x.com/2019/01/22/kFYLgx.md.png" alt="kFYLgx.md.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>慢慢喜欢你 余生都是你</title>
      <link href="love/love/"/>
      <url>love/love/</url>
      
        <content type="html"><![CDATA[<h2 id="慢慢喜欢你-余生都是你"><a href="#慢慢喜欢你-余生都是你" class="headerlink" title="慢慢喜欢你 余生都是你"></a>慢慢喜欢你 余生都是你</h2><p><img src="https://s2.ax1x.com/2019/01/08/FqfGKU.png" alt="FXrVwn.png"></p><blockquote><p>所有的酒，都不如你！</p></blockquote><p>林夕说，其实，你喜欢一个人，就像喜欢富士山。你可以看到它，但是不能搬走它。你有什么方法可以移动一座富士山，回答是，你自己走过去。爱情也是如此，逛过就已经足够。</p><blockquote><p>You’re beautiful</p></blockquote><p><img src="https://s2.ax1x.com/2019/01/08/FqfhGt.png" alt="FqfhGt.png"></p><blockquote><p>当我遇见你的时候上帝就在我耳边说了四个字“在劫难逃”</p></blockquote><p><img src="https://s2.ax1x.com/2019/01/28/kKxGZt.jpg" alt="kKxGZt.jpg"></p><blockquote><p>你的过去我来不及参与，你的未来我奉陪到底！</p></blockquote><p><img src="https://s2.ax1x.com/2019/01/28/kKxNi8.md.jpg" alt="kKxNi8.md.jpg"></p><p>那些看似荒唐的青春，是我们一生一次的认真</p><blockquote><p>你不知道一个见你就笑的人是有多么喜欢你</p></blockquote><p><img src="https://s2.ax1x.com/2019/01/28/kKxJdP.md.jpg" alt="kKxJdP.md.jpg"></p><p>我要把向往的风景变成我走过的路</p><p><img src="https://s2.ax1x.com/2019/01/11/FXrVwn.png" alt="FXrVwn.png"><br>我也怕我的不主动，让你被别人暖了心</p><p>喜欢胜过所有道理，原则胜不过我喜欢</p><p>熬夜的瘾，和遥远的你<br><img src="https://s2.ax1x.com/2019/01/11/FXrkLj.png" alt="FXrkLj.png"></p><p>其实很简单.我只希望每天都很开心 就算有坏情绪也能很快好起来.</p><blockquote><p>你问我多喜欢你 我说不出来 但我心里明白 我宁愿和你吵架 也不愿意去爱别人</p></blockquote><p><img src="https://s2.ax1x.com/2019/01/28/kKxYIf.md.jpg" alt="kKxYIf.md.jpg"></p><p>光年流转，我对你不离不弃</p><p>若倾你一生，只得我十年天真，只愿尽我一世无邪，换你百载浅笑无忧</p><p><img src="https://i.loli.net/2021/04/27/tZgmjM1W8IKbSCk.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> love </category>
          
      </categories>
      
      
        <tags>
            
            <tag> love </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>陪你去一趟泸沽湖</title>
      <link href="love/luguhu/"/>
      <url>love/luguhu/</url>
      
        <content type="html"><![CDATA[<h2 id="一生只许一个愿——陪你去一趟泸沽湖"><a href="#一生只许一个愿——陪你去一趟泸沽湖" class="headerlink" title="一生只许一个愿——陪你去一趟泸沽湖"></a>一生只许一个愿——陪你去一趟泸沽湖</h2><p>女神流过的眼泪</p><p>陪你去登上最美的女神山（格姆女神山也叫狮子山），在那3000多海拔的地方俯瞰你梦里的天堂。</p><blockquote><p>女神流过的眼泪</p></blockquote><p><img src="https://i.loli.net/2021/04/27/xfhwn9DUbJMKL15.jpg"></p><p>那里有大片大片的云，喜欢一朵接一朵地绽放，消失。<br>那里的晴天很多，有我喜欢的蓝，阳光夹带着清甜和温暖的味道。</p><blockquote><p>清风，草地</p></blockquote><p>[<img src="https://i.loli.net/2021/04/27/RPiDp2ag8W5Axsq.jpg" alt="FNhKVH.jpg"></p><blockquote><p>阳光倾斜</p></blockquote><p><a href="https://imgchr.com/i/FNhNqg"><img src="https://i.loli.net/2021/04/27/Unlsq7JY8QM1FA6.jpg" alt="FNhNqg.jpg"></a></p><blockquote><p>你在，身边</p></blockquote><p><a href="https://imgchr.com/i/FNh5J1"><img src="https://s1.ax1x.com/2018/12/14/FNh5J1.jpg" alt="FNh5J1.jpg"></a></p><blockquote><p>夕阳辽远</p></blockquote><p>若隐若现的摩梭民歌<br><a href="https://imgchr.com/i/FNh7QK"><img src="https://s1.ax1x.com/2018/12/14/FNh7QK.jpg" alt="FNh7QK.jpg"></a></p><blockquote><p>轻吟耳畔</p></blockquote><p>水面撩动着晚霞，余晖洒入<br><img src="https://b-ssl.duitang.com/uploads/item/201809/28/20180928174012_T4zHV.jpeg"><br>或许，这是我梦中最美的画面</p><p><img src="http://p1-q.mafengwo.net/s7/M00/89/FB/wKgB6lS4tXqAOSRUABq_6McNOsw46.jpeg?imageMogr2/thumbnail/!690x450r/gravity/Center/crop/!690x450/quality/90%7Cwatermark/1/image/aHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw==/gravity/SouthEast/dx/10/dy/11"></p><p>听说，泸沽湖是一个去一次念一生的地方。<br><img src="https://b-ssl.duitang.com/uploads/item/201608/29/20160829123559_rBfki.jpeg"><br>每个有情怀的人，都会爱上这里</p><blockquote><p>即便是初遇</p></blockquote><p>也会毫无防备爱上世外桃源桃源般的景色里</p><p>不曾去过，只因心里有个愿——和你走一次泸沽湖</p><blockquote><p> 一起手牵手</p></blockquote><p><a href="https://imgchr.com/i/FNhzWt"><img src="https://s1.ax1x.com/2018/12/14/FNhzWt.jpg" alt="FNhzWt.jpg"></a></p><blockquote><p>看那湛蓝的湖水，仿佛一颗颗晶莹剔透的水晶</p></blockquote><p>看那远处倒映在湖面的山</p><div style="align: center"><img src="https://s1.ax1x.com/2018/12/14/FN4Aoj.gif" width = 100% /></div><blockquote><p>还有孤独飘在湖中的“猪槽船”</p></blockquote><div style="align: center"><img src="https://s1.ax1x.com/2018/12/14/FN4eWq.gif" width = 100% /></div><p>尽情享受湖光山色间的浪漫</p><blockquote><p>在泸沽湖，走一次走婚桥</p></blockquote><p><img src="https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=898357021,1394491218&fm=173&app=25&f=JPEG?w=522&h=788&s=A0707E90C689774D7E81CD400300F0F3"></p><p>你是我想要 再回去的风景</p>]]></content>
      
      
      <categories>
          
          <category> love </category>
          
      </categories>
      
      
        <tags>
            
            <tag> love </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我从背影 看见你</title>
      <link href="love/ysy/"/>
      <url>love/ysy/</url>
      
        <content type="html"><![CDATA[<blockquote><h1 id="我从背影-看见你"><a href="#我从背影-看见你" class="headerlink" title="我从背影 看见你"></a>我从背影 看见你</h1></blockquote><p><img src="https://i.loli.net/2021/04/27/DnizRZY6oOxH1p5.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> love </category>
          
      </categories>
      
      
        <tags>
            
            <tag> love </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你的世界是一座城，可惜我不是城中人</title>
      <link href="love/youword/"/>
      <url>love/youword/</url>
      
        <content type="html"><![CDATA[<h2 id="你的世界是一座城，可惜我不是城中人"><a href="#你的世界是一座城，可惜我不是城中人" class="headerlink" title="你的世界是一座城，可惜我不是城中人"></a>你的世界是一座城，可惜我不是城中人</h2><p>我曾用心去真爱过一个人，他曾经是我生活的全部</p><p>他是我人生中第一次的认真和执着</p><p>是我唯一一次的勇气，为了他，我曾经很努力地去减肥。我记得我曾经很傻很傻地问过他，如果我有一天瘦到了100斤，你愿不愿意和我在一起，那时候的他是拒绝的。虽然没有很明确地说，但是我知道他的意思。所以，我决定就那样退出他的世界算了。于是，我一天天在让自己努力不去想他，努力让自己忘记他，我和所有的人都说，我已经不爱他了。我努力地去说服自己，我现在暂时放不下的不是这个人，而是我25年来唯一的一次执着和勇气。时间一直一直在走，没有停止过，我清楚地记得，那时候的自己，依靠水果度过的每一个夜晚，每次半夜我都会被饿醒，那时候我就忍着，后面慢慢的我就习惯了这样的感觉。而也是那段时间这样子折磨自己，现在的我特别地怕饿，一饿手就开始发抖，一饿就会想吐。</p><p>21天的时间就那么过去了，我和自己说，或许已经放下了。你喜欢不喜欢我已经没有想象的那么重要了，我现在也没有那么喜欢你了，大家好好吃一顿饭，然后放下吧。</p><p>可是，如果我知道那顿饭会吃出后面那么多的事情，那我宁愿从来没有过那顿饭。一顿我期待已久的海鲜饭局，或许是红酒醉人，或许是酒不醉人人却自醉，一顿饭下来，我似乎嗅到了不一样的味道。就这么吃着吃着，我慢慢地，不明所以地就成了你的女朋友了。那一天，我真的很想和老天爷说一声，谢谢你的眷顾，我能得到你的爱。</p><p>就这样，我又脱单了。我清楚地记得那天是几号，也清楚地记得，海边的风轻轻吹过耳畔，响起你那温柔的声音。</p><blockquote><p>我曾经以为，我们能一直这么好好走下去的，但是知道某一天我忽然间发现，我们真的走不下去了！</p></blockquote><p>你说现在的我，就像个疯子一般。一点点的小事情，就可以放大成那样。其实，我很想问问，爱情中什么样的算大事？你手机里面别的女生的照片已经超过了我的，那个女生和你玩着互删又互加的游戏。你和我说那个女生多么多么的好，然后借此机会去损我，我每次假装在微笑，可是我知道，内心在崩塌。我记得第一次你给我发红包，竟然是5.20。25岁的我，难道还不值得你发个520的红包么？我不是一直想以金钱去衡量我在你心里的位置，但是截止今日，你答应给我买的情侣装，答应给我买的衣服，还有包包，我一个都没见到。对于女生而言，分手，真的不是一件什么惊天动地的大事。那些琐碎的小事一点一点叠加，在某一个小细节中支离破碎。每次，越挂越快的电话，字数越来越少的回复，一天不联系的冷漠，消失的早安吻。</p><p>身边所有的人都和我说——他不爱你，连照相都感受不到一点的温度。是呀，已经半年了，可是我一点也不觉得你爱着我。一次又一次的闹，最后慢慢把你推远了。这次发现我想抓住的手，已经没有了原本炙热的温度了。或许，真的该学会离开了。</p>]]></content>
      
      
      <categories>
          
          <category> love </category>
          
      </categories>
      
      
        <tags>
            
            <tag> love </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitLab进行托管宝塔代码</title>
      <link href="server/baota_GitLab/"/>
      <url>server/baota_GitLab/</url>
      
        <content type="html"><![CDATA[<h2 id="GitLab进行托管宝塔代码"><a href="#GitLab进行托管宝塔代码" class="headerlink" title="GitLab进行托管宝塔代码"></a>GitLab进行托管宝塔代码</h2><p>具体操作：</p><ol><li><p>登录阿里云code代码托管平台，地址是：code.aliyun.com</p></li><li><p>登录上之后是这个页面，按照截图说明操作</p></li><li><p>新建项目之后是这个样子，按照截图说明操作</p></li></ol><ol start="4"><li><p>这个时候就可以在本地克隆项目了，修改代码之后push就可以了，这个时候只是push到code代码仓库里面了，还没有更新到服务器上，此时需要在服务器上安装git，安装方式yum安装，yum install git，即可，但是这个安装的版本比较低，如果需要高版本git，请自行谷歌安装。</p></li><li><p>在服务器上克隆此项目，切换到服务器的站点目录，克隆成功之后，这只是手动克隆到服务器上，最重要的来了(敲黑板)，下一步需要在宝塔上配置钩子，才能真正做到git自动化，同时更新代码到服务器。</p></li><li><p>配置钩子第一步：</p></li></ol><p><img src="https://s2.ax1x.com/2019/03/27/AaGrgs.png"></p><ol start="7"><li>点击webhook钩子的设置，是这个界面，如果是第一次，里面就是空的，按照截图说明操作即可。</li></ol><p><img src="https://s2.ax1x.com/2019/03/27/AaGgbV.png"></p><ol start="8"><li>执行的脚本填写内容为：</li></ol><p>  cd /www/wwwroot/项目目录名称</p><p>  git pull</p><p>  chown -R www:www ./*</p><ol start="9"><li>最重要的一步来了，配置钩子的地址，如下图：</li></ol><p><img src="https://s2.ax1x.com/2019/03/27/AaG58J.png"></p><ol start="10"><li>点击之后是下图界面：</li></ol><p><img src="https://s2.ax1x.com/2019/03/27/AaG7K1.png"></p><ol start="11"><li>最终组成的钩子地址形式为:</li></ol><p><a href="http://123.206.70.236:8888/hook?access_key=UG79Q6ovput6X7J1J2eSnun5mG23h1uWiLTSpxoCTfrPsObp">http://123.206.70.236:8888/hook?access_key=UG79Q6ovput6X7J1J2eSnun5mG23h1uWiLTSpxoCTfrPsObp</a></p><ol start="12"><li>将此地址添加到code里面的WebHook里面即可。</li></ol><p><img src="https://s2.ax1x.com/2019/03/27/AaGOUO.png"></p><p>至此，整个git自动化配置完毕，即可开始多人合作开发的愉快之旅！</p>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitLab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker</title>
      <link href="server/docker/"/>
      <url>server/docker/</url>
      
        <content type="html"><![CDATA[<h1 id="docker-laradock-环境"><a href="#docker-laradock-环境" class="headerlink" title="docker laradock 环境"></a>docker laradock 环境</h1><blockquote><p><a href="https://laradock.io/">https://laradock.io/</a><br><a href="https://laradock.linganmin.cn/zh/getting-started/">https://laradock.linganmin.cn/zh/getting-started/</a></p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker-compose build nginxdocker-compose restart nginxdocker-compose up -d mysql phpmyadmindocker-compose up -d nginx mysql phpmyadmin redis workspace docker-compose <span class="token function">ps</span>docker-compose stop docker-compose down<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文档地址"><a href="#文档地址" class="headerlink" title="文档地址"></a>文档地址</h2><blockquote><p><a href="http://houdunren.gitee.io/note/wamp/laradock.html#php">http://houdunren.gitee.io/note/wamp/laradock.html#php</a></p></blockquote><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p><a href="https://www.bilibili.com/video/BV1m4411P7er/">laradock视频</a></p><h1 id="国内镜像"><a href="#国内镜像" class="headerlink" title="国内镜像"></a>国内镜像</h1><blockquote><p><a href="https://developer.aliyun.com/composer">https://developer.aliyun.com/composer</a></p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">&#123;</span><span class="token string">"debug"</span><span class="token builtin class-name">:</span> true,<span class="token string">"registry-mirrors"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token string">"https://naxeb9hk.mirror.aliyuncs.com"</span><span class="token punctuation">]</span>,<span class="token string">"experimental"</span><span class="token builtin class-name">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run -it 启动镜像docker attach d22d6945e23c 进入镜像docker inspect 917d356d6353docker commit 创建镜像docker start ID 启动容器docker <span class="token builtin class-name">exec</span> -i -t 9f4d4764b641 /bin/bash 进入已启动的容器<span class="token function">sudo</span> <span class="token function">mkdir</span>docker port NAME查看端口映射情况docker run -it -d -p <span class="token number">5000</span>:80 --name centos7 centos:7.4.1708<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="下载最新版的docker-compose文件"><a href="#下载最新版的docker-compose文件" class="headerlink" title="下载最新版的docker-compose文件"></a>下载最新版的docker-compose文件</h2><blockquote><p>$ sudo curl -L <a href="https://github.com/docker/compose/releases/download/1.16.1/docker-compose-%60uname">https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname</a> -s<code>-</code>uname -m` -o /usr/local/bin/docker-compose</p></blockquote><p>添加可执行权限 </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-composedocker stop 停止运行中容器docker stop <span class="token variable"><span class="token variable">$(</span>docker <span class="token function">ps</span> -qa<span class="token variable">)</span></span> 停止所有运行中的容器docker restart 重启容器docker <span class="token function">ps</span> -a 查看所有容器docker <span class="token function">rm</span> 移除处于终止状态的容器docker rmi <span class="token variable"><span class="token variable">$(</span>docker images -q<span class="token variable">)</span></span>删除所有镜像docker <span class="token function">rm</span> <span class="token variable"><span class="token variable">$(</span>docker <span class="token function">ps</span> -qa<span class="token variable">)</span></span> 移除处于终止状态的容器docker logs 从容器中去日志docker <span class="token function">diff</span> 列出容器中被改变的文件或者目录docker <span class="token function">top</span> 显示运行容器的进程信息docker <span class="token function">cp</span> 从容器中拷贝文件或者目录到本地docker inspect 查看容器详细信息docker images 显示本地已有镜像docker info 显示docker系统信息docker commit -m -a 提交更新后的镜像docker build 通过Dockerfile来构建镜像docker <span class="token function">import</span> 本地导入镜像docker search 查找仓库中镜像docker push 将镜像推送到仓库docker pull 将仓库中镜像下载到本地docker save -o mysql_5.6.tar mysql:5.6 导出镜像到本地docker load <span class="token operator">&lt;</span> mysql_5.6.tar 载入镜像docker rmi 移除镜像docker attach 运行中容器的stdin，进行命令执行的动作docker <span class="token function">history</span> 显示镜像的历史docker run -d -p <span class="token number">8080</span>:80 --name webserver nginx镜像名称是nginx，--name表示为这个容器取个名称叫webserver创建一个最简单的Dockerfile文件<span class="token function">mkdir</span> mynginx<span class="token builtin class-name">cd</span> mynginx<span class="token function">touch</span> Dockerfiledocker build <span class="token builtin class-name">.</span>docker build -t nginx:v3 <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> laradock </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github访问慢的解决办法</title>
      <link href="server/github/"/>
      <url>server/github/</url>
      
        <content type="html"><![CDATA[<h1 id="在线查看GitHub代码"><a href="#在线查看GitHub代码" class="headerlink" title="在线查看GitHub代码"></a>在线查看GitHub代码</h1><p> 在域名后面加 1s</p><p><a href="https://github1s.com/zhangsison/Toll">https://github1s.com/zhangsison/Toll</a></p><h2 id="GitHub-镜像访问三个最常用的镜像地址"><a href="#GitHub-镜像访问三个最常用的镜像地址" class="headerlink" title="GitHub 镜像访问三个最常用的镜像地址"></a>GitHub 镜像访问三个最常用的镜像地址</h2><p><a href="https://github.com.cnpmjs.org/">https://github.com.cnpmjs.org</a></p><p><a href="https://hub.fastgit.org/">https://hub.fastgit.org</a></p><p><a href="https://github.91chifun.workers.dev/">https://github.91chifun.workers.dev</a></p><p><del><a href="mailto:&#x67;&#x69;&#116;&#x40;&#x67;&#x69;&#116;&#x68;&#117;&#x62;&#x2e;&#x63;&#111;&#109;">&#x67;&#x69;&#116;&#x40;&#x67;&#x69;&#116;&#x68;&#117;&#x62;&#x2e;&#x63;&#111;&#109;</a>:</del> zhangsison/hh.git</p><blockquote><p><a href="https://github.com.cnpmjs.org/zhangsison/hh.git">https://github.com.cnpmjs.org/zhangsison/hh.git</a></p></blockquote><h2 id="网页输入加速下载地址"><a href="#网页输入加速下载地址" class="headerlink" title="网页输入加速下载地址"></a>网页输入加速下载地址</h2><p><a href="http://toolwa.com/github/">http://toolwa.com/github/</a></p><p><a href="https://github.zhlh6.cn/">https://github.zhlh6.cn/</a></p><h2 id="GitHub-raw-加速"><a href="#GitHub-raw-加速" class="headerlink" title="GitHub raw 加速"></a>GitHub raw 加速</h2><p>GitHub raw 域名并非 github.com 而是 raw.githubusercontent.com，上方的 GitHub 加速如果不能加速这个域名，那么可以使用 Static CDN 提供的反代服务。<br>将 raw.githubusercontent.com 替换为 raw.staticdn.net 即可加速或者使用谷歌插件镜像</p><h1 id="stackoverflow、github访问慢的解决办法"><a href="#stackoverflow、github访问慢的解决办法" class="headerlink" title="stackoverflow、github访问慢的解决办法"></a>stackoverflow、github访问慢的解决办法</h1><p>获取GitHub官方CDN地址<br>打开<a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a></p><h1 id="加速网址"><a href="#加速网址" class="headerlink" title="加速网址"></a>加速网址</h1><p>151.101.193.69     stackoverflow.com<br>104.25.15.31       codepen.io<br>117.23.61.137      <a href="http://www.topthink.com/">www.topthink.com</a><br>47.95.164.112      <a href="http://www.csdn.net/">www.csdn.net</a><br>47.95.47.253       blog.csdn.net<br>104.25.212.20      <a href="http://www.gitbook.com/">www.gitbook.com</a><br>220.170.53.27      <a href="http://www.v2ex.com/">www.v2ex.com</a><br>115.159.21.113     coding.net<br>104.25.213.20      legacy.gitbook.com<br>14.215.177.38      <a href="http://www.baidu.com/">www.baidu.com</a><br>58.223.168.56      <a href="http://www.v2ex.com/">www.v2ex.com</a><br>14.21.42.99        github.com<br>151.101.72.133     assets-cdn.github.com<br>151.101.193.194    github.global.ssl.fastly.net<br>178.128.123.58     <a href="http://www.jpdaka.com/">www.jpdaka.com</a><br>206.189.89.118     <a href="http://www.jpdaka.com/">www.jpdaka.com</a></p><blockquote><p><a href="http://tool.chinaz.com/dns?type=1&amp;host=github.com&amp;ip=">http://tool.chinaz.com/dns?type=1&amp;host=github.com&amp;ip=</a></p></blockquote><blockquote><p>在运行文本框输入c:\windows\system32\drivers\etc，点击确定按钮</p></blockquote><h1 id="打开hosts文件添加"><a href="#打开hosts文件添加" class="headerlink" title="打开hosts文件添加"></a>打开hosts文件添加</h1><blockquote><p> 52.74.223.119    <a href="https://github.com/">https://github.com</a></p></blockquote><blockquote><p>国内ipTTL值小的IP址     <a href="https://stackoverflow.com/">https://stackoverflow.com/</a></p></blockquote><h1 id="Google-Hosts"><a href="#Google-Hosts" class="headerlink" title="Google Hosts"></a>Google Hosts</h1><p><img src="https://camo.githubusercontent.com/20ff616e6fdca147e0fd26da415cec2cacce290a/68747470733a2f2f7777772e676f6f676c652e636f6d2f6c6f676f732f646f6f646c65732f323031382f686f6c69646179732d323031382d736f75746865726e2d68656d697370686572652d6461792d332d353636323338313038393735313034302d3278612e676966" alt="Google Hosts"></p><ul><li><p><a href="https://github.com/googlehosts/hosts">https://github.com/googlehosts/hosts</a></p></li><li><p>此处的文字仅用于说明，条款以LICENSE文件中的内容为准。</p></li><li><p>请在遵守当地相关法律法规的前提下使用本项目，由此产生的问题我们不负任何责任。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel</title>
      <link href="backend/Laravel/"/>
      <url>backend/Laravel/</url>
      
        <content type="html"><![CDATA[<h2 id="Laravel"><a href="#Laravel" class="headerlink" title="Laravel"></a>Laravel</h2><p>Laravel</p><p>artisan 命令</p><p>命令说明</p><p>php artisan key:generate生成 App Key</p><p>php artisan make:controller生成控制器</p><p>php artisan make:model生成模型</p><p>php artisan make:policy生成授权策略</p><p>php artisan make:seeder生成 Seeder 文件</p><p>php artisan migrate执行迁移</p><p>php artisan migrate:rollback回滚迁移</p><p>php artisan migrate:refresh重置数据库</p><p>php artisan db:seed填充数据库</p><p>php artisan tinker进入 tinker 环境</p><p>php artisan route:list查看路由列表</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPN</title>
      <link href="tool/vpn/"/>
      <url>tool/vpn/</url>
      
        <content type="html"><![CDATA[<h2 id="谷歌浏览器插件"><a href="#谷歌浏览器插件" class="headerlink" title="谷歌浏览器插件"></a>谷歌浏览器插件</h2><blockquote><p>谷歌上网助手  <a href="https://iguge.app/">https://iguge.app/</a></p></blockquote><blockquote><p>插件安装 <a href="http://cowxy.pro/">http://cowxy.pro/</a></p></blockquote><h2 id="科学上网原理"><a href="#科学上网原理" class="headerlink" title="科学上网原理"></a>科学上网原理</h2><p>背景</p><p>在很久很久以前，我们访问各种网站都是简单而直接的，用户的请求通过互联网发送到服务提供方，服务提供方直接将信息反馈给用户。</p><p><img src="https://camo.githubusercontent.com/60b717806c06d1bc1ffe88d5130bcec4c1847aad/68747470733a2f2f7663327465612e636f6d2f7075626c69632f75706c6f61642f77686174732d736861646f77736f636b732d30312e706e67"></p><p>后来，GFW 就出现了，他像一个收过路费的强盗一样夹在了在用户和服务之间，每当用户需要获取信息，都经过了 GFW，GFW将它不喜欢的内容统统过滤掉，于是客户当触发 GFW 的过滤规则的时候，就会收到 Connection Reset 这样的响应内容，而无法接收到正常的内容。</p><p><img src="https://camo.githubusercontent.com/288ba83f9d296afd9495a407f19355fed19d77d4/68747470733a2f2f7663327465612e636f6d2f7075626c69632f75706c6f61642f77686174732d736861646f77736f636b732d30322e706e67"></p><p>GFW 内部结构：</p><p><img src="https://camo.githubusercontent.com/a00c805337b8109b9c9959dc4a88148927d8d2bf/687474703a2f2f7777322e73696e61696d672e636e2f6c617267652f37306532373637376c793166697964746f756e73616a3230676f3062346d79612e6a7067"></p><p>GFW 列表可以参考这里：gfwlist/gfwlist</p><p>聪明的人们想到了利用境外服务器代理的方法来绕过 GFW 的过滤，其中包含了各种HTTP代理服务、Socks服务、VPN服务等。<br>SSH Tunnel</p><p>SSH（Secure Shell）是一个提供数据通信安全、远程登录、远程指令执行等功能的安全网络协议，由芬兰赫尔辛基大学研究员Tatu Ylönen，于1995年提出，其目的是用于替代非安全的Telnet、rsh、rexec等远程Shell协议。之后SSH发展了两个大版本SSH-1和SSH-2。</p><p>想深入了解SSH的原理，可以查看 O‘RELLY的 《SSH: The Secure Shell - The Definitive Guide》，这是一本非常不错的书。</p><p>那么我们来看看搭建一个SSH隧道翻墙，究竟有多简单。首先你需要有一台支持SSH的墙外服务器，此服务器啥都不需要，只要能SSH连接即可。</p><p>客户端SSH执行如下命令：</p><p>ssh -D 7001 username@remote-host</p><p>上述命令中-D表示动态绑定，7001表示本地SOCKS代理的侦听端口，可以改成别的，后面的 username@remote-host就是你登录远程服务器的用户名和主机。当然，这个命令后会提示输入密码，就是username这个用户的密码（除非你配置了SSH公钥认证，可以不输入密码），这样隧道就打通了。</p><p><img src="https://camo.githubusercontent.com/3fac39f4e88ead606289a518a9bac3ae44024f10/68747470733a2f2f7663327465612e636f6d2f7075626c69632f75706c6f61642f77686174732d736861646f77736f636b732d30332e706e67"></p><p>首先用户和境外服务器基于 ssh 建立起一条加密的通道 (1)<br>用户通过建立起的隧道进行代理，通过 ssh server 向真实的服务发起请求 (2-3)<br>服务通过 ssh server，再通过创建好的隧道返回给用户 (4-5)</p><p>由于 ssh 本身就是基于 RSA 加密技术，所以 GFW 无法从数据传输的过程中的加密数据内容进行关键词分析，避免了被重置链接的问题，但由于创建隧道和数据传输的过程中，ssh 本身的特征是明显的，所以 GFW 一度通过分析连接的特征进行干扰，导致 ssh 存在被定向进行干扰的问题。</p><p>至于干扰的原理，shadowsocks的作者 @clowwindy 认为：</p><p>从校长最近的论文上上看，GFW 最近弄的是先检测首部特征判断 SSL 和 SSH，然后统计包长度和方向，用实现训练好的模型去判断承载的流量是否为 HTTP。如果你用 SSH 翻墙，或者你的操作行为发的数据包过于接近 HTTP，就会被 reset。反过来，如果你想用 SSH 翻墙，只要在用来翻墙的那个 ssh 连接里做些别的操作（比如反复 tail 一个长文件，这样会不停的输出；或者用管道不停的往 ssh 里写命令，这样会不停的输入），就可以让这个模型失效，从而不会被判定为翻墙。</p><p>VPN</p><p>随着时代的发展以及企业规模的发展壮大，企业网络也在不断发生变化。例如，一家总部设在北京的企业，可能会在上海、广州和深圳等地都设有分支机构，因此需要把各个分支机构连接在一起，以便共享资源、协同工作，提高工作效率。但传统的专线联网方式价格昂贵，一般中小企业难以负担。这时低成本的VPN技术就孕育而生了。VPN（Virtual Private Network）即虚拟专用网络，它可以利用廉价接入的公共网络（主要使用Inter-net）来传输私有数据，相较于传统的专线连网方式具有成本优势，因此被很多企业和电信运营商采用。</p><p>VPN 比shadowsocks更加底层，它通过操作系统的接口直接虚拟出一张网卡，后续整个操作系统的网络通讯都将通过这张虚拟的网卡进行收发。这和任何一个代理的实现思路都差不多，应用层并不知道网卡是虚拟的，这样vpn虚拟网卡将以中间人的身份对数据进行加工，从而实现各种神奇的效果。具体来说，vpn是通过编写一套网卡驱动并注册到操作系统实现的虚拟网卡，这样数据只要经过网卡收发就可以进行拦截处理。</p><p>VPN和SSH隧道翻墙有如下区别：</p><p>VPN的设置是全局的，即电脑一旦挂上VPN，所有的联网程序都将自动使用VPN；而建立好SSH隧道后，需要程序设定使用隧道才会使用隧道联网。<br>如果使用商用的VPN一般要花钱，如果自己搭，VPN的搭建难度大于SSH隧道。因为SSH隧道只要一台可以SSH的服务器即可，根本不需要在服务器上配置任何东西。<br>vpn在IP层工作，而shadowsocks在TCP层工作。</p><p>shadowsocks</p><p>简单理解的话，shadowsocks 是将原来 ssh 创建的 Socks5 协议拆开成 server 端和 client 端，所以下面这个原理图基本上和利用 ssh tunnel 大致类似。</p><p><img src="https://camo.githubusercontent.com/7dc6526bb857530ede416fce771ff44d15a32204/68747470733a2f2f7663327465612e636f6d2f7075626c69632f75706c6f61642f77686174732d736861646f77736f636b732d30342e706e67"></p><p>1、6) 客户端发出的请求基于 Socks5 协议跟 ss-local 端进行通讯，由于这个 ss-local 一般是本机或路由器或局域网的其他机器，不经过 GFW，所以解决了上面被 GFW 通过特征分析进行干扰的问题<br>2、5) ss-local 和 ss-server 两端通过多种可选的加密方法进行通讯，经过 GFW 的时候是常规的TCP包，没有明显的特征码而且 GFW 也无法对通讯数据进行解密<br>3、4) ss-server 将收到的加密数据进行解密，还原原来的请求，再发送到用户需要访问的服务，获取响应原路返回</p><p>PAC模式</p><p>代理自动配置（Proxy auto-config，简称PAC） 是一种网页浏览器技术，用于定义浏览器该如何自动选择适当的代理服务器来访问一个网址。</p><p>一个PAC文件包含一个JavaScript形式的函数 FindProxyForURL(url, host)。这个函数返回一个包含一个或多个访问规则的字符串。用户代理根据这些规则适用一个特定的代理其或者直接访问。当一个代理服务器无法响应的时候，多个访问规则提供了其他的后备访问方法。浏览器在访问其他页面以前，首先访问这个PAC文件。PAC文件中的URL可能是手工配置的，也可能是是通过网页的 网络代理自发现协议（Web Proxy Autodiscovery Protocol） 自动配置的。</p><p>上面是从维基百科摘录的关于PAC的解释，我做了一个简单的图片解释什么是PAC：</p><p>简单的讲，PAC就是一种配置，它能让你的浏览器智能判断哪些网站走代理，哪些不需要走代理。点击 Shadowsocks 的菜单，选择 编辑自动模式的 PAC，如下图</p><p><img src="https://camo.githubusercontent.com/bb59c32f1f07c179e803613140a19a8b11275d11/687474703a2f2f7374617469632e7a7962756c756f2e636f6d2f796972616e7068702f366e743861757a3965743969646176317a727532377179312f696d6167655f31623668326f657235707265316a62726a7472316f71663138696531342e706e67"></p><p>在上面的目录下有两个文件，一个是 gfwlist.js，还有一个是<br>user-rule.txt,确保当前的模式为自动代理模式，打开系统设置–&gt;网络，点击高级，查看代理选项卡，如下图</p><p><img src="https://camo.githubusercontent.com/8efa4a2f340fa267e111c801a1c028ec29a0d068/687474703a2f2f7374617469632e7a7962756c756f2e636f6d2f796972616e7068702f766630667373783533306f70766e627874693435356b6c662f696d6167655f316236683339716937316d6234356d6f373476316a34716c337031752e706e67"><br>Shadowsocks全局模式与PAC模式的区别</p><p>Shadowsocks 的全局模式，是设置你的系统代理的代理服务器，使你的所有http/socks数据经过代理服务器的转发送出。而只有支持 socks 5或者使用系统代理的软件才能使用 Shadowsocks（一般的浏览器都是默认使用系统代理）。</p><p>而PAC模式就是会在你连接网站的时候读取PAC文件里的规则，来确定你访问的网站有没有被墙，如果符合，那就会使用代理服务器连接网站，而PAC列表一般都是从 GFWList 更新的。GFWList 定期会更新被墙的网站（不过一般挺慢的）。</p><p>简单地说，在全局模式下，所有网站默认走代理。而PAC模式是只有被墙的才会走代理，推荐PAC模式，如果PAC模式无法访问一些网站，就换全局模式试试，一般是因为PAC更新不及时（也可能是GFWList更新不及时）导致的。</p><p>还有，说一下Chrome不需要 Proxy SwitchyOmega 和 Proxy SwitchySharp 插件，这两个插件的作用就是，快速切换代理，判断网站需不需要使用某个代理的（shadowsocks已经有pac模式了，所以不需要这个）。如果你只用shadowsocks的话，就不需要这个插件了！</p><p>经过代理服务器的IP会被更换。连接 Shadowsocks 需要知道IP、端口、账号密码和加密方式。但是Shadowsocks因为可以自由换端口，所以定期换端口就可以有效避免IP被封！<br>Socks代理和http代理的区别<br>Socks代理</p><p>本地浏览器SOCKS服务器通常是用来做代理的，它通过TCP连接把目标主机和客户端连接在一起， 并转发所有的流量。SOCKS代理能在任何端口，任何协议下运行（额，好想有点不对， 这货是运行在session层，所以在他之下的层他就无法代理了）。SOCKS V4只支持 TCP连接，而SOCKS V5在其基础上增加了安全认证以及对UDP协议的支持（也就是说， SOCKS5支持密码认证以及转发UDP流量，注意，HTTP是不支持转发UDP的）。</p><p>SOCKS代理在任何情况下都不会中断server与client之间的数据（这是由这种协议的 特性决定的，毕竟非明文，但是在SOCKS代理服务器上还是可以还原出TCP和UDP的原始 流量的），当你的防火墙不允许你上网的时候，你就可以通过SOCKS代理来上网（这里的 意思是，如果GFW把google屏蔽了，你就可以通过一台海外的SOCKS代理服务器上谷歌）。</p><p>大多数的浏览器都支持SOCKS代理（这篇文章是三年前的，抱歉，谷歌第一条就是它）。（ 浏览器上网的时候需要与目标主机建立TCP连接，这个时候浏览器就会告诉SOCKS代理，它想 与目标主机进行通讯，然后SOCKS代理就会转发浏览器的数据，并向目标主机发出请求，然 后再把返回的数据转发回来。）（关于shadowsocks的一点题外话：虽然github上的源码 没了，但是耐不住民间私货多呀。shadowsocks有server端和client端，这两个都是用 来转发数据的，但是由于其所处的位置不同，所以功能也不同，client即本地运行的程序， 监听1080端口，并将数据转发到远在他乡的SOCKS服务器，由于这种转发是加密的，在会话层， 所以GFW过滤的难度很大，所以才派人巴拉巴拉让作者删除源码，嗯，一定是这样的。然后server 那边收到数据后，会原原本本的把数据再向目标请求，收到反馈后再返回给本地client的1080端口， 这样，我们向本地的1080请求资源，本地向SOCKS服务器请求资源，SOCKS服务器向目标请求资源， 这一条TCP连接就这样建立起来了。）但是，但是，但是，SOCKS代理原则上是可以还原真实数据的， 所以，第三方的代理也许不是很可靠。<br>HTTP代理</p><p>HTTP代理跟上面原理类似，用处也基本相同，都是让处于防火墙下的主机与外界建立连接，但是它与SOCKS代理不同的是，HTTP代理可以中断连接（即在中间截断数据流），因为HTTP代理是以HTTP请求为基础的 而这些请求大多以明文形式存在，所以HTTP代理可以在Client和下游服务器中间窃听，修改数据。但也正 由于HTTP代理只能处理HTTP请求，所以它对HTTP请求的处理也是很舒服的（原文中是smart）。而也由于 HTTP代理可以获取你的HTTP请求，所以HTTP代理服务器那边就可以根据你提交的数据来把那些资源缓存下来，提升访问的速度（用户亲密度+1）。有好多ISP都用HTTP代理，而不管用户那边的浏览器是怎样配置的，因为不管用户们怎么配置，他们总是要访问80端口，而这些80端口们又掌握在ISP们的手中。（原文完全不是这样说的= =。原文是说，互联网提供商们把流量都通过了HTTP代理，这样代理服务器中就有了缓存，访问的速度会快一些。）</p><p>（我来举个栗子：假如你的HTTP代理是Goagent，监听本地127.0.0.1:8080，此刻假设你已经把浏览器 的代理设置为：127.0.0.1:8080，那么你在浏览器中，所有的POST，GET，以及其他的请求，都会通过 本地的代理转发给远程的服务器，然后再通过远程的服务器去请求你所请求的这些资源，大家知道，HTTP协议是通过明文传输的，无论是在本地还是远程的服务器上，都是可以监听到这些流量的，所以才会有GFW的存在……HTTP协议属于应用层，而SOCKS协议属于传输层，ps：传输层在网络层之下，这就决定了两者的能力大小。）</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> VPN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php检查文章是否被百度收录</title>
      <link href="backend/phpbaidu/"/>
      <url>backend/phpbaidu/</url>
      
        <content type="html"><![CDATA[<h1 id="php检查文章是否被百度收录"><a href="#php检查文章是否被百度收录" class="headerlink" title="php检查文章是否被百度收录"></a>php检查文章是否被百度收录</h1><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">checkBaidu</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$url</span><span class="token operator">=</span> <span class="token string single-quoted-string">'http://www.baidu.com/s?wd='</span><span class="token operator">.</span> <span class="token variable">$url</span><span class="token punctuation">;</span>        <span class="token variable">$curl</span><span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$rs</span><span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$arr</span><span class="token operator">=</span> <span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'http://'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'http://'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'wd='</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'wd='</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'?'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$str</span><span class="token operator">=</span> <span class="token function">strstr</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$narr</span><span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/'</span><span class="token punctuation">,</span> <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$narr</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$rs</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token operator">.</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            return1<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span><span class="token punctuation">&#123;</span>            return0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> baidu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>滚动加载-weui</title>
      <link href="web/ajax/"/>
      <url>web/ajax/</url>
      
        <content type="html"><![CDATA[<h2 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"__TMPL__/public/js/fastclick.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"__TMPL__/public/js/jquery-weui.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>   <span class="token operator">&lt;</span>script<span class="token operator">></span>var loading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>var url <span class="token operator">=</span> <span class="token string">'http://192.168.2.29/thinkcmf/public/portal/video/js_tuandui_ajax'</span><span class="token punctuation">;</span>var ww <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>var pageStart <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token variable"><span class="token variable">$(</span>document.body<span class="token variable">)</span></span>.infinite<span class="token punctuation">(</span><span class="token punctuation">)</span>.on<span class="token punctuation">(</span><span class="token string">"infinite"</span>,<span class="token function-name function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>loading<span class="token punctuation">)</span> <span class="token builtin class-name">return</span><span class="token punctuation">;</span>loading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>$.ajax<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>url: url,type: <span class="token string">'POST'</span>,dataType: <span class="token string">'json'</span>,data: <span class="token punctuation">&#123;</span>page: pageStart<span class="token punctuation">&#125;</span>,success: function<span class="token punctuation">(</span>datas<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>datas <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable"><span class="token variable">$(</span>".weui-loadmore__tips"<span class="token variable">)</span></span>.html<span class="token punctuation">(</span><span class="token string">"数据了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable"><span class="token variable">$(</span>".weui-loading"<span class="token variable">)</span></span>.hide<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>var ww <span class="token operator">=</span> create_html<span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>setTimeout<span class="token punctuation">(</span><span class="token function-name function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pageStart++<span class="token punctuation">;</span><span class="token variable"><span class="token variable">$(</span>"#WWW"<span class="token variable">)</span></span>.append<span class="token punctuation">(</span>ww<span class="token punctuation">)</span><span class="token punctuation">;</span>loading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span>,<span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> create_html<span class="token punctuation">(</span>datas<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var len <span class="token operator">=</span> datas.length<span class="token punctuation">;</span>var _html <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>var i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var item <span class="token operator">=</span> <span class="token string">'&lt;div class="yuding_js">&lt;div class="yuding_js_img" style="background: #313236">&lt;a href="http://192.168.2.29/thinkcmf/public/portal/page/index/id/'</span> + datas<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.id + <span class="token string">'.html">&lt;img style="margin-top: 20px;"  src="http://192.168.2.29/thinkcmf/public/upload/'</span> + datas<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.more.thumbnail + <span class="token string">'" alt="超级盟主">&lt;i> 金牌讲师&lt;/i> &lt;/a>&lt;/div>&lt;div class="yuding_neir"> &lt;p style="margin: 0 0 .3em;"> &lt;i class="yuding_neir_gf">官方认证&lt;/i>'</span> + datas<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.post_title + <span class="token string">'&lt;/p>&lt;p  style="margin: 0 0 .3em;"> '</span> + datas<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.post_excerpt + <span class="token string">'&lt;/p>&lt;i  style="margin: 0 0 .3em;" class="yuding_neir_zc">支持全国&lt;/i>&lt;a  href="http://192.168.2.29/thinkcmf/public/portal/page/index/id/'</span> + datas<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.id + <span class="token string">'"> &lt;p style="margin-top: 10px" class="yuding_neir_yd"> 金牌讲师预订&lt;/p> &lt;/a>&lt;/div>&lt;/div>'</span><span class="token punctuation">;</span>_html <span class="token operator">+=</span> item<span class="token punctuation">&#125;</span><span class="token builtin class-name">return</span> _html<span class="token punctuation">&#125;</span>           <span class="token operator">&lt;</span>/script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> weui </tag>
            
            <tag> 滚动加载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP视频</title>
      <link href="tool/mukewang/"/>
      <url>tool/mukewang/</url>
      
        <content type="html"><![CDATA[<h1 id="慕课网"><a href="#慕课网" class="headerlink" title="慕课网"></a>慕课网</h1><p>慕课网400G，文件夹比较多，百度网盘有文件一次保存限制，建议电脑端网页登录百度网盘分开保存…</p><p>百度网盘</p><blockquote><p> pan.baidu.com/s/1w4_gD9IWAZZVlaDRpj-yxg</p></blockquote><p>如果链接不行请留言</p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频 </tag>
            
            <tag> 慕课网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css 进度条</title>
      <link href="web/csstexiao/"/>
      <url>web/csstexiao/</url>
      
        <content type="html"><![CDATA[<h2 id="CSS-滚动进度条效果"><a href="#CSS-滚动进度条效果" class="headerlink" title="CSS 滚动进度条效果"></a>CSS 滚动进度条效果</h2><iframe height='365' scrolling='no' title='使用线性渐变实现滚动进度条' src='//codepen.io/Chokcoco/embed/KbBXQM/?height=265&theme-id=0&default-tab=html,result' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/Chokcoco/pen/KbBXQM/'>使用线性渐变实现滚动进度条</aby Chokcoco (<a href='https://codepen.io/Chokcoco'>@Chokcoco</a>) on <a href='https://codepen.io'>CodePen</a>.</iframe><h2 id="CSS-闪光动画"><a href="#CSS-闪光动画" class="headerlink" title="CSS 闪光动画"></a>CSS 闪光动画</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body</span><span class="token punctuation">&#123;</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>#000<span class="token punctuation">&#125;</span><span class="token selector">.container</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token property">align-items</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>100vh<span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token property">animation-delay</span><span class="token punctuation">:</span>1s<span class="token punctuation">&#125;</span><span class="token selector">.item-1</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>#f583a1<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span>50%<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span>#eed968<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>7px<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token property">align-items</span><span class="token punctuation">:</span>center<span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> scale</span><span class="token punctuation">&#123;</span><span class="token selector">0%</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">50%,75%</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span>2.5<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">78%,100%</span><span class="token punctuation">&#123;</span><span class="token property">opacity</span><span class="token punctuation">:</span>0<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.item-1:before</span><span class="token punctuation">&#123;</span><span class="token property">content</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span>50%<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span>#eed968<span class="token punctuation">;</span><span class="token property">opacity</span><span class="token punctuation">:</span>0.7<span class="token punctuation">;</span><span class="token property">animation</span><span class="token punctuation">:</span>scale 1s infinite <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0.49<span class="token punctuation">,</span>1.02<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">animation-delay</span><span class="token punctuation">:</span>200ms<span class="token punctuation">;</span><span class="token property">transition</span><span class="token punctuation">:</span>0.5s all ease<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>&lt;div class=<span class="token string">"container"</span>>  &lt;div class=<span class="token string">"item-1"</span>>&lt;/div> &lt;/div><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>less</title>
      <link href="web/less/"/>
      <url>web/less/</url>
      
        <content type="html"><![CDATA[<h2 id="less"><a href="#less" class="headerlink" title="less"></a>less</h2><p>css的扩展</p><p>变量</p><p>@开头</p><p>混合</p><p>两种形式</p><p>运算</p><p>less的嵌套</p><p>！important关键字</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> less </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>meta基础知识</title>
      <link href="web/meta/"/>
      <url>web/meta/</url>
      
        <content type="html"><![CDATA[<h2 id="meta基础知识"><a href="#meta基础知识" class="headerlink" title="meta基础知识"></a>meta基础知识</h2><pre class="line-numbers language-none"><code class="language-none">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, target-densitydpi&#x3D;160dpi, initial-scale&#x3D;1.0, user-scalable&#x3D;no&quot;&gt; &lt;!-- 定义这个东西，让他屏幕大小适应手机端--&gt;    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1, user-scalable&#x3D;no&quot;&gt;    &lt;meta name&#x3D;&quot;apple-mobile-web-app-capable&quot; content&#x3D;&quot;yes&quot;&gt;&lt;!-- 删除苹果默认的工具栏和菜单栏 --&gt;    &lt;meta name&#x3D;&quot;apple-mobile-web-app-status-bar-style&quot; content&#x3D;&quot;black&quot;&gt;&lt;!-- 设置苹果工具栏颜色 --&gt;    &lt;meta name&#x3D;&quot;format-detection&quot; content&#x3D;&quot;telphone&#x3D;no, email&#x3D;no&quot;&gt;&lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt;    &lt;!-- 启用360浏览器的极速模式(webkit) --&gt;    &lt;meta name&#x3D;&quot;renderer&quot; content&#x3D;&quot;webkit&quot;&gt;    &lt;!-- 避免IE使用兼容模式 --&gt;    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;    &lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;    &lt;meta name&#x3D;&quot;HandheldFriendly&quot; content&#x3D;&quot;true&quot;&gt;    &lt;!-- 微软的老式浏览器 --&gt;    &lt;meta name&#x3D;&quot;MobileOptimized&quot; content&#x3D;&quot;320&quot;&gt;    &lt;!-- uc强制竖屏 --&gt;    &lt;meta name&#x3D;&quot;screen-orientation&quot; content&#x3D;&quot;portrait&quot;&gt;    &lt;!-- QQ强制竖屏 --&gt;    &lt;meta name&#x3D;&quot;x5-orientation&quot; content&#x3D;&quot;portrait&quot;&gt;    &lt;!-- UC强制全屏 --&gt;    &lt;meta name&#x3D;&quot;full-screen&quot; content&#x3D;&quot;yes&quot;&gt;    &lt;!-- QQ强制全屏 --&gt;    &lt;meta name&#x3D;&quot;x5-fullscreen&quot; content&#x3D;&quot;true&quot;&gt;    &lt;!-- UC应用模式 --&gt;    &lt;meta name&#x3D;&quot;browsermode&quot; content&#x3D;&quot;application&quot;&gt;    &lt;!-- QQ应用模式 --&gt;    &lt;meta name&#x3D;&quot;x5-page-mode&quot; content&#x3D;&quot;app&quot;&gt;    &lt;!-- windows phone 点击无高光 --&gt;    &lt;meta name&#x3D;&quot;msapplication-tap-highlight&quot; content&#x3D;&quot;no&quot;&gt;    &lt;!-- 适应移动端end --&gt;    &lt;meta name&#x3D;&quot;nightmode&quot; content&#x3D;&quot;enable&#x2F;disable&quot;&gt;    &lt;meta name&#x3D;&quot;imagemode&quot; content&#x3D;&quot;force&quot;&gt;    &lt;!-- 禁用掉uc浏览器判断到页面上文字居多时，会自动放大字体优化移动用户体验。 --&gt;    &lt;meta name&#x3D;&quot;wap-font-scale&quot; content&#x3D;&quot;no&quot;&gt;**手机端**    &lt;!-- 声明文档使用的字符编码 --&gt;    &lt;meta charset&#x3D;&#39;utf-8&#39;&gt;    &lt;!-- 优先使用 IE 最新版本和 Chrome --&gt;    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge,chrome&#x3D;1&quot;&#x2F;&gt;    &lt;!-- 页面描述 --&gt;    &lt;meta name&#x3D;&quot;description&quot; content&#x3D;&quot;不超过150个字符&quot;&#x2F;&gt;    &lt;!-- 页面关键词 --&gt;    &lt;meta name&#x3D;&quot;keywords&quot; content&#x3D;&quot;&quot;&#x2F;&gt;    &lt;!-- 网页作者 --&gt;    &lt;meta name&#x3D;&quot;author&quot; content&#x3D;&quot;name, email@gmail.com&quot;&#x2F;&gt;    &lt;!-- 搜索引擎抓取 --&gt;    &lt;meta name&#x3D;&quot;robots&quot; content&#x3D;&quot;index,follow&quot;&#x2F;&gt;    &lt;!-- 为移动设备添加 viewport --&gt;    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;initial-scale&#x3D;1, maximum-scale&#x3D;3, minimum-scale&#x3D;1, user-scalable&#x3D;no&quot;&gt;    &lt;!-- &#96;width&#x3D;device-width&#96; 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http:&#x2F;&#x2F;bigc.at&#x2F;ios-webapp-viewport-meta.orz --&gt;         &lt;!-- iOS 设备 begin --&gt;    &lt;meta name&#x3D;&quot;apple-mobile-web-app-title&quot; content&#x3D;&quot;标题&quot;&gt;    &lt;!-- 添加到主屏后的标题（iOS 6 新增） --&gt;    &lt;meta name&#x3D;&quot;apple-mobile-web-app-capable&quot; content&#x3D;&quot;yes&quot;&#x2F;&gt;    &lt;!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 --&gt;         &lt;meta name&#x3D;&quot;apple-itunes-app&quot; content&#x3D;&quot;app-id&#x3D;myAppStoreID, affiliate-data&#x3D;myAffiliateData, app-argument&#x3D;myURL&quot;&gt;    &lt;!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --&gt;    &lt;meta name&#x3D;&quot;apple-mobile-web-app-status-bar-style&quot; content&#x3D;&quot;black&quot;&#x2F;&gt;    &lt;!-- 设置苹果工具栏颜色 --&gt;    &lt;meta name&#x3D;&quot;format-detection&quot; content&#x3D;&quot;telphone&#x3D;no, email&#x3D;no&quot;&#x2F;&gt;    &lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt;    &lt;!-- 启用360浏览器的极速模式(webkit) --&gt;    &lt;meta name&#x3D;&quot;renderer&quot; content&#x3D;&quot;webkit&quot;&gt;    &lt;!-- 避免IE使用兼容模式 --&gt;    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;    &lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;    &lt;meta name&#x3D;&quot;HandheldFriendly&quot; content&#x3D;&quot;true&quot;&gt;    &lt;!-- 微软的老式浏览器 --&gt;    &lt;meta name&#x3D;&quot;MobileOptimized&quot; content&#x3D;&quot;320&quot;&gt;    &lt;!-- uc强制竖屏 --&gt;    &lt;meta name&#x3D;&quot;screen-orientation&quot; content&#x3D;&quot;portrait&quot;&gt;    &lt;!-- QQ强制竖屏 --&gt;    &lt;meta name&#x3D;&quot;x5-orientation&quot; content&#x3D;&quot;portrait&quot;&gt;    &lt;!-- UC强制全屏 --&gt;    &lt;meta name&#x3D;&quot;full-screen&quot; content&#x3D;&quot;yes&quot;&gt;    &lt;!-- QQ强制全屏 --&gt;    &lt;meta name&#x3D;&quot;x5-fullscreen&quot; content&#x3D;&quot;true&quot;&gt;    &lt;!-- UC应用模式 --&gt;    &lt;meta name&#x3D;&quot;browsermode&quot; content&#x3D;&quot;application&quot;&gt;    &lt;!-- QQ应用模式 --&gt;    &lt;meta name&#x3D;&quot;x5-page-mode&quot; content&#x3D;&quot;app&quot;&gt;    &lt;!-- windows phone 点击无高光 --&gt;    &lt;meta name&#x3D;&quot;msapplication-tap-highlight&quot; content&#x3D;&quot;no&quot;&gt;    &lt;!-- iOS 图标 begin --&gt;    &lt;link rel&#x3D;&quot;apple-touch-icon-precomposed&quot; href&#x3D;&quot;&#x2F;apple-touch-icon-57x57-precomposed.png&quot;&#x2F;&gt;    &lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --&gt;    &lt;link rel&#x3D;&quot;apple-touch-icon-precomposed&quot; sizes&#x3D;&quot;114x114&quot; href&#x3D;&quot;&#x2F;apple-touch-icon-114x114-precomposed.png&quot;&#x2F;&gt;    &lt;!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --&gt;    &lt;link rel&#x3D;&quot;apple-touch-icon-precomposed&quot; sizes&#x3D;&quot;144x144&quot; href&#x3D;&quot;&#x2F;apple-touch-icon-144x144-precomposed.png&quot;&#x2F;&gt;    &lt;!-- Retina iPad，144x144 像素，可以没有，但推荐有 --&gt;    &lt;!-- iOS 图标 end --&gt;         &lt;!-- iOS 启动画面 begin --&gt;    &lt;link rel&#x3D;&quot;apple-touch-startup-image&quot; sizes&#x3D;&quot;768x1004&quot; href&#x3D;&quot;&#x2F;splash-screen-768x1004.png&quot;&#x2F;&gt;    &lt;!-- iPad 竖屏 768 x 1004（标准分辨率） --&gt;    &lt;link rel&#x3D;&quot;apple-touch-startup-image&quot; sizes&#x3D;&quot;1536x2008&quot; href&#x3D;&quot;&#x2F;splash-screen-1536x2008.png&quot;&#x2F;&gt;    &lt;!-- iPad 竖屏 1536x2008（Retina） --&gt;    &lt;link rel&#x3D;&quot;apple-touch-startup-image&quot; sizes&#x3D;&quot;1024x748&quot; href&#x3D;&quot;&#x2F;Default-Portrait-1024x748.png&quot;&#x2F;&gt;    &lt;!-- iPad 横屏 1024x748（标准分辨率） --&gt;    &lt;link rel&#x3D;&quot;apple-touch-startup-image&quot; sizes&#x3D;&quot;2048x1496&quot; href&#x3D;&quot;&#x2F;splash-screen-2048x1496.png&quot;&#x2F;&gt;    &lt;!-- iPad 横屏 2048x1496（Retina） --&gt;         &lt;link rel&#x3D;&quot;apple-touch-startup-image&quot; href&#x3D;&quot;&#x2F;splash-screen-320x480.png&quot;&#x2F;&gt;    &lt;!-- iPhone&#x2F;iPod Touch 竖屏 320x480 (标准分辨率) --&gt;    &lt;link rel&#x3D;&quot;apple-touch-startup-image&quot; sizes&#x3D;&quot;640x960&quot; href&#x3D;&quot;&#x2F;splash-screen-640x960.png&quot;&#x2F;&gt;    &lt;!-- iPhone&#x2F;iPod Touch 竖屏 640x960 (Retina) --&gt;    &lt;link rel&#x3D;&quot;apple-touch-startup-image&quot; sizes&#x3D;&quot;640x1136&quot; href&#x3D;&quot;&#x2F;splash-screen-640x1136.png&quot;&#x2F;&gt;    &lt;!-- iPhone 5&#x2F;iPod Touch 5 竖屏 640x1136 (Retina) --&gt;    &lt;!-- iOS 启动画面 end --&gt;         &lt;!-- iOS 设备 end --&gt;    &lt;meta name&#x3D;&quot;msapplication-TileColor&quot; content&#x3D;&quot;#000&quot;&#x2F;&gt;    &lt;!-- Windows 8 磁贴颜色 --&gt;    &lt;meta name&#x3D;&quot;msapplication-TileImage&quot; content&#x3D;&quot;icon.png&quot;&#x2F;&gt;    &lt;!-- Windows 8 磁贴图标 --&gt;         &lt;link rel&#x3D;&quot;alternate&quot; type&#x3D;&quot;application&#x2F;rss+xml&quot; title&#x3D;&quot;RSS&quot; href&#x3D;&quot;&#x2F;rss.xml&quot;&#x2F;&gt;    &lt;!-- 添加 RSS 订阅 --&gt;    &lt;link rel&#x3D;&quot;shortcut icon&quot; type&#x3D;&quot;image&#x2F;ico&quot; href&#x3D;&quot;&#x2F;favicon.ico&quot;&#x2F;&gt;    &lt;!-- 添加 favicon icon --&gt;## H5页面窗口自动调整到设备宽度，并禁止用户缩放页面 ##&#x2F;&#x2F;一、HTML页面结构&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width,initial-scale&#x3D;1.0,minimum-scale&#x3D;1.0,maximum-scale&#x3D;1.0,user-scalable&#x3D;no&quot; &#x2F;&gt;&#x2F;&#x2F; width    设置viewport宽度，为一个正整数，或字符串‘device-width’&#x2F;&#x2F; height   设置viewport高度，一般设置了宽度，会自动解析出高度，可以不用设置&#x2F;&#x2F; initial-scale    默认缩放比例，为一个数字，可以带小数&#x2F;&#x2F; minimum-scale    允许用户最小缩放比例，为一个数字，可以带小数&#x2F;&#x2F; maximum-scale    允许用户最大缩放比例，为一个数字，可以带小数&#x2F;&#x2F; user-scalable    是否允许手动缩放&#x2F;&#x2F;二、JS动态判断var phoneWidth &#x3D;  parseInt(window.screen.width);var phoneScale &#x3D; phoneWidth&#x2F;640;var ua &#x3D; navigator.userAgent;if (&#x2F;Android (\d+\.\d+)&#x2F;.test(ua))&#123;var version &#x3D; parseFloat(RegExp.$1);if(version&gt;2.3)&#123;document.write(&#39;&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;640, minimum-scale &#x3D; &#39;+phoneScale+&#39;, maximum-scale &#x3D; &#39;+phoneScale+&#39;, target-densitydpi&#x3D;device-dpi&quot;&gt;&#39;);&#125;else&#123;document.write(&#39;&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;640, target-densitydpi&#x3D;device-dpi&quot;&gt;&#39;);&#125;&#125; else &#123;document.write(&#39;&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;640, user-scalable&#x3D;no, target-densitydpi&#x3D;device-dpi&quot;&gt;&#39;);&#125;## 页面缓存设置 ##&lt;!-- 清除缓存 --&gt;&lt;meta http-equiv&#x3D;&quot;pragma&quot; content&#x3D;&quot;no-cache&quot;&gt;&lt;meta http-equiv&#x3D;&quot;cache-control&quot; content&#x3D;&quot;no-cache&quot;&gt;&lt;meta http-equiv&#x3D;&quot;expires&quot; content&#x3D;&quot;0&quot;&gt; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="常用的移动端框架"><a href="#常用的移动端框架" class="headerlink" title="常用的移动端框架"></a>常用的移动端框架</h2><p>zepto.js<br>官网：<a href="http://zeptojs.com/">http://zeptojs.com/</a></p><p>中文(非官网)：<a href="http://www.css88.com/doc/zeptojs_api/">http://www.css88.com/doc/zeptojs_api/</a></p><p>iscroll.js</p><p>官网：<a href="http://cubiq.org/iscroll-5">http://cubiq.org/iscroll-5</a></p><p>underscore.js</p><p>官网：<a href="http://underscorejs.org/">http://underscorejs.org/</a></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> meta </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>滚动式固定导航</title>
      <link href="web/nav/"/>
      <url>web/nav/</url>
      
        <content type="html"><![CDATA[<h2 id="滚动式固定导航"><a href="#滚动式固定导航" class="headerlink" title="滚动式固定导航"></a>滚动式固定导航</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> ie6 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">msie 6</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span>    <span class="token punctuation">,</span> dv <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.news_shangto'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> st<span class="token punctuation">;</span>    dv<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'otop'</span><span class="token punctuation">,</span> dv<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//存储原来的距离顶部的距离</span>    <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scroll</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        st <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>st <span class="token operator">>=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>dv<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'otop'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ie6<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//IE6不支持fixed属性，所以只能靠设置position为absolute和top实现此效果</span>                dv<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> position<span class="token operator">:</span> <span class="token string">'absolute'</span><span class="token punctuation">,</span> top<span class="token operator">:</span> st <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>dv<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'position'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">'fixed'</span><span class="token punctuation">)</span> dv<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token string">'position'</span><span class="token operator">:</span> <span class="token string">'fixed'</span><span class="token punctuation">,</span> top<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>dv<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'position'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">'static'</span><span class="token punctuation">)</span> dv<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token string">'position'</span><span class="token operator">:</span> <span class="token string">'static'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>seo自动推送百度</title>
      <link href="web/seobd/"/>
      <url>web/seobd/</url>
      
        <content type="html"><![CDATA[<h2 id="SEO链接提交"><a href="#SEO链接提交" class="headerlink" title="SEO链接提交"></a>SEO链接提交</h2><h2 id="链接提交"><a href="#链接提交" class="headerlink" title="链接提交"></a>链接提交</h2><p>百度搜索资源平台为站长提供链接提交通道，您可以提交想被百度收录的链接，百度搜索引擎会按照标准处理，但不保证一定能够收录您提交的链接。</p><p><strong>1.百度站长入口</strong> </p><blockquote><p><a href="http://zhanzhang.baidu.com/linksubmit/index">http://zhanzhang.baidu.com/linksubmit/index</a>  </p></blockquote><p><strong>2.数据提交方式</strong></p><blockquote><p>主动推送（实时）、自动推送、 sitemap、 手动提交</p></blockquote><h2 id="主动推送接口"><a href="#主动推送接口" class="headerlink" title="主动推送接口"></a>主动推送接口</h2><ul><li>数据类型选择</li></ul><ul><li><p>接口调用地址： <a href="http://data.zz.baidu.com/urls?site=www.jpdaka.com&amp;token=SADASDASDASD">http://data.zz.baidu.com/urls?site=www.jpdaka.com&amp;token=SADASDASDASD</a> </p></li><li><p>php推送</p><pre><code>  $urls = array(  &#39;http://www.example.com/1.html&#39;,  &#39;http://www.example.com/2.html&#39;,  );  $api = &#39;http://data.zz.baidu.com/urls?site=www.jpdaka.com&amp;token=SADASDASDASD&#39;;  $ch = curl_init();  $options =  array(  CURLOPT_URL =&gt; $api,  CURLOPT_POST =&gt; true,  CURLOPT_RETURNTRANSFER =&gt; true,  CURLOPT_POSTFIELDS =&gt; implode(&quot;\n&quot;, $urls),  CURLOPT_HTTPHEADER =&gt; array(&#39;Content-Type: text/plain&#39;),  );  curl_setopt_array($ch, $options);  $result = curl_exec($ch);  echo $result;</code></pre></li></ul><h2 id="自动推送百度"><a href="#自动推送百度" class="headerlink" title="自动推送百度"></a>自动推送百度</h2><pre><code>(function()&#123;var bp = document.createElement(&#39;script&#39;);bp.src = &#39;//push.zhanzhang.baidu.com/push.js&#39;;var s = document.getElementsByTagName(&quot;script&quot;)[0];s.parentNode.insertBefore(bp, s);&#125;)();</code></pre><h2 id="改良版本"><a href="#改良版本" class="headerlink" title="改良版本"></a>改良版本</h2><pre><code>&lt;script&gt;(function()&#123;    var canonicalURL, curProtocol;    //Get the &lt;link&gt; tag    var x=document.getElementsByTagName(&quot;link&quot;);    //Find the last canonical URL    if(x.length &gt; 0)&#123;        for (i=0;i&lt;x.length;i++)&#123;            if(x[i].rel.toLowerCase() == &#39;canonical&#39; &amp;&amp; x[i].href)&#123;                canonicalURL=x[i].href;            &#125;        &#125;    &#125;    //Get protocol    if (!canonicalURL)&#123;        curProtocol = window.location.protocol.split(&#39;:&#39;)[0];    &#125;    else&#123;        curProtocol = canonicalURL.split(&#39;:&#39;)[0];    &#125;    //Get current URL if the canonical URL does not exist    if (!canonicalURL) canonicalURL = window.location.href;    //Assign script content. Replace current URL with the canonical URL    !function()&#123;var e=/([http|https]:\/\/[a-zA-Z0-9\_\.]+\.baidu\.com)/gi,r=canonicalURL,t=document.referrer;if(!e.test(r))&#123;var n=(String(curProtocol).toLowerCase() === &#39;https&#39;)?&quot;https://sp0.baidu.com/9_Q4simg2RQJ8t7jm9iCKT-xh_/s.gif&quot;:&quot;//api.share.baidu.com/s.gif&quot;;t?(n+=&quot;?r=&quot;+encodeURIComponent(document.referrer),r&amp;&amp;(n+=&quot;&amp;l=&quot;+r)):r&amp;&amp;(n+=&quot;?l=&quot;+r);var i=new Image;i.src=n&#125;&#125;(window);&#125;)();&lt;/script&gt;</code></pre><h2 id="sitemap提交推送"><a href="#sitemap提交推送" class="headerlink" title="sitemap提交推送"></a>sitemap提交推送</h2><p>请填写数据文件地址</p><blockquote><p>a. 一次最多提交10个文件地址；</p></blockquote><blockquote><p>b. 文件地址格式为txt或xml，每个地址文件最多包含50,000个网址且需小于10MB；</p></blockquote><blockquote><p>c. 如果验证了网站的主域，那么sitemap文件中可包含该网站主域下的所有网址。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 百度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rem</title>
      <link href="web/rem/"/>
      <url>web/rem/</url>
      
        <content type="html"><![CDATA[<h1 id="PC端网页尺寸设计"><a href="#PC端网页尺寸设计" class="headerlink" title="PC端网页尺寸设计"></a>PC端网页尺寸设计</h1><p>屏幕分辨率有1024×768,1366×768,1280×800,1280×1024，1440×900,1600×900，1920×1080</p>]]></content>
      
      
      <categories>
          
          <category> rem </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rem </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SEO</title>
      <link href="web/seo/"/>
      <url>web/seo/</url>
      
        <content type="html"><![CDATA[<h1 id="SEO"><a href="#SEO" class="headerlink" title="SEO"></a>SEO</h1><h2 id="一、SEO的核心是内容"><a href="#一、SEO的核心是内容" class="headerlink" title="一、SEO的核心是内容"></a>一、SEO的核心是内容</h2><p>白帽seo</p><p>黑帽SEO</p><p>网站标题，关键字，描述，</p><p>网站内容优化</p><p>wedshell工具</p><p>代码放到hear头</p><p>买网站</p><p>3w-5w，4000-5000</p><p>接单</p><p>30%，付，网上排名一个月</p><p>淘宝客-阿里妈妈淘宝联盟</p><p>销量-选词建站建 企业官方企业网站</p><h2 id="二、确定和部署关键词"><a href="#二、确定和部署关键词" class="headerlink" title="二、确定和部署关键词"></a>二、确定和部署关键词</h2><p>筛选完关键词后就要确定关键词，把不关联不重要的关键词删除掉，关键词堆积的基本错误坚决不能犯，部署关键词至关重要；关键词部署的规则是：</p><p>1、首页 - 最核心关键词</p><p>2、频道页 - 核心关键词</p><p>3、栏目页 - 热门关键词</p><p>4、详情页 - 长尾关键词</p><p>部署关键词时应注意一下几点：</p><p>1、网页title最多部署两个关键词；</p><p>2、同意关键词或相似关键词本鞥重复出现两次以上；</p><p>3、title长度应尽可能控制在20个汉字以内；</p><p>4、keywords、description在百度中 基本上已经没有什么权重了，但是切忌不要乱写，必须认真去写；</p><p>5、网页内容的关键词不集中堆砌，应保持在7%左右。</p><h2 id="三、网站结构合理规划"><a href="#三、网站结构合理规划" class="headerlink" title="三、网站结构合理规划"></a>三、网站结构合理规划</h2><p>网页结构不超过三层，这是最基本的常识，网页首页、主导航、频道、栏目之间结构要清晰分明。如果用户能清晰的浏览网站，那么搜索引擎也就能正常抓取网站。</p><p>网站结构：网页首页—》主导航—》频道—》栏目—》详情页</p><h2 id="四、门户网站SEO与UE相结合-："><a href="#四、门户网站SEO与UE相结合-：" class="headerlink" title="四、门户网站SEO与UE相结合 ##："></a>四、门户网站SEO与UE相结合 ##：</h2><p>搜索引擎蜘蛛的抓取模式：</p><p>1、广度抓取</p><p>2、深度抓取</p><p>3、自上而下抓取</p><p>4、自左向右抓取</p><p>UE用户体验：</p><p>1、 用户从左向右浏览</p><p>2、 用户从上往下浏览</p><p>3、 用户从频道向另一个频道浏览</p><p>4、 用户从首页向详情页浏览</p><h2 id="SEO基础知识"><a href="#SEO基础知识" class="headerlink" title="SEO基础知识"></a>SEO基础知识</h2><p><strong>确保网站是可以被索引的</strong></p><p>一些常见的页面不能被访问的原因</p><ol><li>隐藏在需要提交的表格中的链接</li><li>不能解析的JavaScript脚本中的链接</li><li>Flash、Java和其他插件中的链接</li><li>PowerPoint和PDF文件中的链接</li><li>指向被meta Robtots标签、rel=”NoFollow”和robots.txt屏蔽的页面的链接</li><li>页面上有上几百个链接</li><li>frame(框架结构)和iframe里的链接</li></ol><blockquote><p>对于现在的网站来还有下面的原因，通过来说是因为内容是动态生成的，而不是静态的 </p></blockquote><ol><li>网站通过WebSocket的方法渲染内容</li><li>使用诸如Mustache之类的JS模板引擎</li></ol><p><strong>什么样的网页可以被索引</strong></p><ol><li>确保页面可以在没有JavaScript下能被渲染。对于现在JavaScript语言的使用越来越多的情况下，在使用JS模板引擎的时候也应该注意这样的问题。</li><li>在用户禁用了JavaScript的情况下，保证所有的链接和页面是可以访问的。</li><li>确保爬虫可以看到所有的内容。那些用JS动态加载出来的对于爬虫来说是不友好的</li><li>使用描述性的锚文本的网页</li><li>限制的页面上的链接数量。除去一些分类网站、导航网站之类有固定流量，要不容易被认为垃圾网站。</li><li>确保页面能被索引。有一指向它的URL</li><li>URL应该遵循最佳实践。如blog/how-to-driver有更好的可读性</li></ol><p><strong>在正确的地方使用正确的关键词</strong></p><ol><li>把关键词放URL中</li><li>关键词应该是页面的标签</li><li>带有H1标签</li><li>图片文件名、ALT属性带有关键词</li><li>页面文字</li><li>加粗文字</li><li>Descripiton标签</li></ol><p><strong>用户需要看到多元化的搜索结果</strong><br>所以对于搜索引擎来说，复制带来的结果</p><ol><li>搜索引擎爬虫对每个网站都有设定的爬行预算，每一次爬行都只能爬行trpgr页面数</li><li>连向复制内容页面的链接也浪费了它们的链接权重</li><li>没有一个搜索引擎详细解释他们的算法怎样选择显示页面的哪个版本</li></ol><p><strong>链接建设</strong><br>在某种意义上，这个是提高PR值，及网站流量的另外一个核心，除了内容以外的核心。 </p><ol><li>链接建设是SEO的基础部分。除非你有一个异常强大的品牌，不需要干什么就能吸引到链接。</li><li>链接建设永不停止。这是不间断营销网站的过程</li></ol>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SEO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>swiper</title>
      <link href="web/swiper/"/>
      <url>web/swiper/</url>
      
        <content type="html"><![CDATA[<h2 id="swiper"><a href="#swiper" class="headerlink" title="swiper"></a>swiper</h2><h2 id="同一个页面面使用两个swiper轮播"><a href="#同一个页面面使用两个swiper轮播" class="headerlink" title="同一个页面面使用两个swiper轮播"></a>同一个页面面使用两个swiper轮播</h2><p><strong>html代码</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-container banner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-pagination banner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-container case <span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">height</span><span class="token punctuation">:</span>51px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-pagination case<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>js代码：</strong></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> mySwiper <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.banner'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">swiper</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>mode<span class="token operator">:</span> <span class="token string">'horizontal'</span><span class="token punctuation">,</span>loop<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>autoResize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>pagination<span class="token operator">:</span> <span class="token string">'.banner .swiper-pagination'</span><span class="token punctuation">,</span>paginationClickable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>autoplay<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> swiper <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.case'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">swiper</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>pagination<span class="token operator">:</span> <span class="token string">'.case .swiper-pagination'</span><span class="token punctuation">,</span>slidesPerView<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>slidesPerColumn<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>paginationClickable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>spaceBetween<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">声明swiper变量时 加一个同级元素加以区别即<span class="token keyword">var</span> mySwiper <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.banner'</span><span class="token punctuation">)</span><span class="token keyword">var</span> swiper <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.case'</span><span class="token punctuation">)</span>然后就是更改pagination的默认值用以区别显示的页面控件pagination<span class="token operator">:</span><span class="token string">'.banner'</span>pagination<span class="token operator">:</span> <span class="token string">'.case'</span><span class="token punctuation">,</span>这就是基本的修改方式，值得一提的是swiper在使用中不予bootstrap冲突<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="单个swiper的使用"><a href="#单个swiper的使用" class="headerlink" title="单个swiper的使用"></a>单个swiper的使用</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.bootcss.com/jquery-weui/1.2.0/js/swiper.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.bootcss.com/jquery-weui/1.2.0/js/city-picker.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"swiper-container"</span> data<span class="token operator">-</span>space<span class="token operator">-</span>between<span class="token operator">=</span><span class="token string">'10'</span> data<span class="token operator">-</span>pagination<span class="token operator">=</span><span class="token string">'.swiper-pagination'</span>data<span class="token operator">-</span>autoplay<span class="token operator">=</span><span class="token string">"1000"</span><span class="token operator">></span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"swiper-wrapper"</span><span class="token operator">></span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"swiper-slide"</span><span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span><span class="token operator">></span><span class="token operator">&lt;</span>img width<span class="token operator">=</span><span class="token string">"100%"</span> height<span class="token operator">=</span><span class="token string">"180px"</span> src<span class="token operator">=</span><span class="token string">"#"</span> alt<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"swiper-pagination"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".swiper-container"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">swiper</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>loop<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>autoplay<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="小程序swiper-自定义高度"><a href="#小程序swiper-自定义高度" class="headerlink" title="小程序swiper 自定义高度"></a>小程序swiper 自定义高度</h4><pre class="line-numbers language-none"><code class="language-none">&lt;!-- components&#x2F;swiperIdex&#x2F;swiperIdex.wxml --&gt;&lt;view class&#x3D;&quot;index_swiper&quot; style&#x3D;&quot;height:&#123;&#123;Hei&#125;&#125;;&quot;&gt;    &lt;swiper autoplay indicator-dots circular style&#x3D;&quot;height:&#123;&#123;Hei&#125;&#125;&quot;&gt;        &lt;swiper-item wx:for&#x3D;&quot;&#123;&#123;swiperList&#125;&#125;&quot; wx:key&#x3D;&quot;id&quot; data-index&#x3D;&quot;&#123;&#123;index&#125;&#125;&quot; bindtap&#x3D;&quot;handleNavigator&quot;&gt;            &lt;image class&#x3D;&quot;index_swiper_image&quot; src&#x3D;&quot;&#123;&#123;item.imagePath&#125;&#125;&quot; mode&#x3D;&quot;widthFix&quot; bindload&#x3D;&#39;imgHeight&#39;&gt;&lt;&#x2F;image&gt;        &lt;&#x2F;swiper-item&gt;    &lt;&#x2F;swiper&gt;    &lt;view class&#x3D;&quot;swiper_test&quot;&gt;        &lt;i class&#x3D;&quot;iconfont  iconicon_sosuo_xian-&quot;&gt;&lt;&#x2F;i&gt;        已有 &#123;&#123;times&#125;&#125; 人学习急救培训课程    &lt;&#x2F;view&gt;&lt;&#x2F;view&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; components&#x2F;swiperIdex&#x2F;swiperIdex.jsComponent(&#123;    &#x2F;**     * 组件的属性列表     *&#x2F;    properties: &#123;        swiperList: Array,        times:Number    &#125;,    &#x2F;**     * 组件的初始数据     *&#x2F;    data: &#123;        Hei: &#39;&#39;,        times:0,   &#125;,    &#x2F;**     * 组件的方法列表     *&#x2F;    methods: &#123;        &#x2F;**         * swiper 高度自适应         *&#x2F;        imgHeight: function (e) &#123;            var winWid &#x3D; wx.getSystemInfoSync().windowWidth;            var imgh &#x3D; e.detail.height;            var imgw &#x3D; e.detail.width;            var swiperH &#x3D; winWid * imgh &#x2F; imgw + &quot;px&quot;            this.setData(&#123;                Hei: swiperH            &#125;)        &#125;,        &#x2F;&#x2F;轮播图跳转        handleNavigator(e) &#123;            &#x2F;&#x2F;1.获取轮播图的索引            const &#123;                index            &#125; &#x3D; e.currentTarget.dataset;            &#x2F;&#x2F;2.判断第几张轮播图对应跳转的页面            if (index &#x3D;&#x3D;&#x3D; 0) &#123;                &#x2F;&#x2F;第一张轮播图跳转的页面                let url &#x3D; this.data.swiperList[0].url                this.tiaozhuan(url.type, url.id,url.idType)            &#125; else if (index &#x3D;&#x3D;&#x3D; 1) &#123;                &#x2F;&#x2F;第二张轮播图跳转的页面                let url &#x3D; this.data.swiperList[1].url                this.tiaozhuan(url.type, url.id,url.idType)            &#125; else if (index &#x3D;&#x3D;&#x3D; 2) &#123;                let url &#x3D; this.data.swiperList[2].url                this.tiaozhuan(url.type, url.id,url.idType)            &#125; else if (index &#x3D;&#x3D;&#x3D; 3) &#123;                let url &#x3D; this.data.swiperList[3].url                this.tiaozhuan(url.type, url.id,url.idType)            &#125; else &#123;                let url &#x3D; this.data.swiperList[4].url                this.tiaozhuan(url.type, url.id,url.idType)            &#125;        &#125;,        tiaozhuan(type, id,idType) &#123;         if(type &#x3D;&#x3D; 1 )&#123;            &#x2F;&#x2F; 类型 1公开课 2网络课 3团课            if (idType &#x3D;&#x3D; 1) &#123;                wx.navigateTo(&#123;                    url: &quot;&#x2F;pages&#x2F;class&#x2F;public_clsss_details&#x2F;public_clsss_details?id&#x3D;&quot; + id                &#125;)            &#125; else if (idType &#x3D;&#x3D; 2) &#123;                wx.navigateTo(&#123;                    url: &quot;&#x2F;pages&#x2F;class&#x2F;network_clsss_details&#x2F;network_clsss_details?id&#x3D;&quot; + id                &#125;)            &#125; else if (idType &#x3D;&#x3D; 3) &#123;                wx.navigateTo(&#123;                    url: &quot;&#x2F;pages&#x2F;class&#x2F;league_clsss_details&#x2F;league_clsss_details?id&#x3D;&quot; + id                &#125;)            &#125;        &#125; else if (type &#x3D;&#x3D; 2) &#123;            wx.navigateTo(&#123;                url: &quot;&#x2F;pages&#x2F;class&#x2F;tutorpages&#x2F;tutorpages?id&#x3D;&quot; + id            &#125;)        &#125; else if (type &#x3D;&#x3D; 3) &#123;            wx.navigateTo(&#123;                url: &quot;&#x2F;pages&#x2F;class&#x2F;tutor_recruit&#x2F;tutor_recruit&quot;            &#125;)        &#125;        &#125;,    &#125;,&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> swiper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ApacheBench</title>
      <link href="tool/ad/"/>
      <url>tool/ad/</url>
      
        <content type="html"><![CDATA[<h1 id="ApacheBench"><a href="#ApacheBench" class="headerlink" title="ApacheBench"></a>ApacheBench</h1><p>输入 ab -n 100 -c 20 <a href="http://localhost:8080/%EF%BC%88-n%E5%8F%91%E5%87%BA100%E4%B8%AA%E8%AF%B7%E6%B1%82%EF%BC%8C-c%E6%A8%A1%E6%8B%9F20%E5%B9%B6%E5%8F%91%EF%BC%8C%E7%9B%B8%E5%BD%93100%E4%BA%BA%E5%90%8C%E6%97%B6%E8%AE%BF%E9%97%AE%EF%BC%8C%E5%90%8E%E9%9D%A2%E6%98%AF%E6%B5%8B%E8%AF%95url%EF%BC%89">http://localhost:8080/（-n发出100个请求，-c模拟20并发，相当100人同时访问，后面是测试url）</a></p><p>输入 ab -n 100 -c 20 <a href="http://localhost:8080/test?str=AA">http://localhost:8080/test?str=AA</a> （传入一个参数）</p><p>输入 ab -t 60 -c 20 <a href="http://localhost:8080/index.html">http://localhost:8080/index.html</a> （ 在60秒内发请求，一次20个请求）</p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ApacheBench </tag>
            
            <tag> ad </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git PHPstorm</title>
      <link href="tool/git_PHPstorm/"/>
      <url>tool/git_PHPstorm/</url>
      
        <content type="html"><![CDATA[<h1 id="本地Git-版本控制-的搭建"><a href="#本地Git-版本控制-的搭建" class="headerlink" title="本地Git(版本控制)的搭建"></a>本地Git(版本控制)的搭建</h1><p>使用PHPstorm以及PortableGit自带的Git工具,进行版本控制的搭建</p><ul><li>打开PHPstorm的设置</li></ul><p><img src="https://box.kancloud.cn/502ea2a4f5ea71a8635eab3654205951_405x410.png" alt="Alt text" title="迪拜de天空"></p><ul><li>点击右侧”+”添加, 选择你的项目文件夹 和 选择 git</li><li></li><li>点击 “Configure VCS”,选择设置好 你自己的 PortableGit Git文件地址即可<br><img src="https://box.kancloud.cn/d4308b5563ba83954b1cc626c3e25286_725x386.png"></li><li>关闭重启PHPstorm,git服务就可以生效<br><img src="https://box.kancloud.cn/e30ac42f571d8b39d3ae9504ecaf9914_770x490.png"></li><li>在项目文件点右键 既可以使用<br><img src="https://box.kancloud.cn/128d3c24261ec55438ed69d21484a839_711x330.png"><br>也可以在左下角的版本控制面板中使用</li></ul><h1 id="本地项目推送远程GIT仓库"><a href="#本地项目推送远程GIT仓库" class="headerlink" title="本地项目推送远程GIT仓库"></a>本地项目推送远程GIT仓库</h1><h2 id="使用PHPSTORM推送项目到远程仓库"><a href="#使用PHPSTORM推送项目到远程仓库" class="headerlink" title="使用PHPSTORM推送项目到远程仓库"></a>使用PHPSTORM推送项目到远程仓库</h2><p><img src="https://box.kancloud.cn/e6e98a73adff63139869e9bff8f9040b_777x492.png"></p><h2 id="初始化版本控制"><a href="#初始化版本控制" class="headerlink" title="初始化版本控制"></a>初始化版本控制</h2><p><img src="https://box.kancloud.cn/9d0a1b4dd61441249241c2159dee5679_675x407.png"></p><h2 id="选择git"><a href="#选择git" class="headerlink" title="选择git"></a>选择git</h2><p><img src="https://box.kancloud.cn/06a336dc378e67ccc30881144c568aa9_625x235.png"></p><h2 id="添加文件到本地GIT库"><a href="#添加文件到本地GIT库" class="headerlink" title="添加文件到本地GIT库"></a>添加文件到本地GIT库</h2><blockquote><p>用鼠标选择你要添加到版本库的文件</p></blockquote><p><img src="https://box.kancloud.cn/59fc80e492bd670fec6789158828e797_499x478.png"></p><blockquote><p>选择成功后 在选择的文件上点击右键 选择 git —-add</p></blockquote><p><img src="https://box.kancloud.cn/fc3e2685ad3fd98aa7145455ca786531_743x789.png"></p><blockquote><p>添加到版本库的文件 他的颜色会变成绿色</p></blockquote><p><img src="https://box.kancloud.cn/d99f20fb7b2fb91897069aed315a0662_454x512.png"><br>标注文件并推送到远程仓库</p><blockquote><p>在项目主点击右键 或者 VCS上选择 git—-Commit Dir</p></blockquote><p><img src="https://box.kancloud.cn/30d719b9712fd002a763a70308b91761_692x773.png"></p><blockquote><p>点击默认推送的 Define remote</p></blockquote><p><img src="https://box.kancloud.cn/48a210cf0a4090a22cfd448c51c4a371_590x566.png"></p><blockquote><p>填写你远程仓库的别名和地址</p></blockquote><p><img src="https://box.kancloud.cn/84868ddefeee47df69f0a0c28302a8a6_602x568.png"></p><blockquote><p>填写你远程仓库的密码</p></blockquote><p><img src="https://box.kancloud.cn/171c7859b66a48fecd720a756850f796_602x568.png"></p><h1 id="使用PHPSTORM拉取全新的项目"><a href="#使用PHPSTORM拉取全新的项目" class="headerlink" title="使用PHPSTORM拉取全新的项目"></a>使用PHPSTORM拉取全新的项目</h1><blockquote><p>注意 拉取全新的项目 会自动创建一个新目录 无需自己创建目录<br>通过欢迎界面的或者菜单中的 Create out from Version Control 创建</p></blockquote><p><img src="https://box.kancloud.cn/7510863c96b4c46cd5199e9bdd747bd4_487x441.png"><br><img src="https://box.kancloud.cn/3c2cd8b168c880e455a476e8a44ffcd5_573x519.png"></p><h2 id="填写仓库地址-和存储名称"><a href="#填写仓库地址-和存储名称" class="headerlink" title="填写仓库地址 和存储名称"></a>填写仓库地址 和存储名称</h2><p><img src="https://box.kancloud.cn/7148c80d87c50143043067aa06bf9e5b_542x197.png"></p><h2 id="打开存储目录即可"><a href="#打开存储目录即可" class="headerlink" title="打开存储目录即可"></a>打开存储目录即可</h2><p><img src="https://box.kancloud.cn/f151c8b3c7e7b23dc74d94d604d46a2e_790x650.png"></p><h2 id="使用命令行创建远程仓库"><a href="#使用命令行创建远程仓库" class="headerlink" title="使用命令行创建远程仓库"></a>使用命令行创建远程仓库</h2><blockquote><p>现在的git仓库很多 你可以使用主流共用的git仓库 如github.com等<br>当然 有条件也可以自己搭建个人的git仓库<br>我现在 就已经创建了一个私有远程git仓库</p></blockquote><h1 id="git初始化"><a href="#git初始化" class="headerlink" title="git初始化"></a>git初始化</h1><blockquote><p>打开 PhpStorm的Terminal 快捷键 Alt+F12<br>    使用windows命令行也可以</p></blockquote><p><img src="https://box.kancloud.cn/b2fb4bd5b4ca52b5337afdf1a2a415ef_449x371.png"></p><blockquote><p>Git初始化命令是<br>git init</p></blockquote><p>运行成功的后为<br><img src="https://box.kancloud.cn/79ea98198a6042b87f7dbd0af29497fc_558x237.png"></p><ul><li>如果git命令无法执行 请安装git并添加环境变量</li></ul><p>把文件添加到版本库中</p><p>使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件(夹)</p><blockquote><p>git add .</p></blockquote><pre><code>    也可以使用rm 命令剔除部分内容 例如runtime文件夹        在本地仓库删除文件    $ git rm 我的文件    在本地仓库删除文件夹    $ git rm -r 我的文件夹/        git rm -r  runtime/        填写本次GIT提交的描述信息        git commit  -m &quot;项目初始化&quot;</code></pre><ul><li><p>为远程GIT仓库创建用户名或者别名</p><p>  git remote add origin <a href="mailto:&#103;&#105;&#116;&#64;&#103;&#x69;&#116;&#104;&#x75;&#x62;&#x2e;&#x63;&#x6f;&#x6d;">&#103;&#105;&#116;&#64;&#103;&#x69;&#116;&#104;&#x75;&#x62;&#x2e;&#x63;&#x6f;&#x6d;</a>:yourname/仓库名.git<br>  origin为你为这个远程仓库定义的默认名字 当然你也可以添加其他的别名<br>  名字你可以随便起 当存在多个远程时候 他就是区分仓库的身份标识<br>  这里 我把我自己的仓库定义为mikkle</p><p>  git remote add mikkle <a href="http://123@git.123.cn/server/study.git">http://123@git.123.cn/server/study.git</a></p></li></ul><h2 id="首次提交代码"><a href="#首次提交代码" class="headerlink" title="首次提交代码"></a>首次提交代码</h2><pre><code>    进行第一次提交 命令为 git push -u origin master    origin 为用户默认名,我的用的别名为mikkle,    master 为主分支    如果推送到默认的仓库 也可以不使用 -u 参数        git push -u mikkle master  </code></pre><p>输入你的密码即可 你也可以使用ssh方式</p><p>推送成功</p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> PHPstorm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx</title>
      <link href="server/nginx/"/>
      <url>server/nginx/</url>
      
        <content type="html"><![CDATA[<h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><p>命令: nginx -c /usr/local/nginx/conf/nginx.conf</p><p>重启服务： service nginx restart</p><p>快速停止或关闭Nginx：nginx -s stop</p><p>正常停止或关闭Nginx：nginx -s quit</p><p>配置文件修改重装载命令：nginx -s reload</p><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><p>什么是反向代理？ 互联网应用基本都基于CS基本结构，即client端和server端。代理其实就是在client端和真正的server端之前增加一层提供特定服务的服务器，即代理服务器。</p><h3 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h3><p>反向代理不好理解，正向代理大家总有用过，翻墙工具其实就是一个正向代理工具。它会把<br>们访问墙外服务器server的网页请求，代理到一个可以访问该网站的代理服务器proxy，这个代理服务器proxy把墙外服务器server上的网页内容获取，再转发给客户</p><h3 id="反向代理-1"><a href="#反向代理-1" class="headerlink" title="反向代理"></a>反向代理</h3><p>在反向代理中（事实上，这种情况基本发生在所有的大型网站的页面请求中），客户端发送的请求，想要访问server服务器上的内容。但将被发送到一个代理服务器proxy，这个代理服务器将把请求代理到和自己属于同一个LAN下的内部服务器上，而用户真正想获得的内容就储存在这些内部服务器上</p><h3 id="为什么要Nginx反向代理"><a href="#为什么要Nginx反向代理" class="headerlink" title="为什么要Nginx反向代理"></a>为什么要Nginx反向代理</h3><p>使用反向代理最主要的两个原因：<br>1.安全及权限。可以看出，使用反向代理后，用户端将无法直接通过请求访问真正的内容服务器，而必须首先通过Nginx。可以通过在Nginx层上将危险或者没有权限的请求内容过滤掉，从而保证了服务器的安全。<br>2.负载均衡,例如一个网站的内容被部署在若干台服务器上，可以把这些机子看成一个集群，那么Nginx可以将接收到的客户端请求“均匀地”分配到这个集群中所有的服务器上（内部模块提供了多种负载均衡算法），从而实现服务器压力的负载均衡</p><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><h3 id="均衡策略"><a href="#均衡策略" class="headerlink" title="均衡策略"></a>均衡策略</h3><p>nginx的负载均衡策略可以划分为两大类：内置策略和扩展策略。内置策略包含加权轮询和ip hash，在默认情况下这两种策略会编译进nginx内核，只需在nginx配置中指明参数即可。扩展策略有很多，如fair、通用hash、consistent hash等，默认不编译进nginx内核。</p><ul><li><p>加权轮询 第一，如果可以把加权轮询算法分为先深搜索和先广搜索，那么nginx采用的是先深搜索算法，即将首先将请求都分给高权重的机器，直到该机器的权值降到了比其他机器低，才开始将请求分给下一个高权重的机器；第二，当所有后端机器都down掉时，nginx会立即将所有机器的标志位清成初始状态，以避免造成所有的机器都处在timeout的状态，从而导致整个前端被夯住</p></li><li><p>ip hash是nginx内置的另一个负载均衡的策略，流程和轮询很类似，只是其中的算法和具体的策略有些变化</p></li><li><p>fair策略是扩展策略，默认不被编译进nginx内核。其原理是根据后端服务器的响应时间判断负载情况，从中选出负载最轻的机器进行分流。</p></li><li><p>通用hash、一致性hash ,这两种也是扩展策略，在具体的实现上有些差别，通用hash比较简单，可以以nginx内置的变量为key进行hash，一致性hash采用了nginx内置的一致性hash环，可以支持memcache</p></li><li><p>session_sticky 此种策略就是一次会话内的请求都会落到同一个结点上</p></li></ul><h2 id="nginx-跨域"><a href="#nginx-跨域" class="headerlink" title="nginx 跨域"></a>nginx 跨域</h2><p>Nginx可以纯前端解决请求跨域问题。 特别是在前后端分离调试时， 经常需要在本地起前端工程， 接口希望拉取服务端的实际数据而不是本地的mock本地起一个nginx server。server_name是mysite-base.com，比如现在需要请求线上<a href="http://www.kaola.com域下的线上接口/">www.kaola.com域下的线上接口</a> <a href="http://www.kaola.com/getPCBanner%E2%80%A6">www.kaola.com/getPCBanner…</a> 的数据，当在页面里直接请求，浏览器会报错为了绕开浏览器的跨域安全限制，现在需要将请求的域名改成mysite-base.com。同时约定一个url规则来表明代理请求的身份，然后Nginx通过匹配该规则，将请求代理回原来的域。Nginx配置如下：</p><pre><code>    #请求跨域，这里约定代理请求url path是以/apis/开头    location ^~/apis/ &#123;        # 这里重写了请求，将正则匹配中的第一个()中$1的path，拼接到真正的请求后面，并用break停止后续匹配        rewrite ^/apis/(.*)$ /$1 break;        proxy_pass https://www.kaola.com/;    &#125;  //直接请求nginx也是会报跨域错误的这里设置允许跨域;如果代理地址已经允许跨域则不需要这些, 否则报错(虽然这样nginx跨域就没意义了)add_header Access-Control-Allow-Origin *;add_header Access-Control-Allow-Headers X-Requested-With;add_header Access-Control-Allow-Methods GET,POST,OPTIONS;</code></pre><p>在页面代码里，把请求url换成<a href="http://mysite-base.com/apis/getPCBannerList.html">http://mysite-base.com/apis/getPCBannerList.html</a> 。这样就可以正常请求到数据</p><h2 id="适配PC与移动环境"><a href="#适配PC与移动环境" class="headerlink" title="适配PC与移动环境"></a>适配PC与移动环境</h2><p>Nginx可以通过内置变量$http_user_agent，获取到请求客户端的userAgent，从而知道用户处于移动端还是PC，进而控制重定向到H5站还是PC站</p><pre><code>   location / &#123;        # 移动、pc设备适配        if ($http_user_agent ~* &#39;(Android|webOS|iPhone|iPod|BlackBerry)&#39;) &#123;            set $mobile_request &#39;1&#39;;        &#125;        if ($mobile_request = &#39;1&#39;) &#123;            rewrite ^.+ http://mysite-base-H5.com;        &#125;    &#125;  </code></pre><h2 id="合并请求"><a href="#合并请求" class="headerlink" title="合并请求"></a>合并请求</h2><p>前端性能优化中重要一点就是尽量减少http资源请求的数量 本地server mysite-base.com为例，static/js文件夹下有三个文件，文件内容很简单，分别为：<br>Nginx配置如下：<br>        # js资源http-concat<br>        # nginx-http-concat模块的参数远不止下面三个，剩下的请查阅文档<br>        location /static/js/ {<br>            concat on; # 是否打开资源合并开关<br>            concat_types application/javascript; # 允许合并的资源类型<br>            concat_unique off; # 是否允许合并不同类型的资源<br>            concat_max_files 5; # 允许合并的最大资源数目<br>        }<br>复制代码当在浏览器请求<a href="http://mysite-base.com/static/js/??a.js,b.js,c.js">http://mysite-base.com/static/js/??a.js,b.js,c.js</a> 时，发现三个js被合并成一个返回了</p><h2 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h2><p>在前端开发中，经常需要不同尺寸的图片要用到ngx_http_image_filter_module模块。这个模块是非基本模块，需要安装。 下面是图片缩放功能部分的Nginx配置：</p><pre><code># 图片缩放处理# 这里约定的图片处理url格式：以 mysite-base.com/img/路径访问location ~* /img/(.+)$ &#123;    alias /Users/cc/Desktop/server/static/image/$1; #图片服务端储存地址    set $width -; #图片宽度默认值    set $height -; #图片高度默认值    if ($arg_width != &quot;&quot;) &#123;        set $width $arg_width;    &#125;    if ($arg_height != &quot;&quot;) &#123;        set $height $arg_height;    &#125;    image_filter resize $width $height; #设置图片宽高    image_filter_buffer 10M;   #设置Nginx读取图片的最大buffer。    image_filter_interlace on; #是否开启图片图像隔行扫描    error_page 415 = 415.png; #图片处理错误提示图，例如缩放参数不是数字&#125;</code></pre><p>此外，可以通过proxy_cache配置Nginx缓存，避免每次请求都重新处理图片，减少Nginx服务器处理压力；还以可以通过和nginx-upload-module一起使用加入图片上传的功能等</p><h2 id="快速实现简单的访问限制"><a href="#快速实现简单的访问限制" class="headerlink" title="快速实现简单的访问限制"></a>快速实现简单的访问限制</h2><pre><code>location / &#123;    deny  192.168.1.100;    allow 192.168.1.10/200;    allow 10.110.50.16;    deny  all;&#125;</code></pre><p>其实deny和allow是ngx_http_access_module模块（已内置）中的语法。采用的是从上到下匹配方式，匹配到就跳出不再继续匹配。上述配置的意思就是，首先禁止192.168.1.100访问，然后允许192.168.1.10-200 ip段内的访问（排除192.168.1.100），同时允许10.110.50.16这个单独ip的访问，剩下未匹配到的全部禁止访问。实际生产中，经常和ngx_http_geo_module模块（可以更好地管理ip地址表，已内置）配合使用。</p><h2 id="请求过滤"><a href="#请求过滤" class="headerlink" title="请求过滤"></a>请求过滤</h2><pre><code>    根据状态码过滤        error_page 500 501 502 503 504 506 /50x.html;        location = /50x.html &#123;            #将跟路径改编为存放html的路径。            root /root/static/html;        &#125;    根据URL名称过滤，精准匹配URL，不匹配的URL全部重定向到主页。    location / &#123;        rewrite  ^.*$ /index.html  redirect;    &#125;    根据请求类型过滤        if ( $request_method !~ ^(GET|POST|HEAD)$ ) &#123;            return 403;        &#125;</code></pre><h2 id="nginx如何实现负载均衡"><a href="#nginx如何实现负载均衡" class="headerlink" title="nginx如何实现负载均衡"></a>nginx如何实现负载均衡</h2><p>Upstream指定后端服务器地址列表</p><pre><code>upstream balanceServer &#123;    server 10.1.22.33:12345;    server 10.1.22.34:12345;    server 10.1.22.35:12345;&#125;复制代码在server中拦截响应请求，并将请求转发到Upstream中配置的服务器列表。    server &#123;        server_name  fe.server.com;        listen 80;        location /api &#123;            proxy_pass http://balanceServer;        &#125;    &#125;</code></pre><p>轮询策略</p><pre><code>upstream balanceServer &#123;    server 10.1.22.33:12345;    server 10.1.22.34:12345;    server 10.1.22.35:12345;&#125;</code></pre><h2 id="反向代理-2"><a href="#反向代理-2" class="headerlink" title="反向代理"></a>反向代理</h2><pre><code>    upstream tomcats &#123;        server 127.0.0.1:9001;        server 127.0.0.1:9002;    &#125;        server &#123;        listen 80;        server_name  www.lianggzone.com;        location / &#123;            proxy_pass_header Server;            proxy_set_header Host $http_host;            proxy_set_header X-Real-IP $remote_addr;            proxy_set_header X-Scheme $scheme;            proxy_pass http://tomcats;        &#125;    &#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub和Coding同步的方法</title>
      <link href="server/git-coding/"/>
      <url>server/git-coding/</url>
      
        <content type="html"><![CDATA[<h1 id="GitHub和Coding同步的方法"><a href="#GitHub和Coding同步的方法" class="headerlink" title="GitHub和Coding同步的方法"></a>GitHub和Coding同步的方法</h1><h2 id="win"><a href="#win" class="headerlink" title="win"></a>win</h2><blockquote><p>/c/Users/Administrator/.ssh/id_rsa</p></blockquote><h2 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h2><blockquote><p>cd /.ssh</p></blockquote><p>复制秘钥到git和coding生成新的秘钥即可</p><h1 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h1><h2 id="关联GitHub远程库"><a href="#关联GitHub远程库" class="headerlink" title="关联GitHub远程库"></a>关联GitHub远程库</h2><p>这里我用的是 SSH 的方式，至于如何管理并配置 SSH，你可以参考这里</p><p>注意，远程库的名称叫 github，不叫 origin 了！</p><blockquote><p>git remote add github <a href="mailto:&#103;&#x69;&#x74;&#64;&#x67;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#x63;&#111;&#109;">&#103;&#x69;&#x74;&#64;&#x67;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#x63;&#111;&#109;</a>:jpdaka.git</p></blockquote><h2 id="关联Coding远程库"><a href="#关联Coding远程库" class="headerlink" title="关联Coding远程库"></a>关联Coding远程库</h2><p>同样注意，远程库的名称叫 coding，不叫 origin 了！</p><blockquote><p>git remote add coding <a href="mailto:&#103;&#105;&#x74;&#x40;&#x65;&#x2e;&#99;&#111;&#100;&#x69;&#110;&#103;&#46;&#x6e;&#101;&#x74;">&#103;&#105;&#x74;&#x40;&#x65;&#x2e;&#99;&#111;&#100;&#x69;&#110;&#103;&#46;&#x6e;&#101;&#x74;</a>:jpdaka/test.git</p></blockquote><p>现在，我们用 git remote -v 查看远程库信息，可以看到两个远程库</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">git add .git commit -m <span class="token string">"First commit"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="push到远程仓库"><a href="#push到远程仓库" class="headerlink" title="push到远程仓库"></a>push到远程仓库</h2><p>如果要 push 到 GitHub，使用命令：</p><blockquote><p>git push github master</p></blockquote><p>如果要 push 到 Coding，使用命令：</p><blockquote><p>git push coding master</p></blockquote><h1 id="获取自己的GitHubpages地址对应的IP"><a href="#获取自己的GitHubpages地址对应的IP" class="headerlink" title="获取自己的GitHubpages地址对应的IP"></a>获取自己的GitHubpages地址对应的IP</h1><blockquote><p>配置域名解析添加两条A解析记录，主机名分别是@和www<br>对应值填写更改获取到的IP</p></blockquote><h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h2><blockquote><p>配置域名解析<br>添加两条cname解析记录，主机名分别是@和www<br>对应值填写更改获取到的IP<br>绑定域名<br>这样就可以同步两边的内容了</p></blockquote><blockquote><p>ssh-keygen -t rsa -C 你的邮箱<br>git config -l 查看配置<br>运行ssh-keygen -t rsa 查看配置</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> Coding </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css建议</title>
      <link href="web/cssjx/"/>
      <url>web/cssjx/</url>
      
        <content type="html"><![CDATA[<h2 id="margin-和-padding"><a href="#margin-和-padding" class="headerlink" title="margin 和 padding"></a>margin 和 padding</h2><p>这里主要用于两个属性：margin 和 padding，我们以 margin 为例，padding 与之相同。盒子有上下左右四个方向，每个方向都有个外边距：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span>1px<span class="token punctuation">;</span><span class="token property">margin-right</span><span class="token punctuation">:</span>2px<span class="token punctuation">;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span>3px<span class="token punctuation">;</span><span class="token property">margin-left</span><span class="token punctuation">:</span>4px<span class="token punctuation">;</span>你可以简写成：<span class="token property">margin</span><span class="token punctuation">:</span>1px 2px 3px 4px<span class="token punctuation">;</span>语法 <span class="token property">margin</span><span class="token punctuation">:</span>top right bottom left<span class="token punctuation">;</span>//<span class="token property">四个方向的边距相同，等同于margin</span><span class="token punctuation">:</span>1px 1px 1px 1px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>1px<span class="token punctuation">;</span>//<span class="token property">上下边距都为1px，左右边距均为2px，等同于margin</span><span class="token punctuation">:</span>1px 2px 1px 2px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>1px 2px<span class="token punctuation">;</span>//<span class="token property">右边距和左边距相同，等同于margin</span><span class="token punctuation">:</span>1px 2px 3px 2px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>1px 2px 3px<span class="token punctuation">;</span>//注意，这里虽然上下边距都为1px，但是这里不能缩写。<span class="token property">margin</span><span class="token punctuation">:</span>1px 2px 1px 3px<span class="token punctuation">;</span>##二、边框（border）边框的属性如下：<span class="token property">border-width</span><span class="token punctuation">:</span>1px<span class="token punctuation">;</span><span class="token property">border-style</span><span class="token punctuation">:</span>solid<span class="token punctuation">;</span><span class="token property">border-color</span><span class="token punctuation">:</span>#000<span class="token punctuation">;</span>可以缩写为一句：<span class="token property">border</span><span class="token punctuation">:</span>1px solid #000<span class="token punctuation">;</span>语法 <span class="token property">border</span><span class="token punctuation">:</span>width style color<span class="token punctuation">;</span>##三、背景（Backgrounds）背景的属性如下：<span class="token property">background-color</span><span class="token punctuation">:</span>#f00<span class="token punctuation">;</span><span class="token property">background-image</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>background.gif<span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token property">background-repeat</span><span class="token punctuation">:</span>no-repeat<span class="token punctuation">;</span><span class="token property">background-attachment</span><span class="token punctuation">:</span>fixed<span class="token punctuation">;</span><span class="token property">background-position</span><span class="token punctuation">:</span>0 0<span class="token punctuation">;</span>可以缩写为一句：<span class="token property">background</span><span class="token punctuation">:</span>#f00 <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>background.gif<span class="token punctuation">)</span></span> no-repeat fixed 0 0<span class="token punctuation">;</span>语法是 <span class="token property">background</span><span class="token punctuation">:</span>color image repeat attachment position<span class="token punctuation">;</span>你可以省略其中一个或多个属性值，如果省略，该属性值将用浏览器默认值，默认值为：<span class="token property">color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span><span class="token property">image</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">repeat</span><span class="token punctuation">:</span> repeat<span class="token punctuation">;</span><span class="token property">attachment</span><span class="token punctuation">:</span> scroll<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> 0% 0%<span class="token punctuation">;</span>## 四、字体（fonts）字体的属性如下：<span class="token property">font-style</span><span class="token punctuation">:</span>italic<span class="token punctuation">;</span><span class="token property">font-variant</span><span class="token punctuation">:</span>small-caps<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span>bold<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>1em<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span>140%<span class="token punctuation">;</span><span class="token property">font-family</span><span class="token punctuation">:</span><span class="token string">"Lucida Grande"</span><span class="token punctuation">,</span>sans-serif<span class="token punctuation">;</span>可以缩写为一句：<span class="token property">font</span><span class="token punctuation">:</span>italic small-caps bold 1em/140%<span class="token string">"Lucida Grande"</span><span class="token punctuation">,</span>sans-serif<span class="token punctuation">;</span>注意，如果你缩写字体定义，至少要定义 font-size 和 font-family 两个值。## 五、列表（lists）取消默认的圆点和序号可以这样写 <span class="token property">list-style</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token property">list的属性如下</span><span class="token punctuation">:</span><span class="token property">list-style-type</span><span class="token punctuation">:</span>square<span class="token punctuation">;</span><span class="token property">list-style-position</span><span class="token punctuation">:</span>inside<span class="token punctuation">;</span><span class="token property">list-style-image</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>image.gif<span class="token punctuation">)</span></span><span class="token punctuation">;</span>可以缩写为一句：<span class="token property">list-style</span><span class="token punctuation">:</span>square inside <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>image.gif<span class="token punctuation">)</span></span><span class="token punctuation">;</span>## 六、颜色（Color）16进制的色彩值，如果每两位的值相同，可以缩写一半。例如：<span class="token property">Aqua</span><span class="token punctuation">:</span> #00ffff —— #0ff<span class="token property">Black</span><span class="token punctuation">:</span> #000000 —— #000<span class="token property">Blue</span><span class="token punctuation">:</span> #0000ff —— #00fDark <span class="token property">Grey</span><span class="token punctuation">:</span> #666666 —— #666<span class="token property">Fuchsia</span><span class="token punctuation">:</span>#ff00ff —— #f0fLight <span class="token property">Grey</span><span class="token punctuation">:</span> #cccccc —— #ccc<span class="token property">Lime</span><span class="token punctuation">:</span> #00ff00 —— #0f0<span class="token property">Orange</span><span class="token punctuation">:</span> #ff6600 —— #f60<span class="token property">Red</span><span class="token punctuation">:</span> #ff0000 —— #f00<span class="token property">White</span><span class="token punctuation">:</span> #ffffff —— #fff<span class="token property">Yellow</span><span class="token punctuation">:</span> #ffff00 —— #ff0## 七、属性值为0书写原则是，如果CSS属性值为0，那么你不必为其添加单位（如 px/em），你可能会这样写：<span class="token property">padding</span><span class="token punctuation">:</span>10px 5px 0px 0px<span class="token punctuation">;</span><span class="token property">试试这样吧</span><span class="token punctuation">:</span><span class="token property">padding</span><span class="token punctuation">:</span>10px 5px 0 0 <span class="token selector">;## 八、最后一个分号最后一个属性值后面分号可以不写，如：`#nav</span><span class="token punctuation">&#123;</span><span class="token property">border-top</span><span class="token punctuation">:</span>4px solid #333<span class="token punctuation">;</span><span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token property">font-variant</span><span class="token punctuation">:</span>normal<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">`可以简写成:`#nav</span><span class="token punctuation">&#123;</span><span class="token property">border-top</span><span class="token punctuation">:</span>4px solid #333<span class="token punctuation">;</span><span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token property">font-variant</span><span class="token punctuation">:</span>normal<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">&#125;</span><span class="token selector">`## 九、字体粗细（font-weight） ##你可能会这样写:h1</span><span class="token punctuation">&#123;</span><span class="token property">font-weight</span><span class="token punctuation">:</span>bold<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">p</span><span class="token punctuation">&#123;</span><span class="token property">font-weight</span><span class="token punctuation">:</span>normal<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">可以简写成:h1</span><span class="token punctuation">&#123;</span><span class="token property">font-weight</span><span class="token punctuation">:</span>700<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">p</span><span class="token punctuation">&#123;</span><span class="token property">font-weight</span><span class="token punctuation">:</span>400<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>## 十、圆角半径（border-radius） ##border-radius 是 css3 中新加入的属性，用来实现圆角边框。<span class="token property">-moz-border-radius-bottomleft</span><span class="token punctuation">:</span>6px<span class="token punctuation">;</span><span class="token property">-moz-border-radius-topleft</span><span class="token punctuation">:</span>6px<span class="token punctuation">;</span><span class="token property">-moz-border-radius-topright</span><span class="token punctuation">:</span>6px<span class="token punctuation">;</span><span class="token property">-webkit-border-bottom-left-radius</span><span class="token punctuation">:</span>6px<span class="token punctuation">;</span><span class="token property">-webkit-border-top-left-radius</span><span class="token punctuation">:</span>6px<span class="token punctuation">;</span><span class="token property">-webkit-border-top-right-radius</span><span class="token punctuation">:</span>6px<span class="token punctuation">;</span><span class="token property">border-bottom-left-radius</span><span class="token punctuation">:</span>6px<span class="token punctuation">;</span><span class="token property">border-top-left-radius</span><span class="token punctuation">:</span>6px<span class="token punctuation">;</span><span class="token property">border-top-right-radius</span><span class="token punctuation">:</span>6px<span class="token punctuation">;</span><span class="token property">可以简写成</span><span class="token punctuation">:</span><span class="token property">-moz-border-radius</span><span class="token punctuation">:</span>6px 6px 0<span class="token punctuation">;</span><span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span>6px 6px 0<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span>6px 6px 0<span class="token punctuation">;</span>语法 <span class="token property">border-radius</span><span class="token punctuation">:</span>topleft topright bottomright bottomleft<span class="token punctuation">;</span>## 什么是rem ##CSS3新增的一个相对单位rem（root <span class="token property">em，根em）。rem是相对于根节点（或者是html节点）。如果根节点设置了font-size</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token property">那么font-size</span><span class="token punctuation">:</span>1.2rem<span class="token selector">;字体大小等于12px。## 1. 计算页面的dpr ##    if (!dpr &amp;&amp; !scale)</span> <span class="token punctuation">&#123;</span>    var isAndroid = win.navigator.appVersion.<span class="token function">match</span><span class="token punctuation">(</span>/android/gi<span class="token punctuation">)</span><span class="token punctuation">;</span>    var isIPhone = win.navigator.appVersion.<span class="token function">match</span><span class="token punctuation">(</span>/iphone/gi<span class="token punctuation">)</span><span class="token punctuation">;</span>    var devicePixelRatio = win.devicePixelRatio<span class="token selector">;    if (isIPhone)</span> <span class="token punctuation">&#123;</span>        <span class="token selector">// iOS下，3和3以上的屏，用3倍的方案，2用2倍方案，其余的用1倍方案        if (devicePixelRatio >= 3 &amp;&amp; (!dpr || dpr >= 3))</span> <span class="token punctuation">&#123;</span>                            dpr = 3<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token selector">else if (devicePixelRatio >= 2 &amp;&amp; (!dpr || dpr >= 2))</span><span class="token punctuation">&#123;</span>            dpr = 2<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token selector">else</span> <span class="token punctuation">&#123;</span>            dpr = 1<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token selector">else</span> <span class="token punctuation">&#123;</span>        // 其他设备下，仍旧使用1倍的方案        dpr = 1<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    scale = 1 / dpr<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token selector">## 如何转换rem ##对于使用webpack的来说，其实也是有一个postcss插件的px2rem，可以很轻松的配置相关属性，转换成相对于的rem单位。比如我们的.postcssrc 配置如下：module.exports =</span> <span class="token punctuation">&#123;</span>  <span class="token string">"plugins"</span><span class="token selector">:</span> <span class="token punctuation">&#123;</span>    <span class="token string">"postcss-px2rem"</span><span class="token selector">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">baseDpr</span><span class="token punctuation">:</span> 1<span class="token punctuation">,</span>      <span class="token property">remUnit</span><span class="token punctuation">:</span> 37.5<span class="token punctuation">,</span>      <span class="token property">onePxComment</span><span class="token punctuation">:</span> <span class="token string">'1px'</span><span class="token punctuation">,</span>      <span class="token property">forcePxComment</span><span class="token punctuation">:</span> <span class="token string">'!px'</span><span class="token punctuation">,</span>      <span class="token property">keepComment</span><span class="token punctuation">:</span> <span class="token string">'!no'</span><span class="token punctuation">,</span>      <span class="token property">forcePxProperty</span><span class="token punctuation">:</span> [<span class="token string">'font-size'</span>] // font-size强制使用px单位    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">## 1. 文本字号不建议使用rem ##前面大家都见证了如何使用rem来完成H5适配。那么文本又将如何处理适配。是不是也通过rem来做自动适配。显然，我们在iPhone3G和iPhone4的Retina屏下面，希望看到的文本字号是相同的。也就是说，我们不希望文本在Retina屏幕下变小，另外，我们希望在大屏手机上看到更多文本，以及，现在绝大多数的字体文件都自带一些点阵尺寸，通常是16px和24px，所以我们不希望出现13px和15px这样的奇葩尺寸。如此一来，就决定了在制作H5的页面中，rem并不适合用到段落文本上。所以在Flexible整个适配方案中，考虑文本还是使用px作为单位。只不过使用[data-dpr]属性来区分不同dpr下的文本字号大小。配置完成之后，在实际使用时，你只要像下面这样使用：.selector</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ddd<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token selector">**px2rem处理之后将会变成**.selector</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>   <span class="token property">height</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ddd<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">[data-dpr="1"] .selector</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">[data-dpr="2"] .selector</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 28px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">[data-dpr="3"] .selector</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>因为不同的dpr，屏幕会缩成不同比例，所以这里的字号会根据dpr进行相应的放大。举个例子，如果data-dpr = 2 那么页面的viewport会被缩小，所以字号需要相应的乘以比例进行放大。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/flashlizi/cssrem">px转成rem的插件地址</a></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CURL</title>
      <link href="backend/curl/"/>
      <url>backend/curl/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP对CURL函数的封装，支持GET-POST请求"><a href="#PHP对CURL函数的封装，支持GET-POST请求" class="headerlink" title="PHP对CURL函数的封装，支持GET/POST请求"></a>PHP对CURL函数的封装，支持GET/POST请求</h1><p>代码如下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/** * <span class="token function">curl</span> 函数 * @param string <span class="token variable">$url</span> 请求的地址 * @param string <span class="token variable">$type</span> POST/GET/post/get * @param array <span class="token variable">$data</span> 要传输的数据 * @param string <span class="token variable">$err_msg</span> 可选的错误信息（引用传递） * @param int <span class="token variable">$timeout</span> 超时时间 * @param array 证书信息 * @author 勾国印 */<span class="token keyword">function</span> GoCurl<span class="token punctuation">(</span><span class="token variable">$url</span>, <span class="token variable">$type</span>, <span class="token variable">$data</span> <span class="token operator">=</span> false, <span class="token operator">&amp;</span><span class="token variable">$err_msg</span> <span class="token operator">=</span> null, <span class="token variable">$timeout</span> <span class="token operator">=</span> <span class="token number">20</span>, <span class="token variable">$cert_info</span> <span class="token operator">=</span> array<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">&#123;</span>    <span class="token variable">$type</span> <span class="token operator">=</span> strtoupper<span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$type</span> <span class="token operator">==</span> <span class="token string">'GET'</span> <span class="token operator">&amp;&amp;</span> is_array<span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">))</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> http_build_query<span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$option</span> <span class="token operator">=</span> array<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$type</span> <span class="token operator">==</span> <span class="token string">'POST'</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$option</span><span class="token punctuation">[</span>CURLOPT_POST<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$type</span> <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$option</span><span class="token punctuation">[</span>CURLOPT_POSTFIELDS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> elseif <span class="token punctuation">(</span><span class="token variable">$type</span> <span class="token operator">==</span> <span class="token string">'GET'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$url</span> <span class="token operator">=</span> strpos<span class="token punctuation">(</span><span class="token variable">$url</span>, <span class="token string">'?'</span><span class="token punctuation">)</span> <span class="token operator">!=</span><span class="token operator">=</span> <span class="token boolean">false</span> ? <span class="token variable">$url</span><span class="token builtin class-name">.</span><span class="token string">'&amp;'</span><span class="token builtin class-name">.</span><span class="token variable">$data</span> <span class="token builtin class-name">:</span>  <span class="token variable">$url</span><span class="token builtin class-name">.</span><span class="token string">'?'</span><span class="token builtin class-name">.</span><span class="token variable">$data</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$option</span><span class="token punctuation">[</span>CURLOPT_URL<span class="token punctuation">]</span>            <span class="token operator">=</span> <span class="token variable">$url</span><span class="token punctuation">;</span>    <span class="token variable">$option</span><span class="token punctuation">[</span>CURLOPT_FOLLOWLOCATION<span class="token punctuation">]</span> <span class="token operator">=</span> TRUE<span class="token punctuation">;</span>    <span class="token variable">$option</span><span class="token punctuation">[</span>CURLOPT_MAXREDIRS<span class="token punctuation">]</span>      <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>    <span class="token variable">$option</span><span class="token punctuation">[</span>CURLOPT_RETURNTRANSFER<span class="token punctuation">]</span> <span class="token operator">=</span> TRUE<span class="token punctuation">;</span>    <span class="token variable">$option</span><span class="token punctuation">[</span>CURLOPT_TIMEOUT<span class="token punctuation">]</span>        <span class="token operator">=</span> <span class="token variable">$timeout</span><span class="token punctuation">;</span>    //设置证书信息    if<span class="token punctuation">(</span><span class="token operator">!</span>empty<span class="token punctuation">(</span><span class="token variable">$cert_info</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>empty<span class="token punctuation">(</span><span class="token variable">$cert_info</span><span class="token punctuation">[</span><span class="token string">'cert_file'</span><span class="token punctuation">]</span><span class="token punctuation">))</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$option</span><span class="token punctuation">[</span>CURLOPT_SSLCERT<span class="token punctuation">]</span>       <span class="token operator">=</span> <span class="token variable">$cert_info</span><span class="token punctuation">[</span><span class="token string">'cert_file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$option</span><span class="token punctuation">[</span>CURLOPT_SSLCERTPASSWD<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$cert_info</span><span class="token punctuation">[</span><span class="token string">'cert_pass'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$option</span><span class="token punctuation">[</span>CURLOPT_SSLCERTTYPE<span class="token punctuation">]</span>   <span class="token operator">=</span> <span class="token variable">$cert_info</span><span class="token punctuation">[</span><span class="token string">'cert_type'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    //设置CA    if<span class="token punctuation">(</span><span class="token operator">!</span>empty<span class="token punctuation">(</span><span class="token variable">$cert_info</span><span class="token punctuation">[</span><span class="token string">'ca_file'</span><span class="token punctuation">]</span><span class="token punctuation">))</span> <span class="token punctuation">&#123;</span>        // 对认证证书来源的检查，0表示阻止对证书的合法性的检查。1需要设置CURLOPT_CAINFO        <span class="token variable">$option</span><span class="token punctuation">[</span>CURLOPT_SSL_VERIFYPEER<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token variable">$option</span><span class="token punctuation">[</span>CURLOPT_CAINFO<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$cert_info</span><span class="token punctuation">[</span><span class="token string">'ca_file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        // 对认证证书来源的检查，0表示阻止对证书的合法性的检查。1需要设置CURLOPT_CAINFO        <span class="token variable">$option</span><span class="token punctuation">[</span>CURLOPT_SSL_VERIFYPEER<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$ch</span> <span class="token operator">=</span> curl_init<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    curl_setopt_array<span class="token punctuation">(</span><span class="token variable">$ch</span>, <span class="token variable">$option</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$response</span> <span class="token operator">=</span> curl_exec<span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$curl_no</span>  <span class="token operator">=</span> curl_errno<span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$curl_err</span> <span class="token operator">=</span> curl_error<span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    curl_close<span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    // error_log    if<span class="token punctuation">(</span><span class="token variable">$curl_no</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        if<span class="token punctuation">(</span><span class="token variable">$err_msg</span> <span class="token operator">!=</span><span class="token operator">=</span> null<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$err_msg</span> <span class="token operator">=</span> <span class="token string">'('</span><span class="token builtin class-name">.</span><span class="token variable">$curl_no</span><span class="token builtin class-name">.</span><span class="token string">')'</span><span class="token builtin class-name">.</span><span class="token variable">$curl_err</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token builtin class-name">return</span> <span class="token variable">$response</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> 使用方法如下： <span class="token variable">$url</span>   <span class="token operator">=</span> <span class="token string">'请求地址'</span><span class="token punctuation">;</span><span class="token variable">$data</span> <span class="token operator">=</span> array<span class="token punctuation">(</span>            <span class="token string">'phoneNum'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'18614064456'</span>,        <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$json</span> <span class="token operator">=</span> GoCurl<span class="token punctuation">(</span><span class="token variable">$url</span>, <span class="token variable">$data</span>, <span class="token string">'POST'</span>, <span class="token variable">$error_msg</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$array</span> <span class="token operator">=</span> json_decode<span class="token punctuation">(</span><span class="token variable">$json</span>, <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>print_r<span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment"># curl </span>   <span class="token variable">$ch</span> <span class="token operator">=</span> curl_init<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   //设置超时   curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_TIMEOUT,30<span class="token punctuation">)</span><span class="token punctuation">;</span>   //这里设置代理，如果有的话   //curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>,CURLOPT_PROXY, <span class="token string">'8.8.8.8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   //curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>,CURLOPT_PROXYPORT, <span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>,CURLOPT_URL,<span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>,CURLOPT_SSL_VERIFYPEER,FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>   curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>,CURLOPT_SSL_VERIFYHOST,FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>   //设置header   curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_HEADER, FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>   //要求结果为字符串且输出到屏幕上   curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_RETURNTRANSFER, TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>   //post提交方式   <span class="token variable">$all_param</span> <span class="token operator">=</span> <span class="token string">'content='</span><span class="token builtin class-name">.</span><span class="token variable">$content</span><span class="token punctuation">;</span>   curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_POST, TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>   //开始请求   curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="token variable">$all_param</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   //运行curl   <span class="token variable">$data</span> <span class="token operator">=</span> curl_exec<span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   curl_close<span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">## post方式</span><span class="token variable">$data_string</span> :要传输的数据//初始化 <span class="token variable">$ch</span> <span class="token operator">=</span> curl_init<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_URL, <span class="token string">'访问的接口地址'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_CUSTOMREQUEST, <span class="token string">"POST"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_POSTFIELDS,<span class="token variable">$data_string</span><span class="token punctuation">)</span><span class="token punctuation">;</span> curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_RETURNTRANSFER,true<span class="token punctuation">)</span><span class="token punctuation">;</span> curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_HTTPHEADER, array<span class="token punctuation">(</span><span class="token string">'Content-Type: application/json'</span>,<span class="token string">'Content-Length: '</span> <span class="token builtin class-name">.</span> strlen<span class="token punctuation">(</span><span class="token variable">$data_string</span><span class="token punctuation">))</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//执行并获取接口传的内容 <span class="token variable">$ret</span> <span class="token operator">=</span> curl_exec<span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> http_post_json<span class="token punctuation">(</span><span class="token variable">$url</span>, <span class="token variable">$jsonStr</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token variable">$ch</span> <span class="token operator">=</span> curl_init<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_POST, <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_URL, <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="token variable">$jsonStr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_HTTPHEADER, array<span class="token punctuation">(</span>      <span class="token string">'Content-Type: application/json; charset=utf-8'</span>,      <span class="token string">'Content-Length: '</span> <span class="token builtin class-name">.</span> strlen<span class="token punctuation">(</span><span class="token variable">$jsonStr</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token variable">$response</span> <span class="token operator">=</span> curl_exec<span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token variable">$httpCode</span> <span class="token operator">=</span> curl_getinfo<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLINFO_HTTP_CODE<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token builtin class-name">return</span> array<span class="token punctuation">(</span><span class="token variable">$httpCode</span>, <span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$url</span> <span class="token operator">=</span> <span class="token string">"http://blog.snsgou.com"</span><span class="token punctuation">;</span><span class="token variable">$jsonStr</span> <span class="token operator">=</span> json_encode<span class="token punctuation">(</span>array<span class="token punctuation">(</span><span class="token string">'a'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">1</span>, <span class="token string">'b'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">))</span><span class="token punctuation">;</span>list<span class="token punctuation">(</span><span class="token variable">$returnCode</span>, <span class="token variable">$returnContent</span><span class="token punctuation">)</span> <span class="token operator">=</span> http_post_json<span class="token punctuation">(</span><span class="token variable">$url</span>, <span class="token variable">$jsonStr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> java_id<span class="token punctuation">(</span><span class="token variable">$url</span>,<span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$ch</span> <span class="token operator">=</span> curl_init<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//设置超时curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_TIMEOUT,30<span class="token punctuation">)</span><span class="token punctuation">;</span>//这里设置代理，如果有的话//curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>,CURLOPT_PROXY, <span class="token string">'8.8.8.8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>,CURLOPT_PROXYPORT, <span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span>curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>,CURLOPT_URL,<span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>,CURLOPT_SSL_VERIFYPEER,FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>,CURLOPT_SSL_VERIFYHOST,FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>//设置headercurl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_HEADER, FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>//要求结果为字符串且输出到屏幕上curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_RETURNTRANSFER, TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>//post提交方式<span class="token variable">$all_param</span> <span class="token operator">=</span> <span class="token variable">$content</span><span class="token punctuation">;</span>curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_POST, TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>//开始请求curl_setopt<span class="token punctuation">(</span><span class="token variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="token variable">$all_param</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//运行curl<span class="token variable">$data</span> <span class="token operator">=</span> curl_exec<span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token builtin class-name">return</span> <span class="token variable">$data</span><span class="token punctuation">;</span>curl_close<span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CURL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css3</title>
      <link href="web/css3/"/>
      <url>web/css3/</url>
      
        <content type="html"><![CDATA[<h2 id="背景图垂直、水平均居中"><a href="#背景图垂直、水平均居中" class="headerlink" title="背景图垂直、水平均居中"></a>背景图垂直、水平均居中</h2><pre class="line-numbers language-background-position:" data-language="background-position:"><div class="caption"><span>center center;</span></div><code class="language-background-position:">background-position: center center;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="让背景图基于容器大小伸缩"><a href="#让背景图基于容器大小伸缩" class="headerlink" title="让背景图基于容器大小伸缩"></a>让背景图基于容器大小伸缩</h2><pre class="line-numbers language-none"><code class="language-none">background-repeat: no-repeat;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="当内容高度大于图片高度时，背景图像的位置相对于viewport固定"><a href="#当内容高度大于图片高度时，背景图像的位置相对于viewport固定" class="headerlink" title="当内容高度大于图片高度时，背景图像的位置相对于viewport固定"></a>当内容高度大于图片高度时，背景图像的位置相对于viewport固定</h2><p>background-attachment: fixed;</p><h2 id="让背景图基于容器大小伸缩-1"><a href="#让背景图基于容器大小伸缩-1" class="headerlink" title="让背景图基于容器大小伸缩"></a>让背景图基于容器大小伸缩</h2><p>background-size: cover;</p><h2 id="position-sticky"><a href="#position-sticky" class="headerlink" title="position: sticky"></a>position: sticky</h2><p><img src="https://user-gold-cdn.xitu.io/2018/12/12/167a27466d618a59?imageslim"></p><p>新建一个sticky属性的元素。它的运行效果和fixed相同，但不会挡住任何元素。你最好看看<a href="https://codepen.io/CSSKing/pen/yyMGPJ">例子</a> 只有Mozilla和Safari浏览器支持这一属性，但你也可以像下面那样使用它：</p><p><code>.sticky &#123;   position: static;   position: sticky;   top: 0px; &#125;</code></p><h2 id="新的尺寸单位"><a href="#新的尺寸单位" class="headerlink" title="新的尺寸单位"></a>新的尺寸单位</h2><p>不久之前，一些新的用以描述不同元素大小的尺寸单位问世了，它们是：</p><blockquote></blockquote><p>vw (viewport width) - 浏览器窗口宽度的1%。</p><blockquote></blockquote><p>vh (viewport height) - 同上，只不过用来描述高度。</p><blockquote></blockquote><p>vmin and vmax 设置介于vh和vw之间的最大最小值。</p><p>有趣的是，几乎所有的现代浏览器都能很好地支持它们，所以你可以放心地使用。<br>为什么我们需要这些新的单位？因为它们可以让不同的尺寸更容易被定义，你不要为父元素指定任何的百分比或者别的什么，请看例子：<a href="https://codepen.io/CrocoDillon/pen/fBJxu">地址&gt;&gt;&gt;</a></p><blockquote><p>.some-text {<br>    font-size: 100vh;<br>    line-height: 100vh;<br>}</p></blockquote><pre><code>IE9应该用vm而不是vmin。iOS7在使用vh的时候可能会有bug。vmax至今并未得到全面的支持。</code></pre><h2 id="visibility-visible-显示隐藏"><a href="#visibility-visible-显示隐藏" class="headerlink" title="visibility: visible 显示隐藏"></a>visibility: visible 显示隐藏</h2><p>把一个设置为visibility: visible的元素放在一个设置为visibility: hidden的元素里面，会发生什么？</p><pre class="line-numbers language-none"><code class="language-none">.hidden &#123;  visibility: hidden;&#125;.hidden .visible &#123;  visibility: visible;&#125;&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://codepen.io/CSSKing/pen/lxBfk">查看效果</a></p><h2 id="使用硬件加速"><a href="#使用硬件加速" class="headerlink" title="使用硬件加速"></a>使用硬件加速</h2><p>有时候动画可能会导致用户的电脑卡顿，你可以在特定元素中使用硬件加速来避免这个问题：</p><blockquote><p>.block {<br>    transform: translateZ(0);<br>}</p></blockquote><p>复制代码你并不会察觉有什么不同，但浏览器会为这个元素进行3D硬件加速，在will-change这个特殊属性未被全面支持之前，这个方法还是很有用的。</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php开发工具</title>
      <link href="tool/phptools/"/>
      <url>tool/phptools/</url>
      
        <content type="html"><![CDATA[<h2 id="Laragon-–-PHP-集成环境"><a href="#Laragon-–-PHP-集成环境" class="headerlink" title="Laragon – PHP 集成环境"></a>Laragon – PHP 集成环境</h2><p>官网：<a href="https://laragon.org/">https://laragon.org/</a></p><h2 id="VS-Code"><a href="#VS-Code" class="headerlink" title="VS Code"></a>VS Code</h2><p>下载地址：<br><a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p><h2 id="seo网站性能优化测试"><a href="#seo网站性能优化测试" class="headerlink" title="seo网站性能优化测试"></a>seo网站性能优化测试</h2><p><a href="https://gtmetrix.com/">https://gtmetrix.com/</a></p><h2 id="Redis图形界面客户端"><a href="#Redis图形界面客户端" class="headerlink" title="Redis图形界面客户端"></a>Redis图形界面客户端</h2><p>redis-desktop-manager</p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>http</title>
      <link href="web/http/"/>
      <url>web/http/</url>
      
        <content type="html"><![CDATA[<h2 id="http"><a href="#http" class="headerlink" title="http"></a>http</h2><p>请求：Accept-Encoding</p><p>响应：Content-Encoding</p><p>取值：gzip、deflate、sdch</p><p>作用：对请求体和响应体进行压缩，压缩文本数据能减少带宽并加快显示速度。压缩的时间会远小于传输的时间，所以不用担心压缩。</p><p>请求头</p><p>响应头</p><p>Connection</p><p>请求：Connection</p><p>响应：Connection</p><p>取值范围：</p><p>Keep-Alive、Close</p><p>作用：</p><p>Keep-Alive：可以减少TCP建立成本，销毁成本。（长连接），但是占用端口时间长，高并发时需要考虑。</p><p>Close：每次连接将使用新的TCP连接</p><p>在请求一个网址时，返回最终页面的内容大多数有多个请求组成(css、js、png等资源的请求），所以如果开启keep-alive可以让页面的所有请求都在一次tcp连接建立后传输。</p><p>请求</p><p>响应头</p><p>Cookie</p><p>响应：Set-Cookie</p><p>如：sid = test; path=/;    键值对形式</p><p>请求：Cookie</p><p>如：sid = test;</p><p>特殊值：expires：失效时间，path:该Cookie适用于哪些请求路径，domain：试用于哪些域名。</p><p>当服务端Set-Cookie时，浏览器记录此键值对的值并在下次请求时提交上去。</p><p>session通过Cookie实现</p><p>Cookie大小客户端服务端实现有可能不一样，一般4K.</p><p>响应头</p><p>请求头</p><p>Accept-Language</p><p>请求：Accept-Language</p><p>取值范围：</p><p>en,zh-CN,zh;q=0.8,zh;q=0.6,zh-TW;q=0.4</p><p>其中q代表权重，en默认权重为1</p><p>作用：</p><p>客户端接收的语言。根据此值做本地化判断，如：英文与中文页面的切换。</p><p>image.png</p><p>Referer</p><p>请求：Referer</p><p>客户端请求时添加此值，标识从哪个网站跳过来的。</p><p>可做资源防盗链时使用。</p><p>referer</p><p>User-Agent</p><p>请求：User-Agent</p><p>值如：</p><p>Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36</p><p>客户端的一些信息，包括：客户端硬件信息，操作系统，浏览器信息等。</p><p>作用：</p><p>根据这个值做一些数据统计分析，如果是手机端则推送适合手机的内容。</p><p>User-Agent</p><p>Modified-Since</p><p>请求：If-Modified-Since</p><p>响应：Last-Modified</p><p>值如：Fri, 23 Oct 2015 05:36:06 GM</p><p>作用：</p><p>客户端先保存服务端的Last-Modified与此资源信息到本地，当此资源以后请求时，把此值设为If-Modified-Since并请求到服务器。</p><p>服务端判断此值未变或不需要更新时返回304，表明客户端可直接使用缓存。</p><p>请求头</p><p>响应头</p><p>Cache-Control</p><p>响应：cache-control</p><p>值如：max-age=121737619或private, max-age=0, no-cache</p><p>max-age设置缓存多少时间，max-age=0就是没有缓存。</p><p>作用：</p><p>控制缓存时间，相对时间长度。</p><p>image.png</p><p>image.png</p><p>Expires</p><p>响应：Expires</p><p>值如：Wed, 25 Oct 2017 09:05:12 GMT</p><p>设置绝对时间</p><p>作用：</p><p>指定到特定时间过期。</p><p>image.png</p><p>Etag</p><p>响应：Etag</p><p>请求：if-none-match</p><p>值如：“zdsfsdf”</p><p>作用：</p><p>Last-Modified类似，服务端给文件生成一个标识，下次客户端存在if-none-match中提交到服务端，服务端进行比较来判断文件是否改变，从而做出是否缓存决定。</p><p>Etag 主要为了解决 Last-Modified 无法解决的一些问题。</p><p>比如： 一些文件也许会周期性的更改，但是他的内容并不改变(仅仅改变的修改时间)，这个时候我们并不希望客户端认为这个文件被修改了，而重新GET;</p><p>请求头</p><p>响应头</p><p>Via</p><p>响应：via</p><p>作用：存放路由信息,CDN中常用。</p><p>image.png</p><p>Content-Length</p><p>请求：Content-Length</p><p>响应：content-length</p><p>值：数字</p><p>作用：代表请求体的大小，或者响应体内容的大小。</p><p>image.png</p><p>Content-Range</p><p>请求：Range,</p><p>格式Range:(unit=first byte pos)-[last byte pos]</p><p>指定第一个字节的位置和最后一个字节的位置，</p><p>响应：Content-range，</p><p>格式Content-Range: bytes (unit first byte pos) - [last byte pos]/[entity legth]</p><p>指定整个实体中的一部分的插入位置，他也指示了整个实体的长度</p><p>值如：</p><p>Range:bytes=0-801</p><p>Content-Range: bytes 0-800/801</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>self</title>
      <link href="backend/sefl/"/>
      <url>backend/sefl/</url>
      
        <content type="html"><![CDATA[<h2 id="php安全函数"><a href="#php安全函数" class="headerlink" title="php安全函数"></a>php安全函数</h2><h2 id="mysql-real-escape-string"><a href="#mysql-real-escape-string" class="headerlink" title="mysql_real_escape_string()"></a>mysql_real_escape_string()</h2><p>这个函数在PHP中防止SQL注入攻击时很实用。这个函数会对一些比如单引號、双引號、反斜杠等特殊字符加入一个反斜杠以确保在查询这些数据之前，用户提供的输入是干净的。但要注意。你是在连接数据库的前提下使用这个函数。</p><p>可是如今已经不推荐使用mysql_real_escape_string()了，全部新的应用应该使用像PDO一样的函数库运行数据库操作，也就是说。我们能够使用现成的语句防止SQL注入攻击。</p><h2 id="addslashes"><a href="#addslashes" class="headerlink" title="addslashes()"></a>addslashes()</h2><p>这个函数的原理跟mysql_real_escape_string()相似。可是当在php.ini文件里，“magic_quotes_gpc“的值是“on”的时候，就不要使用这个函数。magic_quotes_gpc 的默认值是on。对全部的 GET、POST 和 COOKIE 数据自己主动执行 addslashes()。不要对已经被 magic_quotes_gpc 转义过的字符串使用 addslashes()。由于这样会导致双层转义。你能够使用get_magic_quotes_gpc()函数来确定它是否开启。</p><h2 id="htmlentities"><a href="#htmlentities" class="headerlink" title="htmlentities()"></a>htmlentities()</h2><p>这个函数对于过滤用户输入的数据很实用。</p><p>它会将一些特殊字符转换为HTML实体。比如，用户输入&lt;时，就会被该函数转化为HTML实体&lt;（&amp;lt）。输入&gt;就被转为实体&amp;gt.(HTML实体对比表：<a href="http://www.w3school.com.cn/html/html_entities.asp)%E3%80%82%E8%83%BD%E5%A4%9F%E9%98%B2%E6%AD%A2XSS%E5%92%8CSQL%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB%E3%80%82">http://www.w3school.com.cn/html/html_entities.asp)。能够防止XSS和SQL注入攻击。</a></p><h2 id="htmlspecialchars"><a href="#htmlspecialchars" class="headerlink" title="htmlspecialchars()"></a>htmlspecialchars()</h2><p>在HTML中。一些特定字符有特殊的含义，假设要保持字符原来的含义，就应该转换为HTML实体。这个函数会返回转换后的字符串，比如‘&amp;’ (ampersand) 转为’&amp;amp‘</p><h2 id="strip-tags"><a href="#strip-tags" class="headerlink" title="strip_tags()"></a>strip_tags()</h2><p>去除字符串中全部的HTML，JavaScript和PHP标签</p><h2 id="md5"><a href="#md5" class="headerlink" title="md5()"></a>md5()</h2><p>md5()函数能够产生给定字符串的32个字符的md5散列。并且这个过程不可逆，即你不能从md5()的结果得到原始字符串。</p><h2 id="sha1"><a href="#sha1" class="headerlink" title="sha1()"></a>sha1()</h2><p>这个函数与md5()类似，可是它使用了不同的算法来产生40个字符的SHA-1散列（md5产生的是32个字符的散列）。也不要把绝对安全寄托在这个函数上，否则会有意想不到的结果。</p><h2 id="intval"><a href="#intval" class="headerlink" title="intval()"></a>intval()</h2><p>intval()函数是将变量转成整数类型，你能够用这个函数让你的PHP代码更安全，特别是当你在解析id，年龄这种数据时。</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工具</title>
      <link href="tool/tool/"/>
      <url>tool/tool/</url>
      
        <content type="html"><![CDATA[<h1 id="写作工具"><a href="#写作工具" class="headerlink" title="写作工具"></a>写作工具</h1><p>MWeb typora</p><h1 id="网页工具"><a href="#网页工具" class="headerlink" title="网页工具"></a>网页工具</h1><p>开彩网</p><p><a href="http://www.opencai.net/apifree/">http://www.opencai.net/apifree/</a></p><p>开彩网API开放平台(免费接口)提供基础的彩票开奖信息，包括开奖期号、开奖号码、开奖时间等内容。<br>IntelliJ IDEA 注册码</p><p><a href="http://idea.lanyus.com/">http://idea.lanyus.com/</a><br>制作图表</p><p>highcharts</p><p><a href="https://www.hcharts.cn/demo/highcharts">https://www.hcharts.cn/demo/highcharts</a></p><p>Echart</p><p><a href="http://echarts.baidu.com/">http://echarts.baidu.com/</a></p><p>Balsamiq Mockups<br><a href="https://balsamiq.com/wireframes/">https://balsamiq.com/wireframes/</a></p><p>音乐下载<br><a href="http://music.tuzz.cn/">http://music.tuzz.cn/</a></p><p>Clover文件管理<br><a href="http://cn.ejie.me/">http://cn.ejie.me/</a></p><h1 id="终端工具"><a href="#终端工具" class="headerlink" title="终端工具"></a>终端工具</h1><p>SSH客户端神器MobaXterm<br><a href="https://hyper.is/">https://hyper.is/</a></p><h1 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h1><p>截图软件 fasttone capture</p><p>Giphy—专搜GIF动态图的搜索引擎</p><p>网站地址: <a href="https://giphy.com/">https://giphy.com/</a></p><p>小众软件—分享免费、小巧、有趣、实用软件</p><p>网站地址: <a href="https://www.appinn.com/">https://www.appinn.com/</a></p><p>SM.MS—免费在线图床服务</p><p>网站地址: <a href="https://sm.ms/">https://sm.ms/</a></p><p>GifHome—在线免费GIF编辑神器</p><p>网站地址: <a href="https://tool.gifhome.com/">https://tool.gifhome.com/</a></p><p>ZenFotomatic—免费产品图片去背景工具</p><p>网站地址: <a href="https://www.zenfotomatic.com/">https://www.zenfotomatic.com/</a></p><p>5118—长尾词挖掘工具</p><p>网站地址: <a href="http://www.5118.com/">http://www.5118.com/</a></p><p>CupFox—影视资源聚合搜索引擎<br>网站地址: <a href="https://www.cupfox.com/">https://www.cupfox.com/</a></p><p>蓝湖—好用的团队工作台<br>网站地址: <a href="https://lanhuapp.com/?home">https://lanhuapp.com/?home</a></p><p>追格—不错过任何一个小程序<br>网站地址: <a href="http://xcx.zhuige.com/">http://xcx.zhuige.com/</a></p><p>薄荷食物库—超过30万种食物数据查询<br>网站地址: <a href="http://www.boohee.com/food/">http://www.boohee.com/food/</a></p><p>SlideShare—全球最大的幻灯片分享社区<br>网站地址: <a href="https://www.slideshare.net/">https://www.slideshare.net/</a></p><p>GitChat—全新的阅读、写作知识分享平台<br>网站地址: <a href="http://gitbook.cn/">http://gitbook.cn/</a></p><p>人人译视界-智能AI听译一键生成双语字幕<br>官方网站：<a href="http://www.1sj.tv/">http://www.1sj.tv/</a></p><p>Git GUI 可视化git<br><a href="https://www.sourcetreeapp.com/">https://www.sourcetreeapp.com/</a></p><p>gitbook电子书手册制作<br><a href="http://gitbook.com/">http://gitbook.com/</a></p><p>图床「神器」PicGo<br><a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p><p>Markdown编辑器-typora<br><a href="https://typora.io/">https://typora.io/</a><br>软件目录</p><p><a href="https://mp.weixin.qq.com/s/XQiUfA-H-oWyw_HUrcvEQA">https://mp.weixin.qq.com/s/XQiUfA-H-oWyw_HUrcvEQA</a><br>PPT模板</p><p><a href="https://pan.baidu.com/s/13ohVnisFMCHY7EuxJ8zDvA">https://pan.baidu.com/s/13ohVnisFMCHY7EuxJ8zDvA</a><br>提取码: mks4<br><a href="https://pan.baidu.com/s/1hfvfPfjLDH-F8aod19jHGQ">https://pan.baidu.com/s/1hfvfPfjLDH-F8aod19jHGQ</a><br>提取码: wf41</p><p>PPT 模板下载<br>网站地址: <a href="http://www.tretars.com/">http://www.tretars.com/</a></p><p>谷歌插件<br><a href="https://chrome.zzzmh.cn/">https://chrome.zzzmh.cn/</a></p><p>极简壁纸<br><a href="https://bz.zzzmh.cn/">https://bz.zzzmh.cn/</a></p><h2 id="导航地址"><a href="#导航地址" class="headerlink" title="导航地址"></a>导航地址</h2><p>**<a href="http://guozhivip.com/lab/">果汁实验室</a>**<a href="http://guozhivip.com/lab/">http://guozhivip.com/lab/</a></p><p>前端 <a href="https://www.vipbic.com/index.html">https://www.vipbic.com/index.html</a></p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现四种基本排序算法</title>
      <link href="backend/paixu/"/>
      <url>backend/paixu/</url>
      
        <content type="html"><![CDATA[<h2 id="实现四种基本排序算法"><a href="#实现四种基本排序算法" class="headerlink" title="实现四种基本排序算法"></a>实现四种基本排序算法</h2><h2 id="冒泡"><a href="#冒泡" class="headerlink" title="冒泡"></a>冒泡</h2><pre><code>$arr = array(1, 43, 54, 62, 21, 66, 32, 78, 36, 76, 39);function bubbleSort($arr) &#123;    $len = count($arr);    for ($i = 1; $i &lt; $len; $i++) &#123;        for ($k = 0; $k &lt; $len - $i; $k++) &#123;            if ($arr[$k] &gt; $arr[$k + 1]) &#123;                $tmp = $arr[$k + 1];                $arr[$k + 1] = $arr[$k];                $arr[$k] = $tmp            &#125;        &#125;    &#125;    return $arr&#125;</code></pre><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><p>思路分析：在要排序的一组数中，选出最小的一个数与第一个位置的数交换。然后在剩下的数当中再找最小的与第二个位置的数交换，如此循环到倒数第二个数和最后一个数比较为止。</p><pre><code>function selectSort($arr) &#123;    $len = count($arr);    for ($i = 0; $i &lt; $len - 1; $i++) &#123;        $p = $i;        for ($j = $i + 1; $j &lt; $len; $j++) &#123;            if ($arr[$p] &gt; $arr[$j]) &#123;                $p = $j            &#125;        &#125;        if ($p != $i) &#123;            $tmp = $arr[$p];            $arr[$p] = $arr[$i];            $arr[$i] = $tmp        &#125;    &#125;    return $arr&#125;</code></pre><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><p>思路分析：在要排序的一组数中，假设前面的数已经是排好顺序的，现在要把第n个数插到前面的有序数中，使得这n个数也是排好顺序的。如此反复循环，直到全部排好顺序。</p><pre><code>function insertSort($arr) &#123;    $len = count($arr);    for ($i = 1, $i &lt; $len; $i++) &#123;        $tmp = $arr[$i];        for ($j = $i - 1; $j &gt;= 0; $j--) &#123;            if ($tmp &lt; $arr[$j]) &#123;                $arr[$j + 1] = $arr[$j];                $arr[$j] = $tmp            &#125; else &#123;                break            &#125;        &#125;    &#125;    return $arr&#125;</code></pre><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><p>思路分析：选择一个基准元素，通常选择第一个元素或者最后一个元素。通过一趟扫描，将待排序列分成两部分，一部分比基准元素小，一部分大于等于基准元素。此时基准元素在其排好序后的正确位置，然后再用同样的方法递归地排序划分的两部分。</p><pre><code>function quickSort($arr) &#123;    $length = count($arr);    if ($length &lt;= 1) &#123;        return $arr    &#125;    $base_num = $arr[0];    $left_array = array();    $right_array = array();    for ($i = 1; $i &lt; $length; $i++) &#123;        if ($base_num &gt; $arr[$i]) &#123;            $left_array[] = $arr[$i]        &#125; else &#123;            $right_array[] = $arr[$i]        &#125;    &#125;    $left_array = quick_sort($left_array);    $right_array = quick_sort($right_array);    return array_merge($left_array, array($base_num), $right_array)&#125;</code></pre><h2 id="PHP内置的排序算法"><a href="#PHP内置的排序算法" class="headerlink" title="PHP内置的排序算法"></a>PHP内置的排序算法</h2><ul><li>sort()<br>升序排列数组。value/key关联不保留</li><li>rsort()<br>按反向/降序排序数组。index/key关联不保留</li><li>asort()<br>在保持索引关联的同时排序数组</li><li>arsort()<br>对数组进行反向排序并维护索引关联</li><li>ksort()<br>按关键字排序数组。它保持数据相关性的关键。这对于关联数组是有用的</li><li>krsort()<br>按顺序对数组按键排序</li><li>natsort()<br>使用自然顺序算法对数组进行排序，并保持value/key关联</li><li>natcasesort()<br>使用不区分大小写的“自然顺序”算法对数组进行排序，并保持value/key关联。</li><li>usort()<br>使用用户定义的比较函数按值对数组进行排序，并且不维护value/key关联。第二个参数是用于比较的可调用函数</li><li>uksort()<br>使用用户定义的比较函数按键对数组进行排序，并且不维护value/key关联。第二个参数是用于比较的可调用函数</li><li>uasort()<br>使用用户定义的比较函数按值对数组进行排序，并且维护value/key关联。第二个参数是用于比较的可调用函数</li></ul>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thinkphp</title>
      <link href="backend/thinkphp/"/>
      <url>backend/thinkphp/</url>
      
        <content type="html"><![CDATA[<h2 id="Thinkphp"><a href="#Thinkphp" class="headerlink" title="Thinkphp"></a>Thinkphp</h2><table><thead><tr><th>TP运算符</th><th>SQL运算符</th><th>例子</th><th>实际查询条件</th></tr></thead><tbody><tr><td>eq</td><td>=</td><td>$where[‘id’] = array(‘eq’,100);</td><td>等效于：$map[‘id’] = 100;</td></tr><tr><td>neq</td><td>!=</td><td>$where[‘id’] = array(‘neq’,100);</td><td>id != 100</td></tr><tr><td>gt</td><td>&gt;</td><td>$where[‘id’] = array(‘gt’,100);</td><td>id &gt; 100</td></tr><tr><td>egt</td><td>&gt;=</td><td>$where[‘id’] = array(‘egt’,100);</td><td>id &gt;= 100</td></tr><tr><td>lt</td><td>&lt;</td><td>$where[‘id’] = array(‘lt’,100);</td><td>id &lt; 100</td></tr><tr><td>elt</td><td>&lt;=</td><td>$where[‘id’] = array(‘elt’,100);</td><td>id &lt;= 100</td></tr><tr><td>like</td><td>like</td><td>$where(‘username’) = array(‘like’,’%admin%’);</td><td>username like ‘%admin%’</td></tr><tr><td>between</td><td>between and</td><td>$where[‘id’] = array(‘between’,‘1,8’);</td><td>id BETWEEN 1 AND 8</td></tr><tr><td>not between</td><td>not between and</td><td>$where[‘id’] = array(‘not between’,‘1,8’);</td><td>id NOT BETWEEN 1 AND 8</td></tr><tr><td>in</td><td>in</td><td>$where[‘id’] = array(‘in’,‘1,5,8’);</td><td>id in(1,5,8)</td></tr><tr><td>not in</td><td>not in</td><td>$where[‘id’] = array(‘not in’,‘1,5,8’);</td><td>id not in(1,5,8)</td></tr><tr><td>and（默认）</td><td>and</td><td>$where[‘id’] = array(array(‘gt’,1),array(‘lt’,10));</td><td>(id &gt; 1) AND (id &lt; 10)</td></tr><tr><td>or</td><td>or</td><td>$where[‘id’] = array(array(‘gt’,3),array(‘lt’,10), ‘or’);</td><td>(id &gt; 3) OR (id &lt; 10)</td></tr><tr><td>xor（异或）</td><td>xor</td><td>两个输入中只有一个是true时，结果为true，否则为false，例子略。</td><td>1 xor 1 = 0</td></tr><tr><td>exp</td><td>综合表达式</td><td>$where[‘id’] = array(‘exp’,‘in(1,3,8)’);</td><td>$where[‘id’] = array(‘in’,‘1,3,8’);</td></tr></tbody></table><p>对于两种去重方式： </p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$test_data</span><span class="token operator">-></span><span class="token function">Distinct</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'descriprion'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">order</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'description desc'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//利用distinct方法去重</span><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$test_data</span><span class="token operator">-></span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'description'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">order</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'description desc'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//利用group方法去重</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p> 利用distinct去重、简单易用，但只能对于单一字段去重，并且最终的结果也仅为去重的字段，实际应用价值不是特别大。<br> 利用group去重，最终的显示结果为所有字段，且对单一字段进行了去重操作，效果不错，但最终显示结果除去去重字段外，按照第一个字段进行排序，可能还需要处理。</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinkphp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS</title>
      <link href="tool/dns/"/>
      <url>tool/dns/</url>
      
        <content type="html"><![CDATA[<p><img src="https://octodex.github.com/images/stormtroopocat.jpg" alt="Alt text" title="The Stormtroopocat"></p><h2 id="公共DNS"><a href="#公共DNS" class="headerlink" title="公共DNS"></a>公共DNS</h2><p>114 DNS  <a href="http://www.114dns.com/">http://www.114dns.com/</a></p><p>阿里 AliDNS  <a href="http://www.alidns.com/">http://www.alidns.com/</a></p><p>CNNIC SDNS  <a href="http://www.sdns.cn/">http://www.sdns.cn/</a></p><p>oneDNS  <a href="http://www.onedns.net/">http://www.onedns.net/</a></p><p>Google DNS <a href="https://developers.google.com/speed/public-dns/">https://developers.google.com/speed/public-dns/</a></p><p>OpenDNS <a href="https://www.opendns.com/">https://www.opendns.com/</a></p><h2 id="刷新本地DNS缓存"><a href="#刷新本地DNS缓存" class="headerlink" title="刷新本地DNS缓存"></a>刷新本地DNS缓存</h2><p>在命令提示符中窗口输入 ipconfig /flushdns 回车即可刷新本地DNS缓存</p><p>Mac OS用户<br>在终端中键入 sudo killall -HUP mDNSResponder 即可刷新本地DNS缓存</p><p>Linux用户<br>键入 /etc/init.d/nscd restart 命令重启 nscd daemon 即可刷新本地DNS缓存</p><p>路由器用户<br>进入路由器管理界面，重启路由器即可刷新路由器DNS缓存</p><h2 id="全国DNS查询"><a href="#全国DNS查询" class="headerlink" title="全国DNS查询"></a>全国DNS查询</h2><p><a href="https://www.ip.cn/dns.html">https://www.ip.cn/dns.html</a></p><p><a href="https://www.ipip.net/">https://www.ipip.net/</a></p><h2 id="港澳台DNS服务器地址"><a href="#港澳台DNS服务器地址" class="headerlink" title="港澳台DNS服务器地址"></a>港澳台DNS服务器地址</h2><p>香港：205.252.144.228 208.151.69.65 202.181.202.140 202.181.224.2</p><p>澳门：202.175.3.8 202.175.3.3</p><p>台湾：168.95.192.1 168.95.1.1</p><h2 id="国外DNS服务器地址"><a href="#国外DNS服务器地址" class="headerlink" title="国外DNS服务器地址"></a>国外DNS服务器地址</h2><p>加拿大：209.166.160.36 209.166.160.132</p><p>英国：193.0.14.129</p><p>日本 202.12.27.33 202.216.228.18</p><p>韩国： 164.124.101.31 203.248.240.31 168.126.63.60 168.126.63.61</p><p>新西兰：202.27.184.3</p><p>泰国：209.166.160.132 202.44.8.34 202.44.8.2</p><p>印度： 202.138.103.100 202.138.96.2</p><p>美国：  208.67.222.222 208.67.220.220 165.87.13.129 165.87.201.244    　</p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css常用公共样式</title>
      <link href="web/css_public/"/>
      <url>web/css_public/</url>
      
        <content type="html"><![CDATA[<h2 id="css常用公共样式"><a href="#css常用公共样式" class="headerlink" title="css常用公共样式"></a>css常用公共样式</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*css reset*/</span><span class="token selector">body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,form,fieldset,input,textarea,p,blockquote,th,td</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">table</span><span class="token punctuation">&#123;</span><span class="token property">border-collapse</span><span class="token punctuation">:</span>collapse<span class="token punctuation">;</span><span class="token property">border-spacing</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">fieldset,img</span><span class="token punctuation">&#123;</span><span class="token property">border</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">address,caption,cite,code,dfn,em,strong,th,var</span><span class="token punctuation">&#123;</span><span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">ol,ul</span><span class="token punctuation">&#123;</span><span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">caption,th</span><span class="token punctuation">&#123;</span><span class="token property">text-align</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h1,h2,h3,h4,h5,h6</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">q:before,q:after</span><span class="token punctuation">&#123;</span><span class="token property">content</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">abbr,acronym</span><span class="token punctuation">&#123;</span> <span class="token property">border</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*文字排版*/</span><span class="token selector">.f12</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.f13</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.f14</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.f16</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.fb</span><span class="token punctuation">&#123;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.fn</span><span class="token punctuation">&#123;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.t2</span><span class="token punctuation">&#123;</span><span class="token property">text-indent</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.lh150</span><span class="token punctuation">&#123;</span><span class="token property">line-height</span><span class="token punctuation">:</span>150%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.lh180</span><span class="token punctuation">&#123;</span><span class="token property">line-height</span><span class="token punctuation">:</span>180%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.lh200</span><span class="token punctuation">&#123;</span><span class="token property">line-height</span><span class="token punctuation">:</span>200%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.unl</span><span class="token punctuation">&#123;</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.no_unl</span><span class="token punctuation">&#123;</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*定位*/</span><span class="token selector">.tl</span><span class="token punctuation">&#123;</span><span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.tc</span><span class="token punctuation">&#123;</span><span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.tr</span><span class="token punctuation">&#123;</span><span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.bc</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.fl</span><span class="token punctuation">&#123;</span><span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span>inline<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.fr</span><span class="token punctuation">&#123;</span><span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span>inline<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cb</span><span class="token punctuation">&#123;</span><span class="token property">clear</span><span class="token punctuation">:</span>both<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cl</span><span class="token punctuation">&#123;</span><span class="token property">clear</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cr</span><span class="token punctuation">&#123;</span><span class="token property">clear</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.clearfix:after</span><span class="token punctuation">&#123;</span><span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">'.'</span><span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span><span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.clearfix</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span>inline-block<span class="token punctuation">&#125;</span><span class="token selector">*html.clearfix</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span> 1%<span class="token punctuation">&#125;</span><span class="token selector">.Clearfix</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.vm</span><span class="token punctuation">&#123;</span><span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pa</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">abs-right</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.zoom</span><span class="token punctuation">&#123;</span><span class="token property">zoom</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.hidden</span><span class="token punctuation">&#123;</span><span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.none</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token comment">/*长度高度*/</span><span class="token selector">.w10</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w20</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w30</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w40</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w50</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w70</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w90</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 90px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w100</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w300</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w500</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w600</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w700</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w800</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.h50</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.h100</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.h200</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.h</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*编剧*/</span><span class="token selector">.m10</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.m15</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span>15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.m30</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mt5</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mt10</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mt15</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mt20</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mt30</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mt50</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mt100</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mb5</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mb10</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mb15</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mb20</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mb30</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mb50</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mb100</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ml5</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ml10</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ml15</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ml20</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ml30</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ml50</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ml100</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mr5</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mr10</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mr15</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mr20</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mr30</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mr50</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mr100</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.p5</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.p10</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.p15</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.p20</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.p30</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.p50</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.p100</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pt5</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pt10</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pt15</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pt20</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pt30</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pt50</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pt100</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pb5</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pb10</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pb15</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pb20</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pb30</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pb50</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pb100</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pl5</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pl10</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pl15</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pl20</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pl30</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pl50</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pl100</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr5</span><span class="token punctuation">&#123;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr10</span><span class="token punctuation">&#123;</span><span class="token property">padding-right</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr15</span><span class="token punctuation">&#123;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr20</span><span class="token punctuation">&#123;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr30</span><span class="token punctuation">&#123;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr50</span><span class="token punctuation">&#123;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pr100</span><span class="token punctuation">&#123;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>foreach</title>
      <link href="backend/foreach/"/>
      <url>backend/foreach/</url>
      
        <content type="html"><![CDATA[<h2 id="实现将一维数组转换为每3个连续值组成的二维数组"><a href="#实现将一维数组转换为每3个连续值组成的二维数组" class="headerlink" title="实现将一维数组转换为每3个连续值组成的二维数组"></a>实现将一维数组转换为每3个连续值组成的二维数组</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$aaa</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'aa'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'bb'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cc'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'dd'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ee'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ff'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'gg'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'hh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ii'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$bbb</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">array_slice</span><span class="token punctuation">(</span><span class="token variable">$aaa</span><span class="token punctuation">,</span> <span class="token variable">$i</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$bbb</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token keyword">Array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"0"</span> <span class="token operator">=</span> <span class="token operator">></span><span class="token keyword">Array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"name"</span> <span class="token operator">=</span> <span class="token operator">></span><span class="token string double-quoted-string">"gdfg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"1"</span> <span class="token operator">=</span> <span class="token operator">></span><span class="token keyword">Array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"name"</span> <span class="token operator">=</span> <span class="token operator">></span><span class="token string double-quoted-string">"433"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"2"</span> <span class="token operator">=</span> <span class="token operator">></span><span class="token keyword">Array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"name"</span> <span class="token operator">=</span> <span class="token operator">></span><span class="token string double-quoted-string">"dfgff"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$last</span> <span class="token operator">=</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$end</span> <span class="token operator">=</span> <span class="token variable">$last</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$arr</span> <span class="token keyword">as</span> <span class="token variable">$k</span> <span class="token operator">=</span> <span class="token operator">></span><span class="token variable">$val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$str</span><span class="token operator">.</span> <span class="token operator">=</span> <span class="token variable">$val</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$val</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token variable">$end</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$str</span><span class="token operator">.</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"，"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">;</span>输出结果：gdfg，<span class="token number">433</span>，dfgff<span class="token comment">## 无限遍历数组函数</span><span class="token keyword">function</span> <span class="token function">foreachKeyVals</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$data</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token operator">></span><span class="token variable">$values</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$values</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">foreachKeyVals</span><span class="token punctuation">(</span><span class="token variable">$values</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token variable">$values</span><span class="token operator">.</span><span class="token string double-quoted-string">""</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">&#125;</span><span class="token comment">## 用递归的方法遍历多维数组</span>    递归遍历多维数组          <span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"a"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"b"</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"987yy"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"39yy"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">bianli</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token keyword">as</span> <span class="token variable">$id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">bianli</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">echo</span> <span class="token variable">$id</span><span class="token operator">.</span><span class="token string double-quoted-string">"    "</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">bianli</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">## 第一次foreach遍历出第一维数组</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$fruit</span> <span class="token keyword">as</span> <span class="token variable">$v1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$v1</span> <span class="token keyword">as</span> <span class="token variable">$k2</span> <span class="token operator">=</span> <span class="token operator">></span><span class="token variable">$v2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token variable">$k2</span><span class="token operator">.</span><span class="token string double-quoted-string">"--"</span><span class="token operator">.</span><span class="token variable">$v2</span><span class="token operator">.</span><span class="token string double-quoted-string">""</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">&#125;</span><span class="token variable">$array</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$array</span> <span class="token keyword">as</span> <span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"A: <span class="token interpolation"><span class="token variable">$a</span></span>; B: <span class="token interpolation"><span class="token variable">$b</span></span>; C: <span class="token interpolation"><span class="token variable">$c</span></span>\n"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>array_values($arr);获得数组的值</p></blockquote><blockquote><p>array_keys($arr);获得数组的键名</p></blockquote><blockquote><p>end($arr);将数组中的内部指针指向最后一个单元</p></blockquote><blockquote><p>list($key,$value)=each($arr);获得数组当前元素的键名和值</p></blockquote><h2 id="无线遍历数组"><a href="#无线遍历数组" class="headerlink" title="无线遍历数组"></a>无线遍历数组</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php">    <span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"1"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"111"</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"12"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"122"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"1222"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"2"</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"3"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"33"</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"34"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"344"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"3444"</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"344445"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"3444455"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">array_search_all</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">array_search_all</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$arr</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">recurrence</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token operator">.</span><span class="token string double-quoted-string">""</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">recurrence</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$arr</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">recurrence</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token operator">.</span><span class="token string double-quoted-string">""</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token comment">## 每次遍历出来值组成以为数组</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">arrfun</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token variable">$new_arr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$arr</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">arrfun</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">,</span> <span class="token variable">$new_arr</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token variable">$new_arr</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$value</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"不是数组!"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$new_arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">arrfun</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token variable">$new_arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$new_arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">## 遍历三维数组</span><span class="token variable">$arr_temp5</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$arr_temp2</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$value</span> <span class="token keyword">as</span> <span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$arr_temp5</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$v</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$arr_temp2</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">,</span> <span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">## 一二维</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$arr_age</span> <span class="token keyword">as</span> <span class="token variable">$age</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$age</span> <span class="token keyword">as</span> <span class="token variable">$detail</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token variable">$detail</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token variable">$age</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> foreach </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取访问者浏览器</title>
      <link href="backend/fangwen/"/>
      <url>backend/fangwen/</url>
      
        <content type="html"><![CDATA[<h2 id="获取访问者浏览器"><a href="#获取访问者浏览器" class="headerlink" title="获取访问者浏览器"></a>获取访问者浏览器</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">functionbrowse_infor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$browser</span> <span class="token operator">=</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span><span class="token variable">$browserver</span> <span class="token operator">=</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span><span class="token variable">$Browsers</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Lynx"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"MOSAIC"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"AOL"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"Opera"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"JAVA"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"MacWeb"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"WebExplorer"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"OmniWeb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$Agent</span> <span class="token operator">=</span> <span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"HTTP_USER_AGENT"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;=</span> <span class="token number">7</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$Agent</span><span class="token punctuation">,</span> <span class="token variable">$Browsers</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$browser</span> <span class="token operator">=</span> <span class="token variable">$Browsers</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$browserver</span> <span class="token operator">=</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">ereg</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Mozilla"</span><span class="token punctuation">,</span> <span class="token variable">$Agent</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">ereg</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"MSIE"</span><span class="token punctuation">,</span> <span class="token variable">$Agent</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"("</span><span class="token punctuation">,</span> <span class="token variable">$Agent</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$Part</span> <span class="token operator">=</span> <span class="token variable">$temp</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/"</span><span class="token punctuation">,</span> <span class="token variable">$Part</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$browserver</span> <span class="token operator">=</span> <span class="token variable">$temp</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token variable">$browserver</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$browserver</span> <span class="token operator">=</span> <span class="token variable">$temp</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$browserver</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/([\d\.]+)/"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"\1"</span><span class="token punctuation">,</span> <span class="token variable">$browserver</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$browserver</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$browserver</span></span>"</span><span class="token punctuation">;</span><span class="token variable">$browser</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"NetscapeNavigator"</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">ereg</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Mozilla"</span><span class="token punctuation">,</span> <span class="token variable">$Agent</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">ereg</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Opera"</span><span class="token punctuation">,</span> <span class="token variable">$Agent</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"("</span><span class="token punctuation">,</span> <span class="token variable">$Agent</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$Part</span> <span class="token operator">=</span> <span class="token variable">$temp</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">")"</span><span class="token punctuation">,</span> <span class="token variable">$Part</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$browserver</span> <span class="token operator">=</span> <span class="token variable">$temp</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token variable">$browserver</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$browserver</span> <span class="token operator">=</span> <span class="token variable">$temp</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$browserver</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/([\d\.]+)/"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"\1"</span><span class="token punctuation">,</span> <span class="token variable">$browserver</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$browserver</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$browserver</span></span>"</span><span class="token punctuation">;</span><span class="token variable">$browser</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"Opera"</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">ereg</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Mozilla"</span><span class="token punctuation">,</span> <span class="token variable">$Agent</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">ereg</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"MSIE"</span><span class="token punctuation">,</span> <span class="token variable">$Agent</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"("</span><span class="token punctuation">,</span> <span class="token variable">$Agent</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$Part</span> <span class="token operator">=</span> <span class="token variable">$temp</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">";"</span><span class="token punctuation">,</span> <span class="token variable">$Part</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$Part</span> <span class="token operator">=</span> <span class="token variable">$temp</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token variable">$Part</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$browserver</span> <span class="token operator">=</span> <span class="token variable">$temp</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$browserver</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/([\d\.]+)/"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"\1"</span><span class="token punctuation">,</span> <span class="token variable">$browserver</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$browserver</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$browserver</span></span>"</span><span class="token punctuation">;</span><span class="token variable">$browser</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"InternetExplorer"</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$browser</span> <span class="token operator">!=</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$browseinfo</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$browser</span></span><span class="token interpolation"><span class="token variable">$browserver</span></span>"</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token variable">$browseinfo</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"Unknown"</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span><span class="token variable">$browseinfo</span><span class="token punctuation">&#125;</span><span class="token comment">//调用方法$browser=browseinfo();直接返回结果</span><span class="token comment">## PHP定时执行任务的实现PHP定时执行任务的实现</span><span class="token function">ignore_user_abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">set_time_limit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sleep_time</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span><span class="token variable">$switch</span> <span class="token operator">=</span> <span class="token keyword">include</span> <span class="token string single-quoted-string">'switch.php'</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$switch</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$switch</span> <span class="token operator">=</span> <span class="token keyword">include</span> <span class="token string single-quoted-string">'switch.php'</span><span class="token punctuation">;</span><span class="token variable">$fp</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'test.txt'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'a+'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"这是一个php博客：phpddt.com <span class="token interpolation"><span class="token variable">$switch</span></span> \n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token variable">$sleep_time</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让网站支持老版本IE6、7、8、9浏览器的3种解决方案</title>
      <link href="web/ie8/"/>
      <url>web/ie8/</url>
      
        <content type="html"><![CDATA[<h2 id="让网站支持老版本IE6、7、8、9浏览器的3种解决方案"><a href="#让网站支持老版本IE6、7、8、9浏览器的3种解决方案" class="headerlink" title="让网站支持老版本IE6、7、8、9浏览器的3种解决方案"></a>让网站支持老版本IE6、7、8、9浏览器的3种解决方案</h2><h4 id="htmlshiv-js"><a href="#htmlshiv-js" class="headerlink" title="htmlshiv.js"></a>htmlshiv.js</h4><p>Remy的 HTML5shiv通过JavaScript 来创建HTML5元素(如 main, header, footer等).在某种程度上通过JavaScript 创建的元素是 styleable(可样式)的。我们可以花很多时间来思考其运行原理,但谁会在乎呢?这种策略在所有产品网站上仍然是必须使用的.</p><h4 id="selectivizr-js"><a href="#selectivizr-js" class="headerlink" title="selectivizr.js"></a>selectivizr.js</h4><p>Selectivizr.js 是一个不可思议的资源,用于填充不支持的CSS选择器和属性,包括重要的 last-child。在最近的重设计中,我嵌入了 selectivizr,并在更老的 IE 浏览器上也不会错过任何细节。下面是我的实现代码:</p><p>现代项目绝对必须的。只在老IE时才加载</p><h4 id="Conditional-Comments"><a href="#Conditional-Comments" class="headerlink" title="Conditional Comments"></a>Conditional Comments</h4><p>下面这样最土的情况你肯定看到过。但无论丑陋与否,事实上这段代码完全按预期的方式运行:</p><p>这个代码片段不需要或等待JavaScript,而且也不需要重量级的JavaScript库。你定义的styles类立即生效,还没有闪屏。</p><p>尽管 Internet Explorer 正在迎头赶上竞争对手,但事实上老的IE浏览器仍然比较流行,特别是在发展中国家。好消息是,这些资源在所有现代浏览器上运行良好,代价也并不高!</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jquery</title>
      <link href="web/jquery/"/>
      <url>web/jquery/</url>
      
        <content type="html"><![CDATA[<h2 id="选择器–他继承了css语法"><a href="#选择器–他继承了css语法" class="headerlink" title="选择器–他继承了css语法"></a>选择器–他继承了css语法</h2><p>$(css元素).css(样式)</p><h4 id="jquery是添加行为"><a href="#jquery是添加行为" class="headerlink" title="jquery是添加行为"></a>jquery是添加行为</h4><p>$(css元素&gt;元素).css(样式)改变子节点</p><p>节点的判断</p><p>if（$(“#i”)length&gt;0）{</p><p>$(‘$(i).css(red)’)</p><p>}</p><p>$(‘#box,.pp,p’).css(color,red)群组选择器</p><p>$(‘p *’).css(color,red)通配符选择器</p><p>后代选择器 ul li a（）</p><p>子选择器div&gt;p()</p><p>next选择器div+p()</p><p>nextall选择器div-p()</p><h4 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h4><p>以冒号开头</p><p>$(li:frist)。css(color,red)第一</p><p>$(li:last).css(##)最后</p><p>$(ul li:frist)。css（）</p><p>$(li:even).css()偶数</p><p>$(li:odd).css()奇数</p><p>$(li:eq(2)).css()从零开始</p><p>：focus焦点</p><p>$(‘li’).slice(2,7).css()从第几到第几</p><p>:filter 选择</p><p>$(s).html()也可替换html内容</p><p>$(sd).text()获取文本也可替换</p><p>$(input).val()获取表单内容也可替换</p><p>属性操作$().attr（）</p><p>$.each(box,function(){</p><p>(attr,value);</p><p>})</p><p>width()</p><p>var obx=$(</p><p>sahhd</p><p>)创建节点</p><p>$(div).append（）找到节点插入节点</p><p>$(div).after（）</p><p>$(div).prependto（）</p><p>$（）.wrap()添加DOM元素节点</p><p>$（）.clone()</p><p>$（）.remove()</p><p>$（）.empty()</p><p>$（）.replacewith()替换节点</p><p>表单过滤选择器</p><p>事件</p><p>绑定事件</p><p>复合事件</p><p>click点击事件</p><p>mouseout</p><p>mouseover移入移出的函数</p><p>dblclick（）双击事件</p><p>enter不会触发子节点</p><p>keydown()</p><p>keyup()</p><p>focusin()</p><p>blur()</p><p>复合事件</p><p>ready()当DOM结束时执行</p><p>hover（）；mouseenter，mouseleave的结合</p><p>bind()</p><h4 id="事件的冒泡行为"><a href="#事件的冒泡行为" class="headerlink" title="事件的冒泡行为"></a>事件的冒泡行为</h4><p>.stopPropgtion()  禁止冒泡</p><h4 id="模式用户操作"><a href="#模式用户操作" class="headerlink" title="模式用户操作"></a>模式用户操作</h4><p>.trigger()</p><p>trigger多条数据用中括号</p><p>自定义事件</p><p>$(input).bind(my,function(）{</p><p>哈哈</p><p>}.trigger（my）)</p><p>triggerHandle（）</p><p>.preventDefault（）取消默认</p><p>命名空间</p><p>普通绑定bind（）</p><p>unbind()移除事件</p><p>$(input).bind(click.acb,functin(){</p><p>alent(‘sd’)</p><p>})</p><p>$(input).bind(click.a,functin(){</p><p>alent(‘sd’)</p><p>})$(input).bind(click.ac,functin(){</p><p>alent(‘sd’)</p><p>})</p><p>$(input).unbind(click.acb);</p><p>on off和one</p><p>新方法的绑定on</p><h4 id="新方法的解绑off"><a href="#新方法的解绑off" class="headerlink" title="新方法的解绑off"></a>新方法的解绑off</h4><p>$(input).on(click,function(){</p><p>alert(‘sad’);</p><p>})</p><p>$(button)off(click);</p><p>one执行一次</p><h4 id="动画效果"><a href="#动画效果" class="headerlink" title="动画效果"></a>动画效果</h4><p>显示show（）</p><p>隐藏hide（）</p><h4 id="列队动画-递归调用"><a href="#列队动画-递归调用" class="headerlink" title="列队动画 递归调用"></a>列队动画 递归调用</h4><p>$(.show).click(fuction(){</p><p>$(.test).first().show(fast,fuonction testshow(){</p><p>$(this).next().show(fast,testshow)</p><p>})</p><p>})</p><p>toggle隐藏显示切换</p><p>up down上卷下卷</p><p>out in 淡入淡出</p><p>to透明</p><p>animate滑动.delay（时间）</p><p>stop停止</p><p>arguments.callee不停的调用自己</p><p>animated查找</p><p>ajax</p><p>load（）方法载入载入html文本局部方法</p><p>get需要？号 post方式提交</p><p>全局</p><p>$.get()</p><p>$(input).click(function(){</p><p>$.get(test.php,url=ww,function(reponse,status,xhr){</p><p>$(#box).html(reponse)</p><p>})</p><p>})</p><p>$.post()</p><p>$.getjson()</p><p>$.ajax({</p><p>type:post</p><p>url:’test.php’,</p><p>data:{</p><p>url:ds，</p><p>}</p><p>})</p><h4 id="表单序列化"><a href="#表单序列化" class="headerlink" title="表单序列化"></a>表单序列化</h4><p>.sreiralize()</p><p>ajaxstart()</p><p>ajaxshop()</p><p>success请求成功后执行</p><p>complete请求完成后执行</p><p>beforesend发送请求之前执行</p><p>error失败后执行</p><p>jqXHR就是$.ajax()返回的对象</p><p>$.each() 遍历数组</p><p>$.grep()</p><p>$.map()</p><p>$.merge()合并数组</p><p>$.unique（）删除</p><p>$.isarray()判断是否是数组</p><p>slideUp();以滑动动画隐藏</p><h4 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h4><p>jquery-validation表单插件    </p><p>lazyload图片延迟加载</p><p>引入jq，lazyload</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jquery </tag>
            
            <tag> jq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则</title>
      <link href="web/zhengze/"/>
      <url>web/zhengze/</url>
      
        <content type="html"><![CDATA[<h2 id="一、校验数字的表达式"><a href="#一、校验数字的表达式" class="headerlink" title="一、校验数字的表达式"></a>一、校验数字的表达式</h2><p>数字：</p><pre><code>^[0-9]*$</code></pre><p>n位的数字：</p><pre><code>^\d&#123;n&#125;$</code></pre><p>至少n位的数字：</p><pre><code>^\d&#123;n,&#125;$</code></pre><p>m-n位的数字：</p><pre><code>^\d&#123;m,n&#125;$</code></pre><p>零和非零开头的数字：</p><pre><code>^(0|[1-9][0-9]*)$</code></pre><p>非零开头的最多带两位小数的数字：</p><pre><code>^([1-9][0-9]*)+(.[0-9]&#123;1,2&#125;)?$</code></pre><p>带1-2位小数的正数或负数：</p><pre><code>^(\-)?\d+(\.\d&#123;1,2&#125;)?$</code></pre><p>正数、负数、和小数：</p><pre><code>^(\-|\+)?\d+(\.\d+)?$</code></pre><p>有两位小数的正实数：</p><pre><code>^[0-9]+(.[0-9]&#123;2&#125;)?$</code></pre><p>有1~3位小数的正实数：</p><pre><code>^[0-9]+(.[0-9]&#123;1,3&#125;)?$</code></pre><p>非零的正整数：</p><pre><code>^[1-9]\d*$ 或 ^([1-9][0-9]*)&#123;1,3&#125;$ 或 ^\+?[1-9][0-9]*$</code></pre><p>非零的负整数：</p><pre><code>^\-[1-9][]0-9″*$ 或 ^-[1-9]\d*$</code></pre><p>非负整数：</p><pre><code>^\d+$ 或 ^[1-9]\d*|0$</code></pre><p>非正整数：</p><pre><code>^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$</code></pre><p>非负浮点数：</p><pre><code>^\d+(\.\d+)?$ 或 ^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$</code></pre><p>非正浮点数：</p><pre><code>^((-\d+(\.\d+)?)|(0+(\.0+)?))$ 或 ^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$</code></pre><p>正浮点数：</p><pre><code>^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$ 或 ^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$</code></pre><p>负浮点数：</p><pre><code>^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$ 或 ^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$</code></pre><p>浮点数：</p><pre><code>^(-?\d+)(\.\d+)?$ 或 ^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$</code></pre><h1 id="二、校验字符的表达式"><a href="#二、校验字符的表达式" class="headerlink" title="二、校验字符的表达式"></a>二、校验字符的表达式</h1><p>汉字：</p><pre><code>^[\u4e00-\u9fa5]&#123;0,&#125;$</code></pre><p>英文和数字：</p><pre><code>^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]&#123;4,40&#125;$</code></pre><p>长度为3-20的所有字符：</p><pre><code>^.&#123;3,20&#125;$</code></pre><p>由26个英文字母组成的字符串：</p><pre><code>^[A-Za-z]+$</code></pre><p>由26个大写英文字母组成的字符串：</p><pre><code>^[A-Z]+$</code></pre><p>由26个小写英文字母组成的字符串：</p><pre><code>^[a-z]+$</code></pre><p>由数字和26个英文字母组成的字符串：</p><pre><code>^[A-Za-z0-9]+$</code></pre><p>由数字、26个英文字母或者下划线组成的字符串：</p><pre><code>^\w+$ 或 ^\w&#123;3,20&#125;$</code></pre><p>中文、英文、数字包括下划线：</p><pre><code>^[\u4E00-\u9FA5A-Za-z0-9_]+$</code></pre><p>中文、英文、数字但不包括下划线等符号：</p><pre><code>^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]&#123;2,20&#125;$</code></pre><p>可以输入含有^%&amp;’,;=?$\”等字符：</p><pre><code>[^%&amp;&#39;,;=?$\x22]+</code></pre><p>禁止输入含有~的字符：</p><pre><code>[^~\x22]+</code></pre><p>三、特殊需求表达式</p><p>Email地址：</p><pre><code>^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$</code></pre><p>域名：</p><pre><code>[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;(/.[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;)+/.?</code></pre><p>InternetURL：</p><pre><code>[a-zA-z]+://[^\s]* 或 ^http://([\w-]+\.)+[\w-]+(/[\w-./?%&amp;=]*)?$</code></pre><p>手机号码：</p><pre><code>^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d&#123;8&#125;$</code></pre><p>电话号码(“XXX-XXXXXXX”、”XXXX-XXXXXXXX”、”XXX-XXXXXXX”、”XXX-XXXXXXXX”、”XXXXXXX”和”XXXXXXXX)：</p><pre><code>^($$\d&#123;3,4&#125;-)|\d&#123;3.4&#125;-)?\d&#123;7,8&#125;$</code></pre><p>国内电话号码(0511-4405222、021-87888822)：</p><pre><code>\d&#123;3&#125;-\d&#123;8&#125;|\d&#123;4&#125;-\d&#123;7&#125;</code></pre><p>身份证号(15位、18位数字)：</p><pre><code>^\d&#123;15&#125;|\d&#123;18&#125;$</code></pre><p>短身份证号码(数字、字母x结尾)：</p><pre><code>^([0-9])&#123;7,18&#125;(x|X)?$ 或 ^\d&#123;8,18&#125;|[0-9x]&#123;8,18&#125;|[0-9X]&#123;8,18&#125;?$</code></pre><p>帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：</p><pre><code>^[a-zA-Z][a-zA-Z0-9_]&#123;4,15&#125;$</code></pre><p>密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：</p><pre><code>^[a-zA-Z]\w&#123;5,17&#125;$</code></pre><p>强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：</p><pre><code>^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).&#123;8,10&#125;$</code></pre><p>日期格式：</p><pre><code>^\d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;</code></pre><p>一年的12个月(01～09和1～12)：</p><pre><code>^(0?[1-9]|1[0-2])$</code></pre><p>一个月的31天(01～09和1～31)：</p><pre><code>^((0?[1-9])|((1|2)[0-9])|30|31)$</code></pre><p>钱的输入格式：<br>有四种钱的表示形式我们可以接受:”10000.00″ 和 “10,000.00″, 和没有 “分” 的 “10000″ 和 “10,000″：</p><pre><code>^[1-9][0-9]*$</code></pre><p>这表示任意一个不以0开头的数字，但是，这也意味着一个字符”0″不通过，所以我们采用下面的形式：</p><pre><code>^(0|[1-9][0-9]*)$</code></pre><p>一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：</p><pre><code>^(0|-?[1-9][0-9]*)$</code></pre><p>这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉，因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：</p><pre><code>^[0-9]+(.[0-9]+)?$</code></pre><p>必须说明的是，小数点后面至少应该有1位数，所以”10.”是不通过的，但是 “10″ 和 “10.2″ 是通过的：</p><pre><code>^[0-9]+(.[0-9]&#123;2&#125;)?$</code></pre><p>这样我们规定小数点后面必须有两位，如果你认为太苛刻了，可以这样：</p><pre><code>^[0-9]+(.[0-9]&#123;1,2&#125;)?$</code></pre><p>这样就允许用户只写一位小数。下面我们该考虑数字中的逗号了，我们可以这样：</p><pre><code>^[0-9]&#123;1,3&#125;(,[0-9]&#123;3&#125;)*(.[0-9]&#123;1,2&#125;)?$</code></pre><p>1到3个数字，后面跟着任意个 逗号+3个数字，逗号成为可选，而不是必须：</p><pre><code>^([0-9]+|[0-9]&#123;1,3&#125;(,[0-9]&#123;3&#125;)*)(.[0-9]&#123;1,2&#125;)?$</code></pre><p>备注：这就是最终结果了，别忘了”+”可以用”*”替代。如果你觉得空字符串也可以接受的话(奇怪，为什么?)最后，别忘了在用函数时去掉去掉那个反斜杠，一般的错误都在这里</p><p>xml文件：</p><pre><code>^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$</code></pre><p>中文字符的正则表达式：</p><pre><code>[\u4e00-\u9fa5]</code></pre><p>双字节字符：</p><pre><code>[^\x00-\xff](包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))</code></pre><p>空白行的正则表达式：</p><pre><code>\n\s*\r (可以用来删除空白行)</code></pre><p>HTML标记的正则表达式：</p><pre><code>&lt;(\s*?)[^&gt;]*&gt;.*?|&lt;.*?&gt; (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)</code></pre><p>首尾空白字符的正则表达式：</p><pre><code>^\s*|\s*$或(^\s*)|(\s*$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)</code></pre><p>腾讯QQ号：</p><pre><code>[1-9][0-9]&#123;4,&#125; (腾讯QQ号从10000开始)</code></pre><p>中国邮政编码：</p><pre><code>[1-9]\d&#123;5&#125;(?!\d) (中国邮政编码为6位数字)</code></pre><p>IP地址：</p><pre><code>\d+\.\d+\.\d+\.\d+ (提取IP地址时有用)</code></pre><p>IP地址：</p><pre><code>((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.)&#123;3&#125;(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))</code></pre>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php函数</title>
      <link href="backend/phptu/"/>
      <url>backend/phptu/</url>
      
        <content type="html"><![CDATA[<h2 id="php把文本转换成图片"><a href="#php把文本转换成图片" class="headerlink" title="php把文本转换成图片"></a>php把文本转换成图片</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-type: image/png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$string</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'text'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$im</span><span class="token operator">=</span> <span class="token function">imagecreatefrompng</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"images/button.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$color</span><span class="token operator">=</span> <span class="token function">imagecolorallocate</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$px</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">imagesx</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">7.5</span> <span class="token operator">*</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token variable">$py</span><span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$fontSize</span><span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token function">imagestring</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">,</span> fontSize<span class="token punctuation">,</span> <span class="token variable">$px</span><span class="token punctuation">,</span> <span class="token variable">$py</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token variable">$color</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imagepng</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imagedestroy</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php图片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php获取Ip</title>
      <link href="backend/IP/"/>
      <url>backend/IP/</url>
      
        <content type="html"><![CDATA[<h1 id="php获取Ip"><a href="#php获取Ip" class="headerlink" title="php获取Ip"></a>php获取Ip</h1><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Type:text/html; charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// ------------------------------------</span><span class="token comment">// API接口的入口 控制器</span><span class="token comment">// ------------------------------------</span><span class="token comment">// action参数值 就是对应的model类文件的文件名</span><span class="token variable">$action</span> <span class="token operator">=</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">"null"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$action</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"null"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$action</span> <span class="token operator">=</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">"null"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$action</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"null"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 非法的请求(没有系统参数)</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"错误的请求"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token variable">$action</span> <span class="token operator">=</span> <span class="token function">ucfirst</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$action</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>调用方法<span class="token variable">$action</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"userlist"</span><span class="token punctuation">;</span><span class="token variable">$returntype</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"json"</span><span class="token punctuation">;</span><span class="token comment">// 从用户列表中查询满足条件:"username=wangfan" 的用户</span><span class="token variable">$condition_type</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"username"</span><span class="token punctuation">;</span>  <span class="token comment">// 查询条件类型</span><span class="token variable">$condition_val</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"wangfan"</span><span class="token punctuation">;</span>    <span class="token comment">// 查询条件值</span><span class="token comment">// 接口地址</span><span class="token variable">$url</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"http://localhost/sison/haha.php"</span><span class="token punctuation">;</span> <span class="token comment">// 请求参数</span><span class="token comment">// $post_data = "action=".$action."&amp;returntype=".$returntype;</span><span class="token variable">$post_data</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"action="</span><span class="token operator">.</span><span class="token variable">$action</span><span class="token operator">.</span><span class="token string double-quoted-string">"&amp;returntype="</span><span class="token operator">.</span><span class="token variable">$returntype</span><span class="token operator">.</span><span class="token string double-quoted-string">"&amp;condition_type="</span><span class="token operator">.</span><span class="token variable">$condition_type</span><span class="token operator">.</span><span class="token string double-quoted-string">"&amp;condition_val="</span><span class="token operator">.</span><span class="token variable">$condition_val</span><span class="token punctuation">;</span><span class="token comment">// curl实现对接口的调用</span><span class="token variable">$curl</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_NOBODY</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POST</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POSTFIELDS</span><span class="token punctuation">,</span> <span class="token variable">$post_data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// echo "</span><span class="token string double-quoted-string">";var_dump(<span class="token interpolation"><span class="token variable">$res</span></span>);// echo "</span><span class="token string double-quoted-string">";exit();// 解析响应数据(json => array)<span class="token interpolation"><span class="token variable">$res</span></span> = json_decode(<span class="token interpolation"><span class="token variable">$res</span></span>);<span class="token interpolation"><span class="token variable">$res</span></span> = object_array(<span class="token interpolation"><span class="token variable">$res</span></span>);if (is_array(<span class="token interpolation"><span class="token variable">$res</span></span>)) &#123;    // 获取响应结果&#125; else &#123;    <span class="token interpolation"><span class="token variable">$res</span></span> = "</span>出现错误，可能是接口地址错误或网络中断等原因<span class="token string double-quoted-string">";&#125;echo "</span>结果是<span class="token punctuation">:</span> " <span class="token operator">.</span> <span class="token variable">$res</span><span class="token punctuation">;</span><span class="token comment">// PHP要用json格式的数据，通过json_decode()转出来的数组并不是标准的array，所以需要用下面的函数进行转换</span><span class="token keyword">function</span> <span class="token function">object_array</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_object</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$array</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span><span class="token variable">$array</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$array</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=></span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">object_array</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token variable">$array</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP加密</title>
      <link href="backend/Md5/"/>
      <url>backend/Md5/</url>
      
        <content type="html"><![CDATA[<h2 id="PHP加密"><a href="#PHP加密" class="headerlink" title="PHP加密"></a>PHP加密</h2><h2 id="1-加密函数"><a href="#1-加密函数" class="headerlink" title="1. 加密函数"></a>1. 加密函数</h2><p>Md5()加密</p><p>Crypt（）加密</p><p>Sha1（）加密</p><p>URL编码加密</p><p>Base64编码加密</p><p>双重MD5</p><p>Crypt（）返回Unix，DEs算法</p><p>Sha1（MD5）单向加密，双重加密</p><p>urlencode（）双向</p><p>base64_encode()</p><h2 id="2-存储加密和传输加密"><a href="#2-存储加密和传输加密" class="headerlink" title="2. 存储加密和传输加密"></a>2. 存储加密和传输加密</h2><p>按照加密对象的不同，可以将加密分为：存储加密和传输加密。存储加密是指对存储在纸质、磁盘、数据库等介质上的数据进行的加密，而传输加密则是指对数据在计算机网络、电话、电报等通信信道上进行的加密。不管是上述哪种加密，本质上仍是对信息进行加密。</p><h2 id="3-加密算法"><a href="#3-加密算法" class="headerlink" title="3. 加密算法"></a>3. 加密算法</h2><p>加密算法，经过历史的演进，出现了很多种类的算法。我所了解的最简单的加密算法，就是从电影里看到的，通过一本字典或者圣经，使用页码和行列号等来对文字进行一一对应的加密。解密时，只要解密的人拿着相同的字典和圣经，知道数字与文字的对应关系，即可解密。这种加密方法曾经很有效，因为用作加密的字典可以是任何一本书或者甚至可以是一份报纸。</p><h2 id="3-1-对称加密算法"><a href="#3-1-对称加密算法" class="headerlink" title="3.1 对称加密算法"></a>3.1 对称加密算法</h2><p>按照现代的加密算法划分，上述的加密方法，可以归类为对称加密的范畴。<br>所谓对称加密，就是加密和解密使用同一秘钥，这也是这种加密算法最显著的缺点之一。上面的字典、圣经等也可以理解为是一份秘钥。现代的加密算法中，DES、3DES、AES等算法都属于对称加密算法。<br>对称加密有一个明显的缺点，就是即秘钥。特别是在传输加密时，信息的发送方和接收方需要使用相同的秘钥来对信息进行加解密，接收方如何安全的获取秘钥成为这类加密的焦点，因为一旦秘钥被截获，整个加密通信就形同明文传输。<br>因此，对称加密比较适合存储加密，例如有些计算机硬盘会通过主板上的加密芯片对整个硬盘进行加密，使用的就是对称加密算法。</p><h2 id="3-2-非对称加密算法"><a href="#3-2-非对称加密算法" class="headerlink" title="3.2 非对称加密算法"></a>3.2 非对称加密算法</h2><p>由于对称加密在通信加密领域的缺陷，1976年W.Diffie和M.Hellman提出了“非对称加密”的概念。这种加密算法的秘钥分为“公开秘钥”和“私有秘钥”，公开秘钥用于对信息进行加密，而解密时使用私有秘钥进行解密，这样，信息的接收方可以事先生成好一份公钥和私钥，然后将公钥发给所有的信息发送方，信息发送方使用公钥对信息进行加密，然后将信息发送给接收方，接收方使用私钥进行解密即可。这种算法的优势在于，解密的私钥不需要传递，降低（只能降低，无法避免，要考虑认为因素）了私钥泄密的可能性。</p><p>常见的非对称加密算法有：RSA、EIGamal、背包算法、Rebin（RSA的特例）、迪菲－赫尔曼密钥交换协议中的公钥加密算法和椭圆曲线加密算法等。而最为大家熟知的就是RSA算法。</p><h2 id="3-3-比较"><a href="#3-3-比较" class="headerlink" title="3.3 比较"></a>3.3 比较</h2><p>对称加密，由于加解密双发必须拥有相同的秘钥，分发和同步秘钥的通信容易泄漏秘钥，但是对称加密的速度相比非对称加密要快很多，特别对于大量数据的加密更加明显。<br>非对称加密，其主要缺点之一就是慢，适合加密少量数据。<br>因此，实际应用当中，经常将二者结合使用，例如通信双方建立通信后，A首先生成一对公钥和私钥，并将公钥发送给B，B使用公钥将一个对称加密算法的“秘钥+有效期”加密后，再发回给A，A使用私钥解密后，双方便同步了一个对称算法的秘钥，然后在规定的有效期内，双方便可以使用这个秘钥对通信数据进行加密和解密。其过程大致如下图所示：<br>加密通信</p><h2 id="3-4-误区"><a href="#3-4-误区" class="headerlink" title="3.4 误区"></a>3.4 误区</h2><p>看到这里，有些同学可能会问，我常用的md5、hash算法(sha1、sha256、sha512、sha1024等）怎么没见你提及，其实准确的说，md5和hash算法不能算是加密算法，它们都属于信息摘要算法，可以为不同的信息生成独一无二的信息摘要，而它们都属于不可逆算法，即无法通过生成的摘要信息还原出原始信息。利用这种特性，实际应用中，经常会使用这些算法对用户输入的密码进行运算，并对运算结果进行比较来验证用户输入密码是否正确。还有一种应用场景是通信签名，用于验证通信过程中信息是否丢失或被篡改。</p><h2 id="4-PHP加密最佳实践"><a href="#4-PHP加密最佳实践" class="headerlink" title="4. PHP加密最佳实践"></a>4. PHP加密最佳实践</h2><p>加密总是与安全密不可分，而每个PHPer都必须将应用安全作为必要的设计思路融入代码中，以下是一些最佳实践的建议。</p><p>不要再使用MD5，不要使用sha1，基本上已经没有破解难度了。<br>请使用password_hash来哈希密码（php版本大于等于5.5，小于5.5请使用password_compat库），由于password_hash函数已帮你处理好了加盐，而且作为盐的随机字串已通过加密算法成为了哈希的一部分，password_verify()函数会自动将盐从哈希中提取出来，所以你无需考虑盐的存储问题。<br>通信接口的签名，请使用非对称算法对签名秘钥进行加密，并对秘钥设置有效期，定期更换。</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP加密 </tag>
            
            <tag> Md5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ecshop</title>
      <link href="backend/ecshop/"/>
      <url>backend/ecshop/</url>
      
        <content type="html"><![CDATA[<h1 id="ecshop"><a href="#ecshop" class="headerlink" title="ecshop"></a>ecshop</h1><p>foreach 必须和/foreach 成对使用，且必须指定from 和item 属性</p><p>没有from表单</p><p>ini.php核心文件</p><p>lib_artcle.php文章操作文件</p><p>lib_common.php分类函数</p><p>sms  短信类</p><p>smtp 邮件类</p><p>ecshop中有2个地方使用了json,一个是cls_json.php文件，一个是transport.js文件。</p><p>eq相等，</p><p>ne、neq不相等，</p><p>gt大于，</p><p>lt小于，</p><p>gte、ge大于等于，</p><p>lte、le 小于等于，</p><p>not非， mod求模。</p><p>is [not] div by是否能被某数整除，</p><p>is [not] even是否为偶数，</p><p>$a is [not] even by $b即($a / $b) % 2 == 0，</p><p>is [not] odd是否为奇，</p><p>$a is not odd by $b即($a / $b) % 2 != 0 示例：</p><p>equal/ not equal/ greater than/ less than/ less than or equal/ great than or equal/后面的就不用说了</p><p>Smarty 中的 if 语句和 php 中的 if 语句一样灵活易用，并增加了几个特性以适宜模板引擎. if 必须于 /if 成对出现. 可以使用 else 和 elseif 子句. 可以使用以下条件修饰词：eq、ne、neq、gt、lt、lte、le、gte、ge、is even、is odd、is not even、is not odd、not、mod、div by、even by、odd by、==、!=、&gt;、&lt;、&lt;=、&gt;=. 使用这些修饰词时必须和变量或常量用空格格开</p><hr><p>update_user_info    更新用户SESSION,COOKIE及登录时间、登录次数。</p><p>smarty里面有能够调用循环次数的方法</p><p>没记错的话是这样写的 {$smarty.foreach.foreachname.iteration}</p><p>这个是从1开始的</p><p>这个时候要定义下循环的名字</p><p>{foreach from=”” name=”foreachname”}</p><p>所以你要实现的东西可以这样写</p><p>{foreach from=$categories item=cat name=test}</p><p>{$cat.name}</p><p>{/foreach}</p><p>应该可以顺利实现你想要的效果.</p><p>可以判断当前条数与2求余是否给li加样式</p><p>{foreach from = $a item = val name=val}</p><p>{$val}</p><p>{/foreach}</p><p>样式的设置就不多说了</p><ol><li><p>供应商新增商品</p></li><li><p>供应商修改商品（此步骤含商品下架,要更新ecs_goods on_sale_time字段）</p></li><li><p>管理员新增商品</p></li><li><p>管理员商品上架 (要更新ecs_goods on_sale_time字段）</p></li><li><p>管理员商品下架 (要更新ecs_goods on_sale_time字段）</p></li><li><p>管理员编辑商品</p></li><li><p>管理员回收商品</p></li><li><p>管理员还原商品</p> <pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token number">1.</span> <span class="token keyword">function</span> <span class="token function">getTop5_fanli</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token variable">$ret</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$type</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"D"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token variable">$sql_d</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"select b.mobile_phone,a.total_fanli from(select vip_id,sum(deduct_amt) as total_fanli from hsz_deduct_log where deduct_mode &lt;>101 "</span><span class="token operator">.</span><span class="token string double-quoted-string">" and vip_id>0 and to_days(create_date) = to_days(now()) "</span><span class="token operator">.</span><span class="token string double-quoted-string">" group by vip_id  order by sum(deduct_amt) desc limit 0,5)a left join ecs_users b on a.vip_id=b.user_id "</span><span class="token punctuation">;</span>   <span class="token variable">$ret_d</span> <span class="token operator">=</span> <span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'db'</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token operator">></span><span class="token function">getAll</span><span class="token punctuation">(</span><span class="token variable">$sql_d</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$ret_d</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token operator">></span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'mobile_phone'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'mobile_phone'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"****"</span><span class="token operator">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'mobile_phone'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'total_fanli'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'total_fanli'</span><span class="token punctuation">]</span>   <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$type</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"W"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token variable">$sql_w</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"select b.mobile_phone,a.total_fanli from(select vip_id,sum(deduct_amt) as total_fanli from hsz_deduct_log where deduct_mode &lt;>101 and vip_id>0 and date_sub(curdate(),interval 7 day)           <span class="token interpolation"><span class="token variable">$ret_w</span></span>=<span class="token interpolation"><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'db'</span><span class="token punctuation">]</span><span class="token operator">-></span><span class="token property">getAll</span></span>(<span class="token interpolation"><span class="token variable">$sql_w</span></span>);           foreach(<span class="token interpolation"><span class="token variable">$ret_w</span></span> as <span class="token interpolation"><span class="token variable">$key</span></span>=><span class="token interpolation"><span class="token variable">$value</span></span>)           &#123;         <span class="token interpolation"><span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'mobile_phone'</span><span class="token punctuation">]</span></span>=substr(<span class="token interpolation"><span class="token variable">$value</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'mobile_phone'</span><span class="token punctuation">]</span></span>,0,3)."</span> <span class="token operator">*</span> <span class="token operator">**</span><span class="token operator">*</span><span class="token string double-quoted-string">".substr(<span class="token interpolation"><span class="token variable">$value</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'mobile_phone'</span><span class="token punctuation">]</span></span>,7,3);              <span class="token interpolation"><span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'total_fanli'</span><span class="token punctuation">]</span></span>=<span class="token interpolation"><span class="token variable">$value</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'total_fanli'</span><span class="token punctuation">]</span></span>;       &#125;   &#125;   if(<span class="token interpolation"><span class="token variable">$type</span></span>=="</span><span class="token constant">M</span> <span class="token string double-quoted-string">")&#123;       <span class="token interpolation"><span class="token variable">$sql_m</span></span>="</span>select b<span class="token operator">.</span>mobile_phone<span class="token punctuation">,</span>   a<span class="token operator">.</span>total_fanli <span class="token function">from</span><span class="token punctuation">(</span>select vip_id<span class="token punctuation">,</span> <span class="token function">sum</span><span class="token punctuation">(</span>deduct_amt<span class="token punctuation">)</span> <span class="token keyword">as</span> total_fanli from hsz_deduct_log where deduct_mode <span class="token operator">&lt;</span> <span class="token operator">></span><span class="token number">101</span> <span class="token string double-quoted-string">"       ."</span><span class="token keyword">and</span> vip_id <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token function">date_sub</span><span class="token punctuation">(</span><span class="token function">curdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> interval <span class="token number">30</span> day<span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">" ecs_users b on a.vip_id=b.user_id"</span><span class="token punctuation">;</span> <span class="token variable">$ret_m</span> <span class="token operator">=</span> <span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'db'</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token operator">></span><span class="token function">getAll</span><span class="token punctuation">(</span><span class="token variable">$sql_m</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$ret_m</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token operator">></span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'mobile_phone'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'mobile_phone'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"****"</span><span class="token operator">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'mobile_phone'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'total_fanli'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'total_fanli'</span><span class="token punctuation">]</span>   <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">return</span> <span class="token variable">$ret</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">function</span> <span class="token function">get_top_cat_id</span><span class="token punctuation">(</span><span class="token variable">$cat_id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token variable">$arr_cat</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token variable">$parent_id</span> <span class="token operator">=</span> <span class="token function">get_parent_id</span><span class="token punctuation">(</span><span class="token variable">$cat_id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$parent_id</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token variable">$parent_id</span> <span class="token operator">=</span> <span class="token function">get_parent_id</span><span class="token punctuation">(</span><span class="token variable">$parent_id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">array_unshift</span><span class="token punctuation">(</span><span class="token variable">$arr_cat</span><span class="token punctuation">,</span> <span class="token variable">$parent_id</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">return</span> <span class="token variable">$arr_cat</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">function</span> <span class="token function">get_parent_id</span><span class="token punctuation">(</span><span class="token variable">$cat_id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"select parent_id from ecs_category where cat_id = '"</span><span class="token operator">.</span><span class="token variable">$cat_id</span><span class="token operator">.</span><span class="token string double-quoted-string">"' limit 1"</span><span class="token punctuation">;</span>   <span class="token variable">$ret</span> <span class="token operator">=</span> <span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'db'</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token operator">></span><span class="token function">getOne</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">return</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$ret</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span>   <span class="token function">get_top_cat_id</span><span class="token punctuation">(</span><span class="token variable">$cat_id</span><span class="token punctuation">)</span>​<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ecshop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux命令</title>
      <link href="server/linux/"/>
      <url>server/linux/</url>
      
        <content type="html"><![CDATA[<h2 id="linux命令"><a href="#linux命令" class="headerlink" title="linux命令"></a>linux命令</h2><p>查找<br>find / -name nginx</p><p>删除文件              rm -f </p><p>删除件夹              rm -rf</p><p>查看文件行数    wc - lcw file1</p><h4 id="more-分页浏览文件内容"><a href="#more-分页浏览文件内容" class="headerlink" title="more 分页浏览文件内容"></a>more 分页浏览文件内容</h4><p>ls -lh 就能显示出文件大小</p><p>查看后几行 tail -100 error.log </p><p>文件权限   chmod</p><p>sz 下载文件到本地.zip</p><p>zip -r name.zip name</p><p>None自己计算机中安装完整的Linux发行版或其Live CD体验。关于登录账户密码的说明,</p><p>实验楼环境中所有的默认系统用户名均为shiyanlou，密码为shiyanlou认提供了6个纯命令行界面的”terminal”（准确的说这里应该是6个virtual consoles）来让用户登录，</p><p>在物理机系统上你可以通过使用[Ctrl]+[Alt]+[F1]～[F6]进行切换</p><h4 id="使用Tab键来进行命令补全"><a href="#使用Tab键来进行命令补全" class="headerlink" title="使用Tab键来进行命令补全"></a>使用Tab键来进行命令补全</h4><p>这时候你就可以使用Ctrl+c键来强行终止当前程序（你可以放心它并不会使终端退出）</p><p>按键     作用</p><p>Ctrl+d     键盘输入结束或退出终端</p><p>Ctrl+s     暂定当前程序，暂停后按下任意键恢复运行</p><p>Ctrl+z     将当前程序放到后台运行，恢复到前台为命令fg</p><p>Ctrl+a     将光标移至输入行头，相当于Home键</p><p>Ctrl+e     将光标移至输入行末，相当于End键</p><p>Ctrl+k     删除从光标所在位置到行末</p><p>Alt+Backspace     向前删除一个单词</p><p>Shift+PgUp     将终端显示向上滚动</p><p>Shift+PgDn     </p><h4 id="将终端显示向下滚动、"><a href="#将终端显示向下滚动、" class="headerlink" title="将终端显示向下滚动、"></a>将终端显示向下滚动、</h4><h4 id="shell常用通配符："><a href="#shell常用通配符：" class="headerlink" title="shell常用通配符："></a>shell常用通配符：</h4><p>字符     含义</p><ul><li><pre><code>匹配 0 或多个字符</code></pre></li></ul><p>?     匹配任意一个字符</p><p>[list]     匹配 list 中的任意单一字符</p><p>[!list]     匹配 除list 中的任意单一字符以外的字符</p><p>[c1-c2]     匹配 c1-c2 中的任意单一字符 如：[0-9] [a-z]</p><p>{string1,string2,…}     匹配 sring1 或 string2 (或更多)其一字符串</p><p>{c2..c2}     匹配 c1-c2 中全部字符 如{1..10}</p><p>man   手册</p><p>通常分8个区</p><p>区段     说明</p><p>1     一般命令</p><p>2     系统调用</p><p>3     库函数，涵盖了C标准函数库</p><p>4     特殊文件（通常是/dev中的设备）和驱动程序</p><p>5     文件格式和约定</p><p>6     游戏和屏保</p><p>7     杂项</p><p>8     系统管理命&lt;你要搜索的关键字&gt;令和守护进程</p><p>所有的手册页遵循一个常见的布局，其为通过简单的ASCII文本展示而优化</p><p>手册中搜索，查找到后你可以使用n键切换到下一个关键字所在处，shift+n为上一个关键字所在处。使用Space(空格键)翻页，Enter(回车键)向下滚动一行，</p><p>或者使用j,k（vim编辑器的移动键）进行向前向后滚动一行。按下h键为显示使用帮助(因为man使用less作为阅读器，实为less工具的帮助)，按下q退出</p><p>，你还可以使用info命令，不过通常使用man就足够了。如果你知道某个命令的作用，只是想快速查看一些它的某个具体参数的作用，那么你可以使用–help参数，</p><p>大部分命令都会带有这个参数</p><p>这一节介绍一个可以输出图形字符的命令banner</p><p>输入的第一列表示打开当前伪终端的用户的用户名（要查看当前登录用户的用户名，去掉空格直接使用whoami即可），</p><p>第二列的pts/0中pts表示伪终端，所谓伪是相对于/dev/tty设备而言的，还记得上一节讲终端时的那七个使用[Ctrl]+[Alt]+[F1]～[F7]进行切换的/dev/tty设备么,这是“真终端”</p><p>，伪终端就是当你在图形用户界面使用/dev/tty7时每打开一个终端就会产生一个伪终端，pts/0后面那个数字就表示打开的伪终端序号，你可以尝试再打开一个终端，然后在里面输入who am i，</p><p>看第二列是不是就变成pts/1了，第三列则表示当前伪终端的启动时间。</p><h4 id="who命令其它常用参数"><a href="#who命令其它常用参数" class="headerlink" title="who命令其它常用参数"></a>who命令其它常用参数</h4><p>参数     说明</p><p>-a     打印能打印的全部</p><p>-d     打印死掉的进程</p><p>-m     同am i,mom likes</p><p>-q     打印当前登录用户数及用户名</p><p>-u     打印当前登录用户登录信息</p><p>-r     打印运行等级</p><p>关于文件类型，这里有一点你必需时刻牢记linux里面一切皆文件，</p><p>正因为这一点才有了设备文件（/dev目录下有各种设备文件，</p><p>大都跟具体的硬件设备相关）这一说，还有socket（网络套接字，具体是什么，感兴趣的用户可以自己去了解或期待实验楼的后续相关课程），</p><p>和pipe(管道，这个东西很重要，我们以后将会讨论到，这里你先知道有它的存在即可)。软链接文件，链接文件是分为两种的，</p><p>另一种当然是“硬链接”(硬链接不常用，具体内容不作为本课程讨论重点，</p><p>而软链接等同于windows上的快捷方式,你记住这一点就够了</p><p>####文件权限</p><p>读权限，表示你可以使用cat 之类的命令来读取某个文件的内容;写权限，表示你可以编辑和修改某个文件；</p><p> 执行权限，通常指可以运行的二进制程序文件或者脚本文件，如同windows上的’exe’后缀的文件，不过linux上不是通过文件后缀名来区分文件的类型。</p><p>你需要注意的一点是，一个目录要同时具有读权限和执行权限才可以打开，而一个目录要有写权限才允许在其中创建其它文件，</p><p>这是因为目录文件实际保存着该目录里面的文件的列表等信息</p><p>新建空白文件</p><p>使用touch命令创建空白文件，关于touch命令，</p><p>其主要是来更改已有文件的时间戳的（比如，最近访问时间，</p><p>最近修改时间），但其在不加任何参数的情况下，只指定一个文件名，</p><p>则可以创建一个为指定文件名的空白文件(不会覆盖已有同名文件)，</p><p>当然你也可以同时指定该文件的时间戳，</p><p>更多关于touch命令的用法，会在下一讲文件搜索中涉及。</p><p>mkdir创建目录</p><p>cp复制文件或目录要成功复制目录需要加上-r或者-R参数，表示递归复制，</p><p>就是说有点“株连九族”的意思，连它的子子孙孙都不放过</p><p>rm删除 文件或目录跟复制目录一样，要删除一个目录，也需要加上-r或-R参数</p><p>mv移动文件</p><p>这两个命令都是用来打印文件内容到标准输出（终端）,其中cat(注意不是猫哈)为正序显示，tac倒序显示，这里只介绍cat</p><p>使用head和tail命令查看文件</p><p>这两个命令那些性子比较急的人应该会比较喜欢，因为它们一个是只查看的头几行（默认为10行，不足10行则显示全部）和尾几行。</p><p>还是拿passwd文件举例，比如当我们想要查看最近新增加的用户，那么我们可以查看这个/etc/passwd文件，不过我们前面也看到了，这个文件里面一大堆乱糟糟的东西，看起来实在费神啊。</p><p>这里想到系统新增加一个用户，应该会将用户的信息添加到passwd文件的最后，那么这时候我们就可以使用tail命令了</p><p>使用file查看文件</p><p>要解释环境变量，得先明白变量是什么，准确的说应该是shell变量，所谓变量就是计算机中用于记录一个值（不一定是数值，也可以是字符或字符串）的符号，</p><p>而这些符号将用于不同的运算处理中。通常变量与值是一对一的关系，可以通过表达式读取它的值赋值给其它变量，也可以直接指定数值赋值给任意变量。</p><p>为了便于运算和处理，大部分的编程语言会区分变量的类型，用于分别记录数值、字符或者字符串等等数据类型</p><p>使用 declare创建变量</p><p>命令     说明</p><p>set     显示当前shell所有环境变量，包括其内建环境变量（与shell外观等相关），用户自定义变量及导出的环境变量</p><p>env     显示与当前用户相关的环境变量，还可以让命令在指定环境中运行</p><p>export     显示从shell中导出成环境变量的变量，也能通过它将自定义变量导出为环境变量</p><p>用查看PATH环境变量的内容</p><p>变量设置方式     说明</p><p>${变量名#匹配字串}     从头向后开始匹配，删除符合匹配字串的最短数据</p><p>${变量名##匹配字串}     从头向后开始匹配，删除符合匹配字串的最长数据</p><p>${变量名%匹配字串}     从尾向前开始匹配，删除符合匹配字串的最短数据</p><p>${变量名%%匹配字串}     从尾向前开始匹配，删除符合匹配字串的最长数据</p><p>${变量名/旧的字串/新的字串}     将符合旧字串的第一个字串替换为新的字串</p><p>${变量名//旧的字串/新的字串}     将符合旧字串的全部字串替换为新的字串</p><p>可以使用unset命令删除一个环境变量</p><p>与搜索相关的命令常用的有如下几个whereis,which,find,locate</p><p>参数     说明</p><p>-atime     最后访问时间</p><p>-ctime     创建时间</p><p>-mtime     最后修改时间</p><p>下面以-mtime参数举例</p><pre><code>-mtime n: n 为数字，表示为在n天之前的”一天之内“修改过的文件-mtime +n: 列出在n天之前（不包含n天本身）被修改过的文件-mtime -n: 列出在n天之前（包含n天本身）被修改过的文件newer file: file为一个已存在的文件，列出比file还要新的文件名</code></pre><p>文件后缀名     说明</p><p>*.zip     zip程序打包压缩的文件</p><p>*.rar     rar程序压缩的文件</p><p>*.7z     bzip2程序压缩的文件</p><p>*.tar     tar程序打包，未压缩的文件</p><p>*.gz     gzip程序(GNU zip)压缩的文件</p><p>*.xz     xz程序压缩的文件</p><p>*.bz2     bzip2程序压缩的文件</p><p>*.tar.gz     tar打包，gzip程序压缩的文件</p><p>*.tar.xz     tar打包，xz程序压缩的文件</p><p>*tar.bz2     tar打包，bzip2程序压缩的文件</p><p>*.tar.7z     tar打包，7z程序压缩的文件</p><p>这里虽然讲了这么多种压缩文件，这么多个命令，不过不要害怕，我们一般只需要掌握几个命令即可，包括zip,rar,tar。下面会依次介绍这几个命令及对应的解压命令</p><p>查看磁盘的容量df</p><p>du查看目录容量</p><p>dd命令用于转换和复制文件，不过它的复制不同于cp。之前提到过关于Linux的很重要的一点，一切即文件</p><p>dd的命令行语句与其他的Linux程序不同，因为它的命令行选项格式为选项=值，而不是更标准的–选项 值或-选项=值。dd默认从标准输入中读取，并写入到标准输出中，</p><p>但可以用选项if（input file，输入文件）和of（output file，输出文件）改变</p><p>使用mkfs命令格式化磁盘</p><p>你可以在命令行输入mkfs然后按下Tab键，你可以看到很多个以mkfs为前缀的命令，这些不同的后缀其实就是表示着不同的文件系统，可以用mkfs格式化成的文件系统</p><p>使用mount命令挂载磁盘到目录树使用umount命令卸载已挂载磁盘使用fdisk为磁盘分区（关于分区的一些概念不清楚的用户请参看主引导记录</p><p>使用losetup命令建立镜像与回环设备的关联</p><p>.cut命令，打印每一行的某一字段</p><p>grep命令是很强大的，也是相当常用的一个命令，它结合正则表达式可以实现很复杂却很高效的匹配和查找，不过在学习正则表达式之前，这里介绍它简单的使用，</p><p>而关于正则表达式后面将会有单独一小节介绍到时会再继续学习grep命令和其他一些命令</p><p>wc命令用于统计并输出一个文件中行、单词和字节的数目</p><p>sort排序命令uniq命令可以用于过滤或者输出重复行</p><p>tr命令可以用来删除一段文本信息中的某些文字。或者讲其进行转换</p><p>-d     删除和set1匹配的字符，注意不是全词匹配也不是按字符顺序匹配</p><p>-s     去除set1指定的在输入文本中连续并重复的字符</p><p>你可能对重定向这个概念感到些许陌生，但你应该在前面的课程中多次见过&gt;或&gt;&gt;操作了，并知道他们分别是将标准输出导向一个文件或追加到一个文件中。这其实就是重定向，</p><p>将原本输出到标准输出的数据重定向到一个文件中</p><p>，前面我们已经提到过linux默认提供了三个特殊设备，用于终端的显示和输出，分别为stdin(标准输入,对应于你在终端的输入)，stdout（标准输出，对应于终端的输出），</p><p>stderr(标准错误输出，对应于终端的输出)。</p><p>文件描述符     设备文件     说明</p><p>0     /dev/stdin     标准输入</p><p>1     /dev/stdout     标准输出</p><p>2     /dev/stderr     标准错误</p><p>注意你应该在输出重定向文件描述符前加上&amp;,否则shell会当做重定向到一个文件名为1的文件中</p><p>使用tee命令同时重定向到多个文件</p><p>在linux中有一个被成为“黑洞”的设备文件,所以导入它的数据都将被“吞噬”</p><p>虽然我们这一节的标题是正则表达式，但实际我们这一节的内容并不会主要介绍它，而是只介绍grep,sed,awk这三个命令，</p><p>而正则表达式作为这三个命令的一种使用方式（命令输出中可以包含正则表达式）</p><p>一个正则表达式通常被称为一个模式（pattern），为用来描述或者匹配一系列符合某个句法规则的字符串。</p><p>选择</p><p>|竖直分隔符表示选择，例如”boy|girl”可以匹配”boy”或者”girl”</p><p>数量限定</p><p>数量限定除了我们举例用的*,还有+加号,?问号,.点号，如果在一个模式中不加数量限定符则表示出现一次且仅出现一次：</p><pre><code>+表示前面的字符必须出现至少一次(1次或多次)，例如，&quot;goo+gle&quot;,可以匹配&quot;gooogle&quot;,&quot;goooogle&quot;等；?表示前面的字符最多出现一次(0次或1次)，例如，&quot;colou?r&quot;,可以匹配&quot;color&quot;或者&quot;colour&quot;;*星号代表前面的字符可以不出现，也可以出现一次或者多次（0次、或1次、或多次），例如，“0*42”可以匹配42、042、0042、00042等。</code></pre><p>范围和优先级</p><p>()圆括号可以用来定义模式字符串的范围和优先级，这可以简单的理解为是否将括号内的模式串作为一个整体。</p><p>例如，”gr(a|e)y”等价于”gray|grey”，（这里体现了优先级，竖直分隔符用于选择a或者e而不是gra和ey），”(grand)?father”匹配father和grandfather</p><p>（这里体验了范围，?将圆括号内容作为一个整体匹配）。</p><p>语法（部分）</p><p>正则表达式有多种不同的风格，下面列举一些常用的作为PCRE子集的适用于perl和python编程语言及grep或egrep的正则表达式匹配规则：(由于markdown表格解析的问题，下面的竖直分隔符用全角字符代替，实际使用时请换回半角字符</p><p>字符     描述</p><p>\     将下一个字符标记为一个特殊字符、或一个原义字符。例如，“n”匹配字符“n”。“\n”匹配一个换行符。序列“\”匹配“\”而“(”则匹配“(”。</p><p>^     匹配输入字符串的开始位置。</p><p>$     匹配输入字符串的结束位置。</p><p>{n}     n是一个非负整数。匹配确定的n次。例如，“o{2}”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个o。</p><p>{n,}     n是一个非负整数。至少匹配n次。例如，“o{2,}”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。“o{1,}”等价于“o+”。“o{0,}”则等价于“o*”。</p><p>{n,m}     m和n均为非负整数，其中n&lt;=m。最少匹配n次且最多匹配m次。例如，“o{1,3}”将匹配“fooooood”中的前三个o。“o{0,1}”等价于“o?”。请注意在逗号和两个数之间不能有空格。</p><ul><li><pre><code>匹配前面的子表达式零次或多次。例如，zo*能匹配“z”、“zo”以及“zoo”。*等价于&#123;0,&#125;。</code></pre></li></ul><ul><li><pre><code>匹配前面的子表达式一次或多次。例如，“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。+等价于&#123;1,&#125;。</code></pre></li></ul><p>?     匹配前面的子表达式零次或一次。例如，“do(es)?”可以匹配“do”或“does”中的“do”。?等价于{0,1}。</p><p>?     当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，</p><p>而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“oooo”，“o+?”将匹配单个“o”，而“o+”将匹配所有“o”。</p><p>.     匹配除“\n”之外的任何单个字符。要匹配包括“\n”在内的任何字符，请使用像“(.｜\n)”的模式。</p><p>(pattern)     匹配pattern并获取这一匹配的子字符串。该子字符串用于向后引用。要匹配圆括号字符，请使用“(”或“)”。</p><p>x｜y     匹配x或y。例如，“z｜food”能匹配“z”或“food”。“(z｜f)ood”则匹配“zood”或“food”。</p><p>[xyz]     字符集合（character class）。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。</p><p>其中特殊字符仅有反斜线\保持特殊含义，用于转义字符。其它特殊字符如星号、加号、各种括号等均作为普通字符。脱字符^如果出现在首位则表示负值字符集合；</p><p>如果出现在字符串中间就仅作为普通字符。连字符 - 如果出现在字符串中间表示字符范围描述；如果如果出现在首位则仅作为普通字符。</p><p>[^xyz]     排除型（negate）字符集合。匹配未列出的任意字符。例如，“[^abc]”可以匹配“plain”中的“plin”。</p><p>[a-z]     字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。</p><p>[^a-z]     排除型的字符范围。匹配任何不在指定范围内的任意字符。例如，“[^a-z]”可以匹配任何不在“a”到“z”范围内的任意字符。</p><p>优先级</p><p>优先级为从上到下从左到右，依次降低</p><p>运算符     说明</p><p>\     转义符</p><p>(), (?:), (?=), []     括号和中括号</p><p>*、+、?、{n}、{n,}、{n,m}     限定符</p><p>^、$、\任何元字符     定位点和序列</p><p>｜     　选择</p><p>基本操作</p><p>grep命令用于打印输出文本中匹配的模式串，它使用正则表达式作为模式匹配的条件。grep支持三种正则表达式引擎，分别用三个参数指定：</p><p>参数     说明</p><p>-E     POSIX扩展正则表达式，ERE</p><p>-G     POSIX基本正则表达式，BRE</p><p>-P     Perl正则表达式，PCRE</p><p>不过在你没学过perl语言的大多数情况下你将只会使用到ERE和BRE,所以我们接下来的内容都不会讨论到PCRE中特有的一些正则表达式语法</p><p>（它们之间大部分内容是存在交集的，所以你不用担心会遗漏多少重要内容）</p><p>在通过grep命令使用正则表达式之前，先介绍一下它的常用参数</p><p>参数     说明</p><p>-b     将二进制文件作为文本来进行匹配</p><p>-c     统计以模式匹配的数目</p><p>-i     忽略大小写</p><p>-n     显示匹配文本所在行的行号</p><p>-v     反选，输出不匹配行的内容</p><p>-r     递归匹配查找</p><p>-A n     n为正整数，表示after的意思，除了列出匹配行之外，还列出后面的n行</p><p>-B n     n为正整数，表示before的意思，除了列出匹配行之外，还列出前面的n行</p><p>–color=auto     将输出中的匹配项设置为自动颜色显示</p><p>特殊符号     说明</p><p>[:alnum:]     代表英文大小写字节及数字，亦即 0-9, A-Z, a-z</p><p>[:alpha:]     代表任何英文大小写字节，亦即 A-Z, a-z</p><p>[:blank:]     代表空白键与 [Tab] 按键两者</p><p>[:cntrl:]     代表键盘上面的控制按键，亦即包括 CR, LF, Tab, Del.. 等等</p><p>[:digit:]     代表数字而已，亦即 0-9</p><p>[:graph:]     除了空白字节 (空白键与 [Tab] 按键) 外的其他所有按键</p><p>[:lower:]     代表小写字节，亦即 a-z</p><p>[:print:]     代表任何可以被列印出来的字节</p><p>[:punct:]     代表标点符号 (punctuation symbol)，亦即：” ‘ ? ! ; : # $…</p><p>[:upper:]     代表大写字节，亦即 A-Z</p><p>[:space:]     任何会产生空白的字节，包括空白键, [Tab], CR 等等</p><p>[:xdigit:]     代表 16 进位的数字类型，因此包括： 0-9, A-F, a-f 的数字与字节</p><p>编辑器sed 命令基本格式</p><p>参数     说明</p><p>-n     安静模式，只打印受影响的行，默认打印输入数据的全部内容</p><p>-e     用于在脚本中添加多个执行命令一次执行，在命令行中执行多个命令通常不需要加该参数</p><p>-f filename     指定执行filename文件中的命令</p><p>-r     使用扩展正则表达式，默认为标准正则表达式</p><p>-i     将直接修改输入文件内容，而不是打印到标准输出设备</p><p>命令     说明</p><p>s     行内替换</p><p>c     整行替换</p><p>a     插入到指定行的后面</p><p>i     插入到指定行的前面</p><p>p     打印指定行，通常与-n参数配合使用</p><p>d     删除指定行</p><p>AWK是一种优良的文本处理工具，Linux及Unix环境中现有的功能最强大的数据处理引擎之一.</p><p>awk所有的操作都是基于pattern(模式)—action(动作)对来完成的，如下面的形</p><p>其中-F参数用于预先指定前面提到的字段分隔符（还有其他指定字段的方式） ，-v用于预先为awk程序指定变量，-f参数用于指定awk命令要执行的程序文件，</p><p>或者在不加-f参数的情况下直接将程序语句放在这里，最后为awk需要处理的文本输入，且可以同时输入多个文本文件</p><p>变量名     说明</p><p>FILENAME     当前输入文件名，若有多个文件，则只表示第一个。如果输入是来自标准输入，则为空字符串</p><p>$0     当前记录的内容</p><p>$N     N表示字段号，最大值为NF变量的值</p><p>FS     字段分隔符，由正则表达式表示，默认为” “空格</p><p>RS     输入记录分隔符，默认为”\n”，即一行为一个记录</p><p>NF     当前记录字段数</p><p>NR     已经读入的记录数</p><p>FNR     当前输入文件的记录数，请注意它与NR的区别</p><p>OFS     输出字段分隔符，默认为” “空格</p><p>ORS     输出记录分隔符，默认为”\n”</p><p>通常linux上的软件安装主要有三种方式：</p><pre><code>在线安装从磁盘安装deb软件包从二进制软件包安装从源代码编译安装</code></pre><p>3.apt-get</p><p>apt-get使用各用于处理apt包的公用程序集，我们可以用它来在线安装、卸载和升级软件包等，下面列出一些apt-get包含的常用的一些工具：</p><p>工具     说明</p><p>install     其后加上软件包名，用于安装一个软件包</p><p>update     从软件源镜像服务器上下载/更新用于更新本地软件源的软件包列表</p><p>upgrade     升级本地可更新的全部软件包，但存在依赖问题时将不会升级，通常会在更新之前执行一次update</p><p>dist-upgrade     解决依赖关系并升级(存在一定危险性)</p><p>remove     移除已安装的软件包，包括与被移除软件包有依赖关系的软件包，但不包含软件包的配置文件</p><p>autoremove     移除之前被其他软件包依赖，但现在不再被使用的软件包</p><p>purge     与remove相同，但会完全移除软件包，包含其配置文件</p><p>clean     移除下载到本地的已经安装的软件包，默认保存在/var/cache/apt/archives/</p><p>autoclean     移除已安装的软件的旧版本软件包</p><p>下面是一些apt-get常用的参数：</p><p>参数     说明</p><p>-y     自动回应是否安装软件包的选项，在一些自动化安装脚本中使用这个参数将十分有用</p><p>-s     模拟安装</p><p>-q     静默安装方式，指定多个q或者-q=#,#表示数字，用于设定静默级别，这在你不想要在安装软件包时屏幕输出过多时很有用</p><p>-f     修复损坏的依赖关系</p><p>-d     只下载不安装</p><p>–reinstall     重新安装已经安装但可能存在问题的软件包</p><p>–install-suggests     同时安装APT给出的建议安装的软件包</p><p>dpkg常用参数介绍</p><p>参数     说明</p><p>-i     安装指定deb包</p><p>-R     后面加上目录名，用于安装该目录下的所有deb安装包</p><p>-r     remove，移除某个已安装的软件包</p><p>-I     显示deb包文件的信息</p><p>-s     显示已安装软件的信息</p><p>-S     搜索已安装的软件包</p><p>-L     显示已安装软件包的目录信息</p>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git log</title>
      <link href="server/gitlog/"/>
      <url>server/gitlog/</url>
      
        <content type="html"><![CDATA[<h2 id="如果你在git上提交了错误的commit，不要慌，通过下面的方法可以回退到之前的commit"><a href="#如果你在git上提交了错误的commit，不要慌，通过下面的方法可以回退到之前的commit" class="headerlink" title="如果你在git上提交了错误的commit，不要慌，通过下面的方法可以回退到之前的commit"></a>如果你在git上提交了错误的commit，不要慌，通过下面的方法可以回退到之前的commit</h2><h2 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h2><blockquote><p>通过git log可以查看我们之前提交的commit_id：</p></blockquote><blockquote><p>复制你需要回滚的commit_id。不过windows下的命令行是不能复制文本的，为此你可以到github上查看仓库的commit历史，上面是可以直接复制的：</p></blockquote><p><img src="https://s2.ax1x.com/2019/02/27/kTQBtA.png" alt="kTQBtA.png"></p><p>复制好后在命令行执行：git reset –hard commit_id</p><blockquote><p>执行: git push origin HEAD –force 提交当前HEAD</p></blockquote><p>这样就能够将错误的提交删除，回滚至其之前的代码</p><p>但是如果当你回滚代码以后发现commit_id复制错了或者回滚错了怎么办呢？不要慌，按下面的方法做：</p><blockquote><p>执行：git reflog</p></blockquote><p>你能在命令行中看到你的历史操作，复制你要恢复操作最前面的hash值<br><img src="https://s2.ax1x.com/2019/02/27/kTQspt.png" alt="kTQspt.png"></p><blockquote><p>执行 git reset –hard hash</p></blockquote><p>命令中最后要输的hash就是你要恢复的历史记录最前面黄色部分的hash值</p><p>比如 git reset –hard 4458e09</p>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git</title>
      <link href="server/git/"/>
      <url>server/git/</url>
      
        <content type="html"><![CDATA[<h2 id="一、新建代码库"><a href="#一、新建代码库" class="headerlink" title="一、新建代码库"></a>一、新建代码库</h2><pre><code># 在当前目录新建一个Git代码库$ git init# 新建一个目录，将其初始化为Git代码库$ git init [project-name]# 下载一个项目和它的整个代码历史$ git clone [url]</code></pre><h2 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h2><p>Git的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。</p><pre><code># 显示当前的Git配置$ git config --list# 编辑Git配置文件$ git config -e [--global]# 设置提交代码时的用户信息$ git config [--global] user.name &quot;[name]&quot;$ git config [--global] user.email &quot;[email address]&quot;</code></pre><h2 id="三、增加-删除文件"><a href="#三、增加-删除文件" class="headerlink" title="三、增加/删除文件"></a>三、增加/删除文件</h2><pre><code># 添加指定文件到暂存区$ git add [file1] [file2] ...# 添加指定目录到暂存区，包括子目录$ git add [dir]# 添加当前目录的所有文件到暂存区$ git add .# 添加每个变化前，都会要求确认# 对于同一个文件的多处变化，可以实现分次提交$ git add -p# 删除工作区文件，并且将这次删除放入暂存区$ git rm [file1] [file2] ...# 停止追踪指定文件，但该文件会保留在工作区$ git rm --cached [file]# 改名文件，并且将这个改名放入暂存区$ git mv [file-original] [file-renamed]</code></pre><h2 id="四、代码提交"><a href="#四、代码提交" class="headerlink" title="四、代码提交"></a>四、代码提交</h2><pre><code># 提交暂存区到仓库区$ git commit -m [message]# 提交暂存区的指定文件到仓库区$ git commit [file1] [file2] ... -m [message]# 提交工作区自上次commit之后的变化，直接到仓库区$ git commit -a# 提交时显示所有diff信息$ git commit -v# 使用一次新的commit，替代上一次提交# 如果代码没有任何新变化，则用来改写上一次commit的提交信息$ git commit --amend -m [message]# 重做上一次commit，并包括指定文件的新变化$ git commit --amend [file1] [file2] ...</code></pre><h2 id="五、分支"><a href="#五、分支" class="headerlink" title="五、分支"></a>五、分支</h2><pre><code># 列出所有本地分支$ git branch# 列出所有远程分支$ git branch -r# 列出所有本地分支和远程分支$ git branch -a# 新建一个分支，但依然停留在当前分支$ git branch [branch-name]# 新建一个分支，并切换到该分支$ git checkout -b [branch]# 新建一个分支，指向指定commit$ git branch [branch] [commit]# 新建一个分支，与指定的远程分支建立追踪关系$ git branch --track [branch] [remote-branch]# 切换到指定分支，并更新工作区$ git checkout [branch-name]# 切换到上一个分支$ git checkout -# 建立追踪关系，在现有分支与指定的远程分支之间$ git branch --set-upstream [branch] [remote-branch]# 合并指定分支到当前分支$ git merge [branch]# 选择一个commit，合并进当前分支$ git cherry-pick [commit]# 删除分支$ git branch -d [branch-name]# 删除远程分支$ git push origin --delete [branch-name]$ git branch -dr [remote/branch]</code></pre><h2 id="六、标签"><a href="#六、标签" class="headerlink" title="六、标签"></a>六、标签</h2><pre><code># 列出所有tag$ git tag# 新建一个tag在当前commit$ git tag [tag]# 新建一个tag在指定commit$ git tag [tag] [commit]# 删除本地tag$ git tag -d [tag]# 删除远程tag$ git push origin :refs/tags/[tagName]# 查看tag信息$ git show [tag]# 提交指定tag$ git push [remote] [tag]# 提交所有tag$ git push [remote] --tags# 新建一个分支，指向某个tag$ git checkout -b [branch] [tag]</code></pre><h2 id="七、查看信息"><a href="#七、查看信息" class="headerlink" title="七、查看信息"></a>七、查看信息</h2><pre><code># 显示有变更的文件$ git status# 显示当前分支的版本历史$ git log# 显示commit历史，以及每次commit发生变更的文件$ git log --stat# 搜索提交历史，根据关键词$ git log -S [keyword]# 显示某个commit之后的所有变动，每个commit占据一行$ git log [tag] HEAD --pretty=format:%s# 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件$ git log [tag] HEAD --grep feature# 显示某个文件的版本历史，包括文件改名$ git log --follow [file]$ git whatchanged [file]# 显示指定文件相关的每一次diff$ git log -p [file]# 显示过去5次提交$ git log -5 --pretty --oneline# 显示所有提交过的用户，按提交次数排序$ git shortlog -sn# 显示指定文件是什么人在什么时间修改过$ git blame [file]# 显示暂存区和工作区的代码差异$ git diff# 显示暂存区和上一个commit的差异$ git diff --cached [file]# 显示工作区与当前分支最新commit之间的差异$ git diff HEAD# 显示两次提交之间的差异$ git diff [first-branch]...[second-branch]# 显示今天你写了多少行代码$ git diff --shortstat &quot;@&#123;0 day ago&#125;&quot;# 显示某次提交的元数据和内容变化$ git show [commit]# 显示某次提交发生变化的文件$ git show --name-only [commit]# 显示某次提交时，某个文件的内容$ git show [commit]:[filename]# 显示当前分支的最近几次提交$ git reflog# 从本地master拉取代码更新当前分支：branch 一般为master$ git rebase [branch]</code></pre><h2 id="八、远程同步"><a href="#八、远程同步" class="headerlink" title="八、远程同步"></a>八、远程同步</h2><pre><code># 下载远程仓库的所有变动$ git fetch [remote]# 显示所有远程仓库$ git remote -v# 显示某个远程仓库的信息$ git remote show [remote]# 增加一个新的远程仓库，并命名$ git remote add [shortname] [url]# 取回远程仓库的变化，并与本地分支合并$ git pull [remote] [branch]# 上传本地指定分支到远程仓库$ git push [remote] [branch]  git push -u origin master# 强行推送当前分支到远程仓库，即使有冲突$ git push [remote] --force# 推送所有分支到远程仓库$ git push [remote] --all</code></pre><h2 id="九、撤销"><a href="#九、撤销" class="headerlink" title="九、撤销"></a>九、撤销</h2><pre><code># 恢复暂存区的指定文件到工作区$ git checkout [file]# 恢复某个commit的指定文件到暂存区和工作区$ git checkout [commit] [file]# 恢复暂存区的所有文件到工作区$ git checkout .# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变$ git reset [file]# 重置暂存区与工作区，与上一次commit保持一致$ git reset --hard# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变$ git reset [commit]# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致$ git reset --hard [commit]# 重置当前HEAD为指定commit，但保持暂存区和工作区不变$ git reset --keep [commit]# 新建一个commit，用来撤销指定commit# 后者的所有变化都将被前者抵消，并且应用到当前分支$ git revert [commit]# 暂时将未提交的变化移除，稍后再移入$ git stash$ git stash pop</code></pre><h2 id="十、-版本退回"><a href="#十、-版本退回" class="headerlink" title="十、 版本退回"></a>十、 版本退回</h2><pre><code> git log退出方法  英文状态下按Q如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数：git log --pretty=onelinegit reset --hard origin/master 重新退回最新的版本 git reflogGit提供了一个命令git reflog用来记录你的每一次命令</code></pre><h2 id="十一、-解决冲突"><a href="#十一、-解决冲突" class="headerlink" title="十一、 解决冲突"></a>十一、 解决冲突</h2><p>我们可以直接查看冲突文件的内容：</p><pre><code>Git is a distributed version control system.Git is free software distributed under the GPL.Git has a mutable index called stage.Git tracks changes of files.&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEADCreating a new branch is quick &amp; simple.=======Creating a new branch is quick AND simple.&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature1Git用&lt;&lt;&lt;&lt;&lt;&lt;&lt;，=======，&gt;&gt;&gt;&gt;&gt;&gt;&gt;标记出不同分支的内容，我们修改如下后保存：Creating a new branch is quick and simple.再提交就ok了</code></pre><h2 id="十二、搭建Git服务器"><a href="#十二、搭建Git服务器" class="headerlink" title="十二、搭建Git服务器"></a>十二、搭建Git服务器</h2><pre><code>第一步，安装git：$ sudo apt-get install git第二步，创建一个git用户，用来运行git服务：$ sudo adduser git第三步，创建证书登录：收集所有需要登录的用户的公钥，就是他们自己的id_rsa.pub文件，把所有公钥导入到/home/git/.ssh/authorized_keys文件里，一行一个。第四步，初始化Git仓库：先选定一个目录作为Git仓库，假定是/srv/sample.git，在/srv目录下输入命令：$ sudo git init --bare sample.gitGit就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的Git仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的Git仓库通常都以.git结尾。然后，把owner改为git：$ sudo chown -R git:git sample.git第五步，禁用shell登录：出于安全考虑，第二步创建的git用户不允许登录shell，这可以通过编辑/etc/passwd文件完成。找到类似下面的一行：git:x:1001:1001:,,,:/home/git:/bin/bash改为：git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell这样，git用户可以正常通过ssh使用git，但无法登录shell，因为我们为git用户指定的git-shell每次一登录就自动退出。第六步，克隆远程仓库：现在，可以通过git clone命令克隆远程仓库了，在各自的电脑上运行：$ git clone git@server:/srv/sample.gitCloning into &#39;sample&#39;...warning: You appear to have cloned an empty repository.管理公钥如果团队很小，把每个人的公钥收集起来放到服务器的/home/git/.ssh/authorized_keys文件里就是可行的。如果团队有几百号人，就没法这么玩了，这时，可以用Gitosis来管理公钥管理权限Gitolite这个工具</code></pre><p>git init</p><p>git add .</p><p>git commit -m</p><p>添加远程推送地址<br>git remote add origin <a href="https://github.com/zhangsison/chongdianbao">https://github.com/zhangsison/chongdianbao</a></p><p>git push -u origin master</p><p>git clone</p><p>git status -s</p><p>缺少README.md</p><p>git pull –rebase origin master</p><p>删除文件</p><p>git rm –cached filename</p><p>git add .</p><p>git commit -m “提交的信息”</p><p>git remote add origin 远程仓库地址</p><p>失败先删除远程 Git 仓库  git remote rm origin</p><p>git push -u origin 分支名</p><p>新建分支</p><p>git branch 分支名</p><p>切换分支</p><p>git checkout 分支名</p><p>git查看远程仓库地址命令：</p><p>git remote -v</p><p>添加所以含txt文件  git add *.txt</p><p>撤销1.2个文件          git checkout head wewe.txt</p><p>撤销所有txt文件        git checkout head *.txt</p><p>撤销所以文件            git checkout head</p><p>列出所有本地分支git branch列出所有远程分支git branch -r列出所有本地分支和远程分支git branch -a新建一个分支，但依然停留在当前分支git branch [branch-name]</p><p>从远程库获取  git pull origin  git fetch origin</p><p>直接从暂存区删除文件，工作区则不做出改变git rm –cached</p><p>查看文件修改后的差异git diff [files]</p><p>git config –system–list#查看当前用户（global）配置git config –global  –list#查看当前仓库配置信息git config –local–list</p><p>设置Git的user name和email：</p><p>$ git config –global user.name “xuhaiyan”</p><p>$ git config –global user.email “<a href="mailto:&#104;&#97;&#105;&#x79;&#x61;&#x6e;&#x2e;&#120;&#x75;&#x2e;&#x76;&#x69;&#x70;&#64;&#x67;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;">&#104;&#97;&#105;&#x79;&#x61;&#x6e;&#x2e;&#120;&#x75;&#x2e;&#x76;&#x69;&#x70;&#64;&#x67;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;</a>“</p><p>设置秘钥</p><p>$ ssh-keygen -t rsa -C “<a href="mailto:&#x65;&#x6d;&#x61;&#x69;&#108;&#64;&#101;&#109;&#97;&#105;&#108;&#46;&#99;&#x6f;&#x6d;">&#x65;&#x6d;&#x61;&#x69;&#108;&#64;&#101;&#109;&#97;&#105;&#108;&#46;&#99;&#x6f;&#x6d;</a>”</p><p>cd : 改变目录。</p><p>cd . . 回退到上一个目录，直接cd进入默认目录</p><p>pwd : 显示当前所在的目录路径。</p><p>ls(ll): 都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细。</p><p>touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。</p><p>rm: 删除一个文件, rm index.js 就会把index.js文件删除。</p><p>mkdir: 新建一个目录,就是新建一个文件夹。</p><p>rm -r : 删除一个文件夹, rm -r src 删除src目录， 好像不能用通配符。</p><p>mv 移动文件, mv index.html src index.html</p><p>reset 重新初始化终端/清屏。</p><p>clear 清屏。</p><p>history 查看命令历史。</p><p>help 帮助。</p><p>exit 退出。</p>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全页面静态化缓存</title>
      <link href="backend/huancun/"/>
      <url>backend/huancun/</url>
      
        <content type="html"><![CDATA[<h2 id="全页面静态化缓存"><a href="#全页面静态化缓存" class="headerlink" title="全页面静态化缓存"></a>全页面静态化缓存</h2><h4 id="页面部分缓存"><a href="#页面部分缓存" class="headerlink" title="页面部分缓存"></a>页面部分缓存</h4><p>该种方式，是将一个页面中不经常变的部分进行静态缓存，而经常变化的块不缓存，最后组装在一起显示；可以使用类似于ob_get_contents的方式实现</p><h4 id="数据缓存"><a href="#数据缓存" class="headerlink" title="数据缓存"></a>数据缓存</h4><p>当用商品id去请求时，就会得出包括店铺信息、商品信息等数据，此时就可以将这些数据缓存到一个php文件中，文件名包含商品id来建一个唯一标示；下一 次有人想查看这个商品时，首先就直接调这个文件里面的信息，而不用再去数据库查询；其实缓存文件中缓存的就是一个php数组之类；</p><h4 id="查询缓存"><a href="#查询缓存" class="headerlink" title="查询缓存"></a>查询缓存</h4><p>将查询得到的数据缓存在一个文件中，下次遇到相同的查询时，就直接先从这个文件里面调数据，不会再去查数据库；但此处的缓存文件名可能就需要以查询语句为基点来建立唯一标示</p><h4 id="按内容变更进行缓存"><a href="#按内容变更进行缓存" class="headerlink" title="按内容变更进行缓存"></a>按内容变更进行缓存</h4><p>这个也并非独立的缓存技术，需结合着用；就是当数据库内容被修改时，即刻更新缓存文件</p><h4 id="内存式缓存"><a href="#内存式缓存" class="headerlink" title="内存式缓存"></a>内存式缓存</h4><p>提到这个，可能大家想到的首先就是Memcached；memcached是高性能的分布式内存缓存服务器。 一般的使用目的是，通过缓存数据库查询结果，减少数据库访问次数，以提高动态Web应用的速度、 提高可扩展性。</p><p>它就是将需要缓存的信息，缓存到系统内存中，需要获取信息时，直接到内存中取；比较常用的方式就是 key–&gt;value方式；</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$memcachehost</span> <span class="token operator">=</span><span class="token string single-quoted-string">'192.168.6.191'</span><span class="token punctuation">;</span>   <span class="token variable">$memcacheport</span> <span class="token operator">=</span><span class="token number">11211</span><span class="token punctuation">;</span>    <span class="token variable">$memcachelife</span> <span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">;</span>    <span class="token variable">$memcache</span> <span class="token operator">=</span>newMemcache<span class="token punctuation">;</span>     <span class="token variable">$memcache</span><span class="token operator">-></span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token variable">$memcachehost</span><span class="token punctuation">,</span><span class="token variable">$memcacheport</span><span class="token punctuation">)</span><span class="token function">ordie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Could not connect"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token variable">$memcache</span><span class="token operator">-></span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'key'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'缓存的内容'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token variable">$get</span> <span class="token operator">=</span> <span class="token variable">$memcache</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="apache缓存模块"><a href="#apache缓存模块" class="headerlink" title="apache缓存模块"></a>apache缓存模块</h4><p>apache安装完以后，是不允许被cache的。如果外接了cache或squid服务器要求进行web加速的话，就需要在htttpd.conf里进行设置，当然前提是在安装apache的时候要激活mod_cache的模块。</p><p>安装apache时：./configure –enable-cache –enable-disk-cache –enable-mem-cache</p><h4 id="php-APC缓存扩展"><a href="#php-APC缓存扩展" class="headerlink" title="php APC缓存扩展"></a>php APC缓存扩展</h4><p>Php有一个APC缓存扩展，windows下面为php_apc.dll，需要先加载这个模块，然后是在php.ini里面进行配置</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token punctuation">[</span>apc<span class="token punctuation">]</span>     extension<span class="token operator">=</span>php_apc<span class="token operator">.</span>dll     apc<span class="token operator">.</span>rfc1867 <span class="token operator">=</span> on         upload_max_filesize <span class="token operator">=</span><span class="token number">100</span>M          post_max_size <span class="token operator">=</span><span class="token number">100</span>M     apc<span class="token operator">.</span>max_file_size <span class="token operator">=</span><span class="token number">200</span>M      upload_max_filesize <span class="token operator">=</span><span class="token number">1000</span>M      post_max_size <span class="token operator">=</span><span class="token number">1000</span>M      max_execution_time <span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 每个PHP页面运行的最大时间值(秒)，默认30秒    </p><p> max_input_time =600;  </p><pre><code>每个PHP页面接收数据所需的最大时间，默认60      memory_limit =128M;    </code></pre><p>  每个PHP页面所吃掉的最大内存，默认8M</p><h4 id="Opcode缓存"><a href="#Opcode缓存" class="headerlink" title="Opcode缓存"></a>Opcode缓存</h4><p>比较知名的是XCache、Turck MM Cache、PHP Accelerator等</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cacha </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php函数</title>
      <link href="backend/phpzf/"/>
      <url>backend/phpzf/</url>
      
        <content type="html"><![CDATA[<h2 id="php函数"><a href="#php函数" class="headerlink" title="php函数"></a>php函数</h2><h2 id="php转发数量"><a href="#php转发数量" class="headerlink" title="php转发数量"></a>php转发数量</h2><pre><code>function tweetCount($url) &#123;    $content = file_get_contents(&quot;http://api.tweetmeme.com/url_info?url=&quot;.$url);    $element = new SimpleXmlElement($content);    $retweets = $element-&gt;story-&gt;url_count;    if($retweets)&#123;        return $retweets;    &#125; else &#123;        return 0;    &#125; &#125;语法：$url= &quot;http://blog.koonk.com&quot;;$count= tweetCount($url);return $count;</code></pre><h2 id="PHP生成随机字符串函数"><a href="#PHP生成随机字符串函数" class="headerlink" title="PHP生成随机字符串函数"></a>PHP生成随机字符串函数</h2><pre><code>     function generateRandomString($length = 10) &#123;        $characters = &#39;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;;        $randomString = &#39;&#39;;        for ($i = 0; $i &lt; $length; $i++) &#123;            $randomString .= $characters[rand(0, strlen($characters) - 1)];        &#125;        return $randomString;    &#125;</code></pre><h2 id="PHP-数组函数"><a href="#PHP-数组函数" class="headerlink" title="PHP 数组函数"></a>PHP 数组函数</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php">1. 取指定键名    <span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token variable">$raw</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span> <span class="token operator">=></span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'name'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'zane'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'password'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'123456'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// 自己用 PHP 实现</span>    <span class="token keyword">function</span> <span class="token function">onlyKeys</span><span class="token punctuation">(</span><span class="token variable">$raw</span><span class="token punctuation">,</span> <span class="token variable">$keys</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$new</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$raw</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=></span> <span class="token variable">$val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$keys</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$new</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$val</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>                <span class="token keyword">return</span> <span class="token variable">$new</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 用 PHP 内置函数实现</span>    <span class="token keyword">function</span> <span class="token function">newOnlyKeys</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">,</span> <span class="token variable">$keys</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">array_intersect_key</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">,</span> <span class="token function">array_flip</span><span class="token punctuation">(</span><span class="token variable">$keys</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">onlyKeys</span><span class="token punctuation">(</span><span class="token variable">$raw</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 结果 ['id' => 1, 'name' => 'zane']</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">newOnlyKeys</span><span class="token punctuation">(</span><span class="token variable">$raw</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 结果 ['id' => 1, 'name' => 'zane']</span><span class="token number">2.</span> 移除指定键名<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token class-name type-declaration">php</span><span class="token variable">$raw</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span> <span class="token operator">=></span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'name'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'zane'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'password'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'123456'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 用 PHP 内置函数实现</span><span class="token keyword">function</span> <span class="token function">removeKeys</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">,</span> <span class="token variable">$keys</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">array_diff_key</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">,</span> <span class="token function">array_flip</span><span class="token punctuation">(</span><span class="token variable">$keys</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 移除 id 键</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">removeKeys</span><span class="token punctuation">(</span><span class="token variable">$raw</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 结果 ['name' => 'zane']</span><span class="token number">3.</span> 数组去重<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token class-name type-declaration">php</span><span class="token variable">$input</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'you are'</span> <span class="token operator">=></span> <span class="token number">666</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'i am'</span> <span class="token operator">=></span> <span class="token number">233</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'he is'</span> <span class="token operator">=></span> <span class="token number">233</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'she is'</span> <span class="token operator">=></span> <span class="token number">666</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">array_unique</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 结果 ['you are' => 666, 'i am' => 233]</span><span class="token number">4.</span> 清除空值<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token class-name type-declaration">php</span><span class="token variable">$input</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 结果 [0 => 'foo', 2 => -1]</span><span class="token number">5.</span> 数组中重复次数最多的值<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token class-name type-declaration">php</span><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$cv</span> <span class="token operator">=</span> <span class="token function">array_count_values</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// $cv = [6 => 2, 11 => 4, 2 => 2, 4 => 3, 7 => 1, 8 => 1]</span><span class="token function">arsort</span><span class="token punctuation">(</span><span class="token variable">$cv</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$max</span> <span class="token operator">=</span> <span class="token function">key</span><span class="token punctuation">(</span><span class="token variable">$cv</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$max</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 结果 11</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ftp</title>
      <link href="server/ftp/"/>
      <url>server/ftp/</url>
      
        <content type="html"><![CDATA[<h2 id="步骤一：安装-vsftpd"><a href="#步骤一：安装-vsftpd" class="headerlink" title="步骤一：安装 vsftpd"></a>步骤一：安装 vsftpd</h2><blockquote><p>yum install vsftpd -y</p></blockquote><p>安装完成后，启动 FTP 服务：</p><h2 id="步骤二：启动-vsftpd-服务"><a href="#步骤二：启动-vsftpd-服务" class="headerlink" title="步骤二：启动 vsftpd 服务"></a>步骤二：启动 vsftpd 服务</h2><blockquote><p>service vsftpd start</p></blockquote><p>启动后，可以看到系统已经</p><p>监听了 21 端口</p><blockquote><p>netstat -nltp | grep 21</p></blockquote><h2 id="配置-FTP-权限"><a href="#配置-FTP-权限" class="headerlink" title="配置 FTP 权限"></a>配置 FTP 权限</h2><p>目前 FTP 服务登陆允许匿名登陆，也无法区分用户访问，我们需要配置 FTP 访问权限</p><p>了解 VSFTP 配置</p><p>vsftpd 的配置目录为 /etc/vsftpd，包含下列的配置文件：</p><p>vsftpd.conf 为主要配置文件</p><p>ftpusers 配置禁止访问 FTP 服务器的用户列表</p><p>user_list 配置用户访问控制</p><p>匿名访问和切换根目录都会给服务器带来安全风险，我们把这两个功能关闭。</p><p>编辑 /etc/vsftpd/vsftpd.conf，</p><p>找到下面两处配置并修改：</p><h2 id="禁用匿名用户"><a href="#禁用匿名用户" class="headerlink" title="禁用匿名用户"></a>禁用匿名用户</h2><blockquote><p>anonymous_enable=NO</p></blockquote><h2 id="禁止切换根目录"><a href="#禁止切换根目录" class="headerlink" title="禁止切换根目录"></a>禁止切换根目录</h2><blockquote><p>chroot_local_user=YES</p></blockquote><p>编辑完成后，按Ctrl + S保存配置，重新启动 FTP 服务，如：</p><blockquote><p>service vsftpd restart</p></blockquote><p>创建 FTP 用户</p><p>创建一个用户ftpuser：</p><blockquote><p>useradd ftpuser</p></blockquote><p>添加用户。本例添加名为 ftpuser1 的用户。输入命令：useradd -m -d /home/ftpuser1 -s /sbin/nologin ftpuser1</p><p>设置用户登录密码。本例为 ftpuser1 用户设置登录密码。输入命令：passwd ftpuser1，输入密码并确认即可。</p><p><img src="https://mc.qcloudimg.com/static/img/f8912544914d11dfc1dd7e0a6db16f11/image.png"></p><h2 id="为用户ftpuser设置密码-："><a href="#为用户ftpuser设置密码-：" class="headerlink" title="为用户ftpuser设置密码 ："></a>为用户ftpuser设置密码 ：</h2><blockquote><p>echo “IMyC7eKy” | passwd ftpuser –stdin</p></blockquote><blockquote><p>userdel</p></blockquote><p>限制该用户仅能通过 FTP 访问</p><p>限制用户ftpuser只能通过 FTP 访问服务器，而不能直接登录服务器：</p><pre><code>usermod -s /sbin/nologin ftpuseruseradd -d /alidata/www/test test      //增加用户test，并制定test用户的主目录为/alidata/www/test</code></pre><p>passwd test      为test用户设置密码</p><h2 id="3-更改用户相应的权限设置："><a href="#3-更改用户相应的权限设置：" class="headerlink" title="3.更改用户相应的权限设置："></a>3.更改用户相应的权限设置：</h2><pre><code>usermod -s /sbin/nologin test      //限定用户test不能telnet，只能ftpusermod -s /sbin/bash test      //用户test恢复正常usermod -d /test test      //更改用户test的主目录为/test</code></pre><p>为用户分配主目录</p><p>为用户ftpuser创建</p><p>主目录</p><p>并约定：</p><pre><code>/data/ftp为主目录, 该目录不可上传文件/data/ftp/pub文件只能上传到该目录下mkdir -p /data/ftp/pub</code></pre><h2 id="创建登录欢迎文件-："><a href="#创建登录欢迎文件-：" class="headerlink" title="创建登录欢迎文件 ："></a>创建登录欢迎文件 ：</h2><pre><code>echo &quot;Welcome to use FTP service.&quot; /data/ftp/welcome.txt</code></pre><p><strong>设置访问权限：</strong></p><pre><code>chmod a-w /data/ftp &amp;&amp; chmod 777 -R /data/ftp/pubRedirecting to /bin/systemctl restart vsftpd.service 解决以下$ systemctl enable vsftpd.service$ systemctl start vsftpd.servicesystemctl stop vsftpd.servicesystemctl restart vsftpd.service</code></pre><h2 id="使用-FTP-工具登录主机"><a href="#使用-FTP-工具登录主机" class="headerlink" title="使用 FTP 工具登录主机"></a>使用 FTP 工具登录主机</h2><p><img src="https://mc.qcloudimg.com/static/img/bceea82794b39dc24b9d37dc2d1c9891/1.png"></p><h2 id="linux下利用vsftp设置ftp账号"><a href="#linux下利用vsftp设置ftp账号" class="headerlink" title="linux下利用vsftp设置ftp账号"></a>linux下利用vsftp设置ftp账号</h2><blockquote><p>新建一个ftp账号</p></blockquote><p>useradd 用户名 -s /sbin/nologin<br>passwd 用户名</p><blockquote><p>修改用户根目录</p></blockquote><p>vim /etc/passwd<br>将里面账号对应的登录根目录，修改成你想要的。</p><blockquote><p>修改vsftp.conf配置</p></blockquote><p>vi /etc/vsftpd/vsftpd.conf</p><p>将里面一些内容修改成以下对应的选项，如果不存在的，则需要追加进去：</p><pre><code>    userlist_enable=YES    userlist_deny=NO    tcp_wrappers=YES    # 这一句是设置允许FTP登录的用户，一会编辑这个文件，将用户名写入即可    userlist_file=/etc/vsftpd/user_list     chroot_local_user=YES    chroot_list_enable=YES    # (default follows)    chroot_list_file=/etc/vsftpd/chroot_list    allow_writeable_chroot=YES</code></pre><blockquote><p>重启vsftp生效</p></blockquote><p>service vsftpd restart</p>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ftp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git常用命令</title>
      <link href="server/git_mingling/"/>
      <url>server/git_mingling/</url>
      
        <content type="html"><![CDATA[<h1 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h1><h2 id="查看、添加、提交、删除、找回，重置修改文件"><a href="#查看、添加、提交、删除、找回，重置修改文件" class="headerlink" title="查看、添加、提交、删除、找回，重置修改文件"></a>查看、添加、提交、删除、找回，重置修改文件</h2><hr><p>git help # 显示command的help</p><p>git show # 显示某次提交的内容 git show $id</p><p>git co – # 抛弃工作区修改</p><p>git co . # 抛弃工作区修改</p><p>git add # 将工作文件修改提交到本地暂存区</p><p>git add . # 将所有修改过的工作文件提交暂存区</p><p>git rm # 从版本库中删除文件</p><p>git rm –cached # 从版本库中删除文件，但不删除文件</p><p>git reset # 从暂存区恢复到工作文件</p><p>git reset – . # 从暂存区恢复到工作文件</p><p>git reset –hard # 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</p><p>git ci git ci . git ci -a # 将git add, git rm和git ci等操作都合并在一起做　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　<br>git ci -am “some comments”</p><p>git ci –amend # 修改最后一次提交记录</p><p>git revert &lt;$id&gt; # 恢复某次提交的状态，恢复动作本身也创建次提交对象</p><p>git revert HEAD # 恢复最后一次提交的状态</p><h2 id="查看文件diff"><a href="#查看文件diff" class="headerlink" title="查看文件diff"></a>查看文件diff</h2><hr><p>git diff # 比较当前文件和暂存区文件差异 git diff</p><p>git diff &lt;$id1&gt; &lt;$id2&gt; # 比较两次提交之间的差异</p><p>git diff .. # 在两个分支之间比较</p><p>git diff –staged # 比较暂存区和版本库差异</p><p>git diff –cached # 比较暂存区和版本库差异</p><p>git diff –stat # 仅仅比较统计信息</p><h2 id="查看提交记录"><a href="#查看提交记录" class="headerlink" title="查看提交记录"></a>查看提交记录</h2><hr><p>git log git log # 查看该文件每次提交记录</p><p>git log -p # 查看每次详细修改内容的diff</p><p>git log -p -2 # 查看最近两次详细修改内容的diff</p><p>git log –stat #查看提交统计信息</p><p>tig</p><p>Mac上可以使用tig代替diff和log，brew install tig</p><p>Git 本地分支管理</p><h2 id="查看、切换、创建和删除分支"><a href="#查看、切换、创建和删除分支" class="headerlink" title="查看、切换、创建和删除分支"></a>查看、切换、创建和删除分支</h2><hr><p>git br -r # 查看远程分支</p><p>git br <new_branch> # 创建新的分支</p><p>git br -v # 查看各个分支最后提交信息</p><p>git br –merged # 查看已经被合并到当前分支的分支</p><p>git br –no-merged # 查看尚未被合并到当前分支的分支</p><p>git co # 切换到某个分支</p><p>git co -b <new_branch> # 创建新的分支，并且切换过去</p><p>git co -b <new_branch> # 基于branch创建新的new_branch</p><p>git co $id # 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</p><p>git co $id -b <new_branch> # 把某次历史提交记录checkout出来，创建成一个分支</p><p>git br -d # 删除某个分支</p><p>git br -D # 强制删除某个分支 (未被合并的分支被删除的时候需要强制)</p><h2 id="分支合并和rebase"><a href="#分支合并和rebase" class="headerlink" title="分支合并和rebase"></a>分支合并和rebase</h2><hr><p>git merge # 将branch分支合并到当前分支</p><p>git merge origin/master –no-ff # 不要Fast-Foward合并，这样可以生成merge提交</p><p>git rebase master # 将master rebase到branch，相当于： git co &amp;&amp;<br>git rebase master &amp;&amp; git co master &amp;&amp; git merge</p><h2 id="Git补丁管理-方便在多台机器上开发同步时用"><a href="#Git补丁管理-方便在多台机器上开发同步时用" class="headerlink" title="Git补丁管理(方便在多台机器上开发同步时用)"></a>Git补丁管理(方便在多台机器上开发同步时用)</h2><hr><p>git diff &gt; ../sync.patch # 生成补丁</p><p>git apply ../sync.patch # 打补丁</p><p>git apply –check ../sync.patch #测试补丁能否成功</p><h2 id="Git暂存管理"><a href="#Git暂存管理" class="headerlink" title="Git暂存管理"></a>Git暂存管理</h2><hr><p>git stash # 暂存</p><p>git stash list # 列所有stash</p><p>git stash apply # 恢复暂存的内容</p><p>git stash drop # 删除暂存区</p><h2 id="Git远程分支管理"><a href="#Git远程分支管理" class="headerlink" title="Git远程分支管理"></a>Git远程分支管理</h2><hr><p>git pull # 抓取远程仓库所有分支更新并合并到本地</p><p>git pull –no-ff # 抓取远程仓库所有分支更新并合并到本地，不要快进合并</p><p>git fetch origin # 抓取远程仓库更新</p><p>git merge origin/master # 将远程主分支合并到本地当前分支</p><p>git co –track origin/branch # 跟踪某个远程分支创建相应的本地分支</p><p>git co -b <local_branch> origin/<remote_branch> # 基于远程分支创建本地分支，功能同上</p><p>git push # push所有分支</p><p>git push origin master # 将本地主分支推到远程主分支</p><p>git push -u origin master # 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)</p><p>git push origin <local_branch> # 创建远程分支， origin是远程仓库名</p><p>git push origin <local_branch>:<remote_branch> # 创建远程分支</p><p>git push origin :<remote_branch> #先删除本地分支(git br -d )，然后再push删除远程分支</p><h1 id="Git远程仓库管理"><a href="#Git远程仓库管理" class="headerlink" title="Git远程仓库管理"></a>Git远程仓库管理</h1><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><hr><p>git remote -v # 查看远程服务器地址和仓库名称</p><p>git remote show origin # 查看远程服务器仓库状态</p><p>git remote add origin git@ github:robbin/robbin_site.git # 添加远程仓库地址</p><p>git remote set-url origin git@ github.com:robbin/robbin_site.git # 设置远程仓库地址(用于修改远程仓库地址) git remote rm # 删除远程仓库</p><h2 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h2><hr><p>git clone –bare robbin_site robbin_site.git # 用带版本的项目创建纯版本仓库</p><p>scp -r my_project.git git@ git.csdn.net:~ # 将纯仓库上传到服务器上</p><p>mkdir robbin_site.git &amp;&amp; cd robbin_site.git &amp;&amp; git –bare init # 在服务器创建纯仓库</p><p>git remote add origin git@ github.com:robbin/robbin_site.git # 设置远程仓库地址</p><p>git push -u origin master # 客户端首次提交</p><p>git push -u origin develop # 首次将本地develop分支提交到远程develop分支，并且track</p><p>git remote set-head origin master # 设置远程仓库的HEAD指向master分支</p><p>也可以命令设置跟踪远程库和本地库</p><p>git branch –set-upstream master origin/master</p><p>git branch –set-upstream develop origin/develop</p>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php-fpm</title>
      <link href="backend/php-fpm/"/>
      <url>backend/php-fpm/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/sunsky303/p/11590686.html">php-fpm解读-进程管理的三种模式</a>             </p><p>php-fpm进程管理一共有三种模式：ondemand、static、dynamic，我们可以在同一个fpm的master配置三种模式，看下图1。php-fpm的工作模式和nginx类似，都是一个master，多个worker模型。每个worker都在accept本pool内的监听套接字（linux已不存在惊群现象）。</p><p><img src="https://upload-images.jianshu.io/upload_images/2735552-976bd7fcea99cb9d.png" alt="img"></p><h1 id="ondemand"><a href="#ondemand" class="headerlink" title="ondemand"></a>ondemand</h1><blockquote><p>在php-fpm启动的时候，不会给这个pool启动任何一个worker，是按需启动，当有连接过来才会启动。</p></blockquote><p>配置文件（我的配置文件地址为：/usr/local/php/etc/php-fpm.conf）</p><p><img src="https://upload-images.jianshu.io/upload_images/2735552-14d7d5e58c5983b1.png" alt="img"></p><p>当前pool的名字为test</p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><img src="https://upload-images.jianshu.io/upload_images/2735552-76a59d28b06c404a.png" alt="img"></p><p>ondemand原理图</p><p>\1. 从上图可以看出，新建worker的触发条件是连接的到来，而不是实际的请求（例如，只进行连接比如telnet，不发请求数据也会新建worker）</p><p>\2. worker的数量受限于pm.max_children配置，同时受限全局配置process.max（准确的说，三种模式都受限于全局配置）</p><p>3.1秒定时器作用</p><p>找到空闲worker，如果空闲时间超过pm.process_idle_timeout大小，关闭。这个机制可能会关闭所有的worker。</p><h3 id="配置项要求"><a href="#配置项要求" class="headerlink" title="配置项要求"></a>配置项要求</h3><p>\1. pm.max_children&gt; 0</p><p>\2. pm.process_idle_timeout&gt; 0，如果不设置，默认10s</p><h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><p>优点：按流量需求创建，不浪费系统资源（在硬件如此便宜的时代，这个优点略显鸡肋）</p><p>缺点：由于php-fpm是短连接的，所以每次请求都会先建立连接，建立连接的过程必然会触发上图的执行步骤，所以，在大流量的系统上master进程会变得繁忙，占用系统cpu资源，不适合大流量环境的部署</p><h1 id="dynamic"><a href="#dynamic" class="headerlink" title="dynamic"></a>dynamic</h1><blockquote><p>在php-fpm启动时，会初始启动一些worker，在运行过程中动态调整worker数量，worker的数量受限于pm.max_children配置，同时受限全局配置process.max</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/2735552-a273a56abc2b095c.png" alt="img"></p><p>当前pool的名字为test</p><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><p><img src="https://upload-images.jianshu.io/upload_images/2735552-11e78cc01d15078e.png" alt="img"></p><p>dynamic原理图</p><p>\1. 1秒定时器作用</p><p>检查空闲worker数量，按照一定策略动态调整worker数量，增加或减少。增加时，worker最大数量&lt;=max_children· &lt;=全局process.max；减少时，只有idle &gt;pm.max_spare_servers时才会关闭一个空闲worker。</p><p>idle &gt; pm.max_spare_servers，关闭启动时间最长的一个worker，结束本次处理</p><p>idle &gt;= pm.max_children，打印WARNING日志，结束本次处理</p><p>idle &lt; pm.max_children，计算一个num值，然后启动num个worker，结束本次处理</p><h3 id="配置项要求-1"><a href="#配置项要求-1" class="headerlink" title="配置项要求"></a>配置项要求</h3><p>\1. pm.min_spare_servers/pm.max_spare_servers有效范围(0,pm.max_children]</p><p>\2. pm.max_children&gt; 0</p><p>\3. pm.min_spare_servers&lt;=pm.max_spare_servers</p><p>\4.  pm.start_servers有效范围[pm.min_spare_servers,pm.max_spare_servers]如果没有配置，默认pm.min_spare_servers + (pm.max_spare_servers - pm.min_spare_servers) / 2</p><h3 id="优缺点-1"><a href="#优缺点-1" class="headerlink" title="优缺点"></a>优缺点</h3><p>优点：动态扩容，不浪费系统资源，master进程设置的1秒定时器对系统的影响忽略不计；</p><p>缺点：如果所有worker都在工作，新的请求到来只能等待master在1秒定时器内再新建一个worker，这时可能最长等待1s；</p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="static"><a href="#static" class="headerlink" title="static"></a>static</h1><blockquote><p>php-fpm启动采用固定大小数量的worker，在运行期间也不会扩容，虽然也有1秒的定时器，仅限于统计一些状态信息，例如空闲worker个数，活动worker个数，网络连接队列长度等信息。</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/2735552-78eaa933ed9fd808.png" alt="img"></p><p>当前pool的名字为test</p><h3 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h3><p><img src="https://upload-images.jianshu.io/upload_images/2735552-ffa82e0ac0192504.png" alt="img"></p><h3 id="配置项要求-2"><a href="#配置项要求-2" class="headerlink" title="配置项要求"></a>配置项要求</h3><p>1、pm.max_children&gt; 0 必须配置，且只有这一个参数生效</p><h3 id="优缺点-2"><a href="#优缺点-2" class="headerlink" title="优缺点"></a>优缺点</h3><p>如果配置成static，只需要考虑max_children的数量，数量取决于cpu的个数和应用的响应时间，我司配置的是50。</p><p>我司不考虑动态的增加减少那么十几个或者几十个worker，我们的内存没有紧张到这个程度，所以，我们一步到位，把worker数配置到支持最大流量，（哈哈，50也是随便定的，足矣足矣呢）</p><p>最后我们再介绍下worker的工作流程</p><p><img src="https://upload-images.jianshu.io/upload_images/2735552-a4db571174a3f2b6.png" alt="img"></p><p>fastcgi与php-fpm的关系一句话解读：fastcgi只是通信应用协议，php-fpm就是实现了fastcig协议，并嵌入了一个 PHP 解释器。</p><p>完</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php-fpm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql</title>
      <link href="backend/mysql/"/>
      <url>backend/mysql/</url>
      
        <content type="html"><![CDATA[<h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token number">1</span>、说明：创建数据库<span class="token constant">CREATE</span> <span class="token constant">DATABASE</span> database<span class="token operator">-</span>name<span class="token number">2</span>、说明：删除数据库drop database dbname3、说明：备份sql server<span class="token operator">--</span><span class="token operator">-</span> 创建 备份数据的 device<span class="token keyword">USE</span> <span class="token package">master</span><span class="token constant">EXEC</span> sp_addumpdevice <span class="token string single-quoted-string">'disk'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'testBack'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'c:\mssql7backup\MyNwind_1.dat'</span><span class="token operator">--</span><span class="token operator">-</span> 开始 备份<span class="token constant">BACKUP</span> <span class="token constant">DATABASE</span> pubs <span class="token constant">TO</span> testBack <span class="token number">4</span>、说明：创建新表create table <span class="token function">tabname</span><span class="token punctuation">(</span>col1 type1 <span class="token punctuation">[</span>not <span class="token constant">null</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>primary key<span class="token punctuation">]</span><span class="token punctuation">,</span>col2 type2 <span class="token punctuation">[</span>not <span class="token constant">null</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">.</span><span class="token operator">.</span><span class="token punctuation">)</span>根据已有的表创建新表： <span class="token constant">A</span>：create table tab_new like <span class="token function">tab_old </span><span class="token punctuation">(</span>使用旧表创建新表<span class="token punctuation">)</span><span class="token constant">B</span>：create table tab_new <span class="token keyword">as</span> select col1<span class="token punctuation">,</span>col2… from tab_old definition only5、说明：删除新表drop table tabname <span class="token number">6</span>、说明：增加一个列Alter table tabname add column col type注：列增加后将不能删除。<span class="token constant">DB2</span>中列加上后数据类型也不能改变，唯一能改变的是增加varchar类型的长度。<span class="token number">7</span>、说明：添加主键： Alter table tabname add primary <span class="token function">key</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span> 说明：删除主键： Alter table tabname drop primary <span class="token function">key</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span> <span class="token number">8</span>、说明：创建索引：create <span class="token punctuation">[</span>unique<span class="token punctuation">]</span> index idxname on <span class="token function">tabname</span><span class="token punctuation">(</span>col…<span class="token operator">.</span><span class="token punctuation">)</span> 删除索引：drop index idxname注：索引是不可更改的，想更改必须删除重新建。<span class="token number">9</span>、说明：创建视图：create view viewname <span class="token keyword">as</span> select statement 删除视图：drop view viewname<span class="token number">10</span>、说明：几个简单的基本的sql语句选择：select <span class="token operator">*</span> from table1 where 范围插入：insert into <span class="token function">table1</span><span class="token punctuation">(</span>field1<span class="token punctuation">,</span>field2<span class="token punctuation">)</span> <span class="token function">values</span><span class="token punctuation">(</span>value1<span class="token punctuation">,</span>value2<span class="token punctuation">)</span>删除：delete from table1 where 范围更新：update table1 set field1<span class="token operator">=</span>value1 where 范围查找：select <span class="token operator">*</span> from table1 where field1 like ’<span class="token operator">%</span>value1<span class="token operator">%</span>’ <span class="token operator">--</span><span class="token operator">-</span>like的语法很精妙，查资料<span class="token operator">!</span>排序：select <span class="token operator">*</span> from table1 order by field1<span class="token punctuation">,</span>field2 <span class="token punctuation">[</span>desc<span class="token punctuation">]</span>总数：select count <span class="token keyword">as</span> totalcount from table1求和：select <span class="token function">sum</span><span class="token punctuation">(</span>field1<span class="token punctuation">)</span> <span class="token keyword">as</span> sumvalue from table1平均：select <span class="token function">avg</span><span class="token punctuation">(</span>field1<span class="token punctuation">)</span> <span class="token keyword">as</span> avgvalue from table1最大：select <span class="token function">max</span><span class="token punctuation">(</span>field1<span class="token punctuation">)</span> <span class="token keyword">as</span> maxvalue from table1最小：select <span class="token function">min</span><span class="token punctuation">(</span>field1<span class="token punctuation">)</span> <span class="token keyword">as</span> minvalue from table1<span class="token number">11</span>、说明：几个高级查询运算词<span class="token constant">A</span>： <span class="token constant">UNION</span> 运算符 <span class="token constant">UNION</span> 运算符通过组合其他两个结果表（例如 <span class="token constant">TABLE1</span> 和 <span class="token constant">TABLE2</span>）并消去表中任何重复行而派生出一个结果表。当 <span class="token constant">ALL</span> 随 <span class="token constant">UNION</span> 一起使用时（即 <span class="token constant">UNION</span> <span class="token constant">ALL</span>），不消除重复行。两种情况下，派生表的每一行不是来自 <span class="token constant">TABLE1</span> 就是来自 <span class="token constant">TABLE2</span>。 <span class="token constant">B</span>：<span class="token constant">EXCEPT</span> 运算符 <span class="token constant">EXCEPT</span>运算符通过包括所有在 <span class="token constant">TABLE1</span> 中但不在 <span class="token constant">TABLE2</span> 中的行并消除所有重复行而派生出一个结果表。当 <span class="token constant">ALL</span> 随 <span class="token constant">EXCEPT</span> 一起使用时 <span class="token punctuation">(</span><span class="token constant">EXCEPT</span> <span class="token constant">ALL</span><span class="token punctuation">)</span>，不消除重复行。<span class="token constant">C</span>：<span class="token constant">INTERSECT</span> 运算符<span class="token constant">INTERSECT</span>运算符通过只包括 <span class="token constant">TABLE1</span> 和 <span class="token constant">TABLE2</span> 中都有的行并消除所有重复行而派生出一个结果表。当 <span class="token constant">ALL</span>随 <span class="token constant">INTERSECT</span> 一起使用时 <span class="token punctuation">(</span><span class="token constant">INTERSECT</span> <span class="token constant">ALL</span><span class="token punctuation">)</span>，不消除重复行。 注：使用运算词的几个查询结果行必须是一致的。 <span class="token number">12</span>、说明：使用外连接 <span class="token constant">A</span>、left （outer） join： 左外连接（左连接）：结果集几包括连接表的匹配行，也包括左连接表的所有行。 <span class="token argument-name">SQL</span><span class="token punctuation">:</span> select a<span class="token operator">.</span>a<span class="token punctuation">,</span> a<span class="token operator">.</span>b<span class="token punctuation">,</span> a<span class="token operator">.</span>c<span class="token punctuation">,</span> b<span class="token operator">.</span>c<span class="token punctuation">,</span> b<span class="token operator">.</span>d<span class="token punctuation">,</span> b<span class="token operator">.</span>f from a <span class="token constant">LEFT</span> <span class="token constant">OUT</span> <span class="token constant">JOIN</span> b <span class="token constant">ON</span> a<span class="token operator">.</span>a <span class="token operator">=</span> b<span class="token operator">.</span>c<span class="token constant">B</span>：right （outer） <span class="token argument-name">join</span><span class="token punctuation">:</span> 右外连接<span class="token punctuation">(</span>右连接<span class="token punctuation">)</span>：结果集既包括连接表的匹配连接行，也包括右连接表的所有行。 <span class="token constant">C</span>：full<span class="token operator">/</span>cross （outer） join： 全外连接：不仅包括符号连接表的匹配行，还包括两个连接表中的所有记录。<span class="token number">12</span>、分组<span class="token punctuation">:</span>Group <span class="token argument-name">by</span><span class="token punctuation">:</span>   一张表，一旦分组 完成后，查询后只能得到组相关的信息。    组相关的信息：（统计信息） count<span class="token punctuation">,</span>sum<span class="token punctuation">,</span>max<span class="token punctuation">,</span>min<span class="token punctuation">,</span>avg  分组的标准<span class="token punctuation">)</span>    在SQLServer中分组时：不能以text<span class="token punctuation">,</span>ntext<span class="token punctuation">,</span>image类型的字段作为分组依据   在selecte统计函数中的字段，不能和普通的字段放在一起；<span class="token number">13</span>、对数据库进行操作：   分离数据库： sp_detach_db<span class="token punctuation">;</span>附加数据库：sp_attach_db 后接表明，附加需要完整的路径名<span class="token number">14.</span>如何修改数据库的名称<span class="token punctuation">:</span>sp_renamedb <span class="token string single-quoted-string">'old_name'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'new_name'</span>二、提升<span class="token number">1</span>、说明：复制表<span class="token punctuation">(</span>只复制结构<span class="token punctuation">,</span>源表名：a 新表名：b<span class="token punctuation">)</span> <span class="token punctuation">(</span>Access可用<span class="token punctuation">)</span>法一：select <span class="token operator">*</span> into b from a where <span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token number">1</span>（仅用于SQlServer）法二：select top <span class="token number">0</span> <span class="token operator">*</span> into b from a<span class="token number">2</span>、说明：拷贝表<span class="token punctuation">(</span>拷贝数据<span class="token punctuation">,</span>源表名：a 目标表名：b<span class="token punctuation">)</span> <span class="token punctuation">(</span>Access可用<span class="token punctuation">)</span>insert into <span class="token function">b</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span> select d<span class="token punctuation">,</span>e<span class="token punctuation">,</span>f from b<span class="token punctuation">;</span><span class="token number">3</span>、说明：跨数据库之间表的拷贝<span class="token punctuation">(</span>具体数据使用绝对路径<span class="token punctuation">)</span> <span class="token punctuation">(</span>Access可用<span class="token punctuation">)</span>insert into <span class="token function">b</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span> select d<span class="token punctuation">,</span>e<span class="token punctuation">,</span>f from b in ‘具体数据库’ where 条件例子：<span class="token operator">.</span><span class="token operator">.</span>from b in <span class="token string single-quoted-string">'"&amp;Server.MapPath(".")&amp;"\data.mdb" &amp;"'</span> where<span class="token operator">.</span><span class="token operator">.</span><span class="token number">4</span>、说明：子查询<span class="token punctuation">(</span>表名<span class="token number">1</span>：a 表名<span class="token number">2</span>：b<span class="token punctuation">)</span>select a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c from a where a <span class="token function">IN </span><span class="token punctuation">(</span>select d from b <span class="token punctuation">)</span> 或者<span class="token punctuation">:</span> select a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c from a where a <span class="token function">IN </span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token number">5</span>、说明：显示文章、提交人和最后回复时间select a<span class="token operator">.</span>title<span class="token punctuation">,</span>a<span class="token operator">.</span>username<span class="token punctuation">,</span>b<span class="token operator">.</span>adddate from table a<span class="token punctuation">,</span><span class="token punctuation">(</span>select <span class="token function">max</span><span class="token punctuation">(</span>adddate<span class="token punctuation">)</span> adddate from table where table<span class="token operator">.</span>title<span class="token operator">=</span>a<span class="token operator">.</span>title<span class="token punctuation">)</span> b<span class="token number">6</span>、说明：外连接查询<span class="token punctuation">(</span>表名<span class="token number">1</span>：a 表名<span class="token number">2</span>：b<span class="token punctuation">)</span>select a<span class="token operator">.</span>a<span class="token punctuation">,</span> a<span class="token operator">.</span>b<span class="token punctuation">,</span> a<span class="token operator">.</span>c<span class="token punctuation">,</span> b<span class="token operator">.</span>c<span class="token punctuation">,</span> b<span class="token operator">.</span>d<span class="token punctuation">,</span> b<span class="token operator">.</span>f from a <span class="token constant">LEFT</span> <span class="token constant">OUT</span> <span class="token constant">JOIN</span> b <span class="token constant">ON</span> a<span class="token operator">.</span>a <span class="token operator">=</span> b<span class="token operator">.</span>c<span class="token number">7</span>、说明：在线视图查询<span class="token punctuation">(</span>表名<span class="token number">1</span>：a <span class="token punctuation">)</span>select <span class="token operator">*</span> <span class="token function">from </span><span class="token punctuation">(</span><span class="token constant">SELECT</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c <span class="token constant">FROM</span> a<span class="token punctuation">)</span> <span class="token constant">T</span> where t<span class="token operator">.</span>a <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token number">8</span>、说明：between的用法<span class="token punctuation">,</span>between限制查询数据范围时包括了边界值<span class="token punctuation">,</span>not between不包括select <span class="token operator">*</span> from table1 where time between time1 <span class="token keyword">and</span> time2select a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span> from table1 where a not between 数值<span class="token number">1</span> <span class="token keyword">and</span> 数值<span class="token number">2</span><span class="token number">9</span>、说明：in 的使用方法select <span class="token operator">*</span> from table1 where a <span class="token punctuation">[</span>not<span class="token punctuation">]</span> <span class="token function">in </span><span class="token punctuation">(</span>‘值<span class="token number">1</span>’<span class="token punctuation">,</span>’值<span class="token number">2</span>’<span class="token punctuation">,</span>’值<span class="token number">4</span>’<span class="token punctuation">,</span>’值<span class="token number">6</span>’<span class="token punctuation">)</span><span class="token number">10</span>、说明：两张关联表，删除主表中已经在副表中没有的信息 delete from table1 where not <span class="token function">exists </span><span class="token punctuation">(</span> select <span class="token operator">*</span> from table2 where table1<span class="token operator">.</span>field1<span class="token operator">=</span>table2<span class="token operator">.</span>field1 <span class="token punctuation">)</span><span class="token number">11</span>、说明：四表联查问题：select <span class="token operator">*</span> from a left inner join b on a<span class="token operator">.</span>a<span class="token operator">=</span>b<span class="token operator">.</span>b right inner join c on a<span class="token operator">.</span>a<span class="token operator">=</span>c<span class="token operator">.</span>c inner join d on a<span class="token operator">.</span>a<span class="token operator">=</span>d<span class="token operator">.</span>d where <span class="token operator">...</span><span class="token operator">.</span><span class="token operator">.</span><span class="token number">12</span>、说明：日程安排提前五分钟提醒 <span class="token argument-name">SQL</span><span class="token punctuation">:</span> select <span class="token operator">*</span> from 日程安排 where <span class="token function">datediff</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'minute'</span><span class="token punctuation">,</span>f开始时间<span class="token punctuation">,</span><span class="token function">getdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">5</span><span class="token number">13</span>、说明：一条sql 语句搞定数据库分页select top <span class="token number">10</span> b<span class="token operator">.</span><span class="token operator">*</span> <span class="token function">from </span><span class="token punctuation">(</span>select top <span class="token number">20</span> 主键字段<span class="token punctuation">,</span>排序字段 from 表名 order by 排序字段 desc<span class="token punctuation">)</span> a<span class="token punctuation">,</span>表名 b where b<span class="token operator">.</span>主键字段 <span class="token operator">=</span> a<span class="token operator">.</span>主键字段 order by a<span class="token operator">.</span>排序字段具体实现：关于数据库分页：  <span class="token keyword">declare</span> @start <span class="token keyword type-declaration">int</span><span class="token punctuation">,</span>@end <span class="token keyword type-declaration">int</span>  @sql  <span class="token function">nvarchar</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">)</span>  set @sql<span class="token operator">=</span>’select top’<span class="token operator">+</span><span class="token function">str</span><span class="token punctuation">(</span>@end<span class="token operator">-</span>@start<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>’<span class="token operator">+</span>from <span class="token constant">T</span> where rid not <span class="token function">in</span><span class="token punctuation">(</span>select top’<span class="token operator">+</span><span class="token function">str</span><span class="token punctuation">(</span>@str<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>’Rid from <span class="token constant">T</span> where Rid<span class="token operator">></span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>’  exec sp_executesql @sql注意：在top后不能直接跟一个变量，所以在实际应用中只有这样的进行特殊的处理。Rid为一个标识列，如果top后还有具体的字段，这样做是非常有好处的。因为这样可以避免 top的字段如果是逻辑索引的，查询的结果后实际表中的不一致（逻辑索引中的数据有可能和数据表中的不一致，而查询时如果处在索引则首先查询索引）<span class="token number">14</span>、说明：前<span class="token number">10</span>条记录select top <span class="token number">10</span> <span class="token operator">*</span> form table1 where 范围<span class="token number">15</span>、说明：选择在每一组b值相同的数据中对应的a最大的记录的所有信息<span class="token punctuation">(</span>类似这样的用法可以用于论坛每月排行榜<span class="token punctuation">,</span>每月热销产品分析<span class="token punctuation">,</span>按科目成绩排名<span class="token punctuation">,</span>等等<span class="token operator">.</span><span class="token punctuation">)</span>select a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c from tablename ta where a<span class="token operator">=</span><span class="token punctuation">(</span>select <span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> from tablename tb where tb<span class="token operator">.</span>b<span class="token operator">=</span>ta<span class="token operator">.</span>b<span class="token punctuation">)</span><span class="token number">16</span>、说明：包括所有在 TableA中但不在 TableB和TableC中的行并消除所有重复行而派生出一个结果表<span class="token punctuation">(</span>select a from tableA <span class="token punctuation">)</span> <span class="token function">except </span><span class="token punctuation">(</span>select a from tableB<span class="token punctuation">)</span> <span class="token function">except </span><span class="token punctuation">(</span>select a from tableC<span class="token punctuation">)</span><span class="token number">17</span>、说明：随机取出<span class="token number">10</span>条数据select top <span class="token number">10</span> <span class="token operator">*</span> from tablename order by <span class="token function">newid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token number">18</span>、说明：随机选择记录select <span class="token function">newid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token number">19</span>、说明：删除重复记录<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>delete from tablename where id not <span class="token function">in </span><span class="token punctuation">(</span>select <span class="token function">max</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> from tablename group by col1<span class="token punctuation">,</span>col2<span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>select distinct <span class="token operator">*</span> into temp from tablename  delete from tablename  insert into tablename select <span class="token operator">*</span> from temp评价：这种操作牵连大量的数据的移动，这种做法不适合大容量但数据操作<span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>例如：在一个外部表中导入数据，由于某些原因第一次只导入了一部分，但很难判断具体位置，这样只有在下一次全部导入，这样也就产生好多重复的字段，怎样删除重复字段alter table tablename<span class="token operator">--</span>添加一个自增列add  column_b <span class="token keyword type-declaration">int</span> <span class="token function">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> delete from tablename where column_b not <span class="token function">in</span><span class="token punctuation">(</span>select <span class="token function">max</span><span class="token punctuation">(</span>column_b<span class="token punctuation">)</span>  from tablename group by column1<span class="token punctuation">,</span>column2<span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">)</span>alter table tablename drop column column_b<span class="token number">20</span>、说明：列出数据库里所有的表名select name from sysobjects where type<span class="token operator">=</span><span class="token string single-quoted-string">'U'</span> <span class="token comment">// U代表用户</span><span class="token number">21</span>、说明：列出表里的所有的列名select name from syscolumns where id<span class="token operator">=</span><span class="token function">object_id</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'TableName'</span><span class="token punctuation">)</span><span class="token number">22</span>、说明：列示type、vender、pcs字段，以type字段排列，<span class="token keyword">case</span>可以方便地实现多重选择，类似select 中的<span class="token keyword">case</span>。select type<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">case</span> vender when <span class="token string single-quoted-string">'A'</span> then pcs <span class="token keyword">else</span> <span class="token number">0</span> end<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">case</span> vender when <span class="token string single-quoted-string">'C'</span> then pcs <span class="token keyword">else</span> <span class="token number">0</span> end<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">case</span> vender when <span class="token string single-quoted-string">'B'</span> then pcs <span class="token keyword">else</span> <span class="token number">0</span> end<span class="token punctuation">)</span> <span class="token constant">FROM</span> tablename group by type显示结果：type vender pcs电脑 <span class="token constant">A</span> <span class="token number">1</span>电脑 <span class="token constant">A</span> <span class="token number">1</span>光盘 <span class="token constant">B</span> <span class="token number">2</span>光盘 <span class="token constant">A</span> <span class="token number">2</span>手机 <span class="token constant">B</span> <span class="token number">3</span>手机 <span class="token constant">C</span> <span class="token number">3</span><span class="token number">23</span>、说明：初始化表table1<span class="token constant">TRUNCATE</span> <span class="token constant">TABLE</span> table1<span class="token number">24</span>、说明：选择从<span class="token number">10</span>到<span class="token number">15</span>的记录select top <span class="token number">5</span> <span class="token operator">*</span> <span class="token function">from </span><span class="token punctuation">(</span>select top <span class="token number">15</span> <span class="token operator">*</span> from table order by id asc<span class="token punctuation">)</span> table_别名 order by id desc三、技巧<span class="token number">1</span>、<span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span>，<span class="token number">1</span><span class="token operator">=</span><span class="token number">2</span>的使用，在<span class="token constant">SQL</span>语句组合时用的较多“where <span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span>” 是表示选择全部    “where <span class="token number">1</span><span class="token operator">=</span><span class="token number">2</span>”全部不选，如：<span class="token keyword">if</span> @strWhere <span class="token operator">!=</span><span class="token string single-quoted-string">''</span> beginset @strSQL <span class="token operator">=</span> <span class="token string single-quoted-string">'select count(*) as Total from ['</span> <span class="token operator">+</span> @tblName <span class="token operator">+</span> <span class="token string single-quoted-string">'] where '</span> <span class="token operator">+</span> @strWhere end<span class="token keyword">else</span> beginset @strSQL <span class="token operator">=</span> <span class="token string single-quoted-string">'select count(*) as Total from ['</span> <span class="token operator">+</span> @tblName <span class="token operator">+</span> <span class="token string single-quoted-string">']'</span> end我们可以直接写成错误！未找到目录项。set @strSQL <span class="token operator">=</span> <span class="token string single-quoted-string">'select count(*) as Total from ['</span> <span class="token operator">+</span> @tblName <span class="token operator">+</span> <span class="token string single-quoted-string">'] where 1=1 安定 '</span><span class="token operator">+</span> @strWhere <span class="token number">2</span>、收缩数据库<span class="token operator">--</span>重建索引<span class="token constant">DBCC</span> <span class="token constant">REINDEX</span><span class="token constant">DBCC</span> <span class="token constant">INDEXDEFRAG</span><span class="token operator">--</span>收缩数据和日志<span class="token constant">DBCC</span> <span class="token constant">SHRINKDB</span><span class="token constant">DBCC</span> <span class="token constant">SHRINKFILE</span><span class="token number">3</span>、压缩数据库dbcc <span class="token function">shrinkdatabase</span><span class="token punctuation">(</span>dbname<span class="token punctuation">)</span><span class="token number">4</span>、转移数据库给新用户以已存在用户权限exec sp_change_users_login <span class="token string single-quoted-string">'update_one'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'newname'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'oldname'</span>go<span class="token number">5</span>、检查备份集<span class="token constant">RESTORE</span> <span class="token constant">VERIFYONLY</span> from disk<span class="token operator">=</span><span class="token string single-quoted-string">'E:\dvbbs.bak'</span><span class="token number">6</span>、修复数据库<span class="token constant">ALTER</span> <span class="token constant">DATABASE</span> <span class="token punctuation">[</span>dvbbs<span class="token punctuation">]</span> <span class="token constant">SET</span> <span class="token constant">SINGLE_USER</span><span class="token constant">GO</span><span class="token constant">DBCC</span> <span class="token function">CHECKDB</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'dvbbs'</span><span class="token punctuation">,</span>repair_allow_data_loss<span class="token punctuation">)</span> <span class="token constant">WITH</span> <span class="token constant">TABLOCK</span><span class="token constant">GO</span><span class="token constant">ALTER</span> <span class="token constant">DATABASE</span> <span class="token punctuation">[</span>dvbbs<span class="token punctuation">]</span> <span class="token constant">SET</span> <span class="token constant">MULTI_USER</span><span class="token constant">GO</span><span class="token number">7</span>、日志清除<span class="token constant">SET</span> <span class="token constant">NOCOUNT</span> <span class="token constant">ON</span><span class="token keyword">DECLARE</span> @LogicalFileName sysname<span class="token punctuation">,</span> @MaxMinutes <span class="token keyword type-declaration">INT</span><span class="token punctuation">,</span> @NewSize <span class="token keyword type-declaration">INT</span><span class="token keyword">USE</span> <span class="token package">tablename</span> <span class="token operator">--</span> 要操作的数据库名<span class="token constant">SELECT</span>  @LogicalFileName <span class="token operator">=</span> <span class="token string single-quoted-string">'tablename_log'</span><span class="token punctuation">,</span> <span class="token operator">--</span> 日志文件名@MaxMinutes <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">--</span> Limit on time allowed to wrap log<span class="token operator">.</span> @NewSize <span class="token operator">=</span> <span class="token number">1</span>  <span class="token operator">--</span> 你想设定的日志文件的大小<span class="token punctuation">(</span><span class="token constant">M</span><span class="token punctuation">)</span>Setup <span class="token operator">/</span> initialize<span class="token keyword">DECLARE</span> @OriginalSize <span class="token keyword type-declaration">int</span><span class="token constant">SELECT</span> @OriginalSize <span class="token operator">=</span> size  <span class="token constant">FROM</span> sysfiles <span class="token constant">WHERE</span> name <span class="token operator">=</span> @LogicalFileName<span class="token constant">SELECT</span> <span class="token string single-quoted-string">'Original Size of '</span> <span class="token operator">+</span> <span class="token function">db_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string single-quoted-string">' LOG is '</span> <span class="token operator">+</span>  <span class="token function">CONVERT</span><span class="token punctuation">(</span><span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>@OriginalSize<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string single-quoted-string">' 8K pages or '</span> <span class="token operator">+</span>  <span class="token function">CONVERT</span><span class="token punctuation">(</span><span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>@OriginalSize<span class="token operator">*</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string single-quoted-string">'MB'</span> <span class="token constant">FROM</span> sysfiles <span class="token constant">WHERE</span> name <span class="token operator">=</span> @LogicalFileName<span class="token constant">CREATE</span> <span class="token constant">TABLE</span> <span class="token function">DummyTrans </span><span class="token punctuation">(</span>DummyColumn <span class="token function">char </span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span> not <span class="token constant">null</span><span class="token punctuation">)</span><span class="token keyword">DECLARE</span> @Counter    <span class="token keyword type-declaration">INT</span><span class="token punctuation">,</span> @StartTime <span class="token constant">DATETIME</span><span class="token punctuation">,</span> @TruncLog   <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token constant">SELECT</span> @StartTime <span class="token operator">=</span> <span class="token function">GETDATE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> @TruncLog <span class="token operator">=</span> <span class="token string single-quoted-string">'BACKUP LOG '</span> <span class="token operator">+</span> <span class="token function">db_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string single-quoted-string">' WITH TRUNCATE_ONLY'</span><span class="token constant">DBCC</span> <span class="token function">SHRINKFILE </span><span class="token punctuation">(</span>@LogicalFileName<span class="token punctuation">,</span> @NewSize<span class="token punctuation">)</span><span class="token function">EXEC </span><span class="token punctuation">(</span>@TruncLog<span class="token punctuation">)</span><span class="token operator">--</span> Wrap the log <span class="token keyword">if</span> necessary<span class="token operator">.</span><span class="token keyword">WHILE</span> @MaxMinutes <span class="token operator">></span> <span class="token function">DATEDIFF </span><span class="token punctuation">(</span>mi<span class="token punctuation">,</span> @StartTime<span class="token punctuation">,</span> <span class="token function">GETDATE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">--</span> time has not expired <span class="token keyword">AND</span> @OriginalSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token constant">SELECT</span> size <span class="token constant">FROM</span> sysfiles <span class="token constant">WHERE</span> name <span class="token operator">=</span> @LogicalFileName<span class="token punctuation">)</span>   <span class="token keyword">AND</span> <span class="token punctuation">(</span>@OriginalSize <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span> <span class="token operator">></span> @NewSize   <span class="token constant">BEGIN</span> <span class="token operator">--</span> Outer loop<span class="token operator">.</span><span class="token constant">SELECT</span> @Counter <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">WHILE</span>   <span class="token punctuation">(</span><span class="token punctuation">(</span>@Counter <span class="token operator">&lt;</span> @OriginalSize <span class="token operator">/</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token keyword">AND</span> <span class="token punctuation">(</span>@Counter <span class="token operator">&lt;</span> <span class="token number">50000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">BEGIN</span> <span class="token operator">--</span> update <span class="token constant">INSERT</span> DummyTrans <span class="token function">VALUES </span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Fill Log'</span><span class="token punctuation">)</span> <span class="token constant">DELETE</span> DummyTrans <span class="token constant">SELECT</span> @Counter <span class="token operator">=</span> @Counter <span class="token operator">+</span> <span class="token number">1</span> <span class="token constant">END</span> <span class="token function">EXEC </span><span class="token punctuation">(</span>@TruncLog<span class="token punctuation">)</span>   <span class="token constant">END</span><span class="token constant">SELECT</span> <span class="token string single-quoted-string">'Final Size of '</span> <span class="token operator">+</span> <span class="token function">db_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string single-quoted-string">' LOG is '</span> <span class="token operator">+</span> <span class="token function">CONVERT</span><span class="token punctuation">(</span><span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>size<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string single-quoted-string">' 8K pages or '</span> <span class="token operator">+</span>  <span class="token function">CONVERT</span><span class="token punctuation">(</span><span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>size<span class="token operator">*</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string single-quoted-string">'MB'</span> <span class="token constant">FROM</span> sysfiles  <span class="token constant">WHERE</span> name <span class="token operator">=</span> @LogicalFileName<span class="token constant">DROP</span> <span class="token constant">TABLE</span> DummyTrans<span class="token constant">SET</span> <span class="token constant">NOCOUNT</span> <span class="token constant">OFF</span><span class="token number">8</span>、说明：更改某个表exec sp_changeobjectowner <span class="token string single-quoted-string">'tablename'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'dbo'</span><span class="token number">9</span>、存储更改全部表<span class="token constant">CREATE</span> <span class="token constant">PROCEDURE</span> dbo<span class="token operator">.</span>User_ChangeObjectOwnerBatch@OldOwner <span class="token keyword">as</span> <span class="token function">NVARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">,</span>@NewOwner <span class="token keyword">as</span> <span class="token function">NVARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token keyword">AS</span><span class="token keyword">DECLARE</span> @Name    <span class="token keyword">as</span> <span class="token function">NVARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token keyword">DECLARE</span> @Owner   <span class="token keyword">as</span> <span class="token function">NVARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token keyword">DECLARE</span> @OwnerName   <span class="token keyword">as</span> <span class="token function">NVARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token keyword">DECLARE</span> curObject <span class="token constant">CURSOR</span> <span class="token keyword">FOR</span> select <span class="token string single-quoted-string">'Name'</span>    <span class="token operator">=</span> name<span class="token punctuation">,</span>   <span class="token string single-quoted-string">'Owner'</span>    <span class="token operator">=</span> <span class="token function">user_name</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span>from sysobjectswhere <span class="token function">user_name</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token operator">=</span>@OldOwnerorder by name<span class="token constant">OPEN</span>   curObject<span class="token constant">FETCH</span> <span class="token constant">NEXT</span> <span class="token constant">FROM</span> curObject <span class="token constant">INTO</span> @Name<span class="token punctuation">,</span> @Owner<span class="token keyword">WHILE</span><span class="token punctuation">(</span>@@<span class="token constant">FETCH_STATUS</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token constant">BEGIN</span>     <span class="token keyword">if</span> @Owner<span class="token operator">=</span>@OldOwner begin   set @OwnerName <span class="token operator">=</span> @OldOwner <span class="token operator">+</span> <span class="token string single-quoted-string">'.'</span> <span class="token operator">+</span> <span class="token function">rtrim</span><span class="token punctuation">(</span>@Name<span class="token punctuation">)</span>   exec sp_changeobjectowner @OwnerName<span class="token punctuation">,</span> @NewOwnerend<span class="token operator">--</span> select @name<span class="token punctuation">,</span>@NewOwner<span class="token punctuation">,</span>@OldOwner<span class="token constant">FETCH</span> <span class="token constant">NEXT</span> <span class="token constant">FROM</span> curObject <span class="token constant">INTO</span> @Name<span class="token punctuation">,</span> @Owner<span class="token constant">END</span>close curObjectdeallocate curObject<span class="token constant">GO</span><span class="token number">10</span>、<span class="token constant">SQL</span> <span class="token constant">SERVER</span>中直接循环写入数据<span class="token keyword">declare</span> @i <span class="token keyword type-declaration">int</span>set @i<span class="token operator">=</span><span class="token number">1</span><span class="token keyword">while</span> @i<span class="token operator">&lt;</span><span class="token number">30</span>begin    insert into <span class="token function">test </span><span class="token punctuation">(</span>userid<span class="token punctuation">)</span> <span class="token function">values</span><span class="token punctuation">(</span>@i<span class="token punctuation">)</span>    set @i<span class="token operator">=</span>@i<span class="token operator">+</span><span class="token number">1</span>end案例：有如下表，要求就裱中所有沒有及格的成績，在每次增長<span class="token number">0.1</span>的基礎上，使他們剛好及格<span class="token punctuation">:</span>    Name     score         Zhangshan   <span class="token number">80</span>         Lishi       <span class="token number">59</span>         Wangwu      <span class="token number">50</span>         Songquan    <span class="token number">69</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>select <span class="token function">min</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> from tb_table<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">60</span><span class="token punctuation">)</span>beginupdate tb_table set score <span class="token operator">=</span>score<span class="token operator">*</span><span class="token number">1.01</span>where score<span class="token operator">&lt;</span><span class="token number">60</span><span class="token keyword">if</span>  <span class="token punctuation">(</span>select <span class="token function">min</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> from tb_table<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">60</span>  <span class="token keyword">break</span> <span class="token keyword">else</span>    <span class="token keyword">continue</span>end数据开发<span class="token operator">-</span>经典<span class="token number">1.</span>按姓氏笔画排序<span class="token punctuation">:</span>Select <span class="token operator">*</span> From TableName Order By CustomerName Collate Chinese_PRC_Stroke_ci_as <span class="token comment">//从少到多</span><span class="token number">2.</span>数据库加密<span class="token punctuation">:</span>select <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'原始密码'</span><span class="token punctuation">)</span>select <span class="token function">pwdencrypt</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'原始密码'</span><span class="token punctuation">)</span>select <span class="token function">pwdcompare</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'原始密码'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'加密后密码'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">--</span>相同；否则不相同 <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'原始密码'</span><span class="token punctuation">)</span>select <span class="token function">pwdencrypt</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'原始密码'</span><span class="token punctuation">)</span>select <span class="token function">pwdcompare</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'原始密码'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'加密后密码'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">--</span>相同；否则不相同<span class="token number">3.</span>取回表中字段<span class="token punctuation">:</span><span class="token keyword">declare</span> @<span class="token keyword">list</span> <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>@sql <span class="token function">nvarchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span> select @<span class="token keyword">list</span><span class="token operator">=</span>@<span class="token keyword">list</span><span class="token operator">+</span><span class="token string single-quoted-string">','</span><span class="token operator">+</span>b<span class="token operator">.</span>name from sysobjects a<span class="token punctuation">,</span>syscolumns b where a<span class="token operator">.</span>id<span class="token operator">=</span>b<span class="token operator">.</span>id <span class="token keyword">and</span> a<span class="token operator">.</span>name<span class="token operator">=</span><span class="token string single-quoted-string">'表A'</span>set @sql<span class="token operator">=</span><span class="token string single-quoted-string">'select '</span><span class="token operator">+</span><span class="token function">right</span><span class="token punctuation">(</span>@<span class="token keyword">list</span><span class="token punctuation">,</span><span class="token function">len</span><span class="token punctuation">(</span>@<span class="token keyword">list</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string single-quoted-string">' from 表A'</span> <span class="token function">exec </span><span class="token punctuation">(</span>@sql<span class="token punctuation">)</span><span class="token number">4.</span>查看硬盘分区<span class="token punctuation">:</span><span class="token constant">EXEC</span> master<span class="token operator">.</span><span class="token operator">.</span>xp_fixeddrives<span class="token number">5.</span>比较<span class="token constant">A</span><span class="token punctuation">,</span><span class="token constant">B</span>表是否相等<span class="token punctuation">:</span><span class="token keyword">if</span> <span class="token punctuation">(</span>select <span class="token function">checksum_agg</span><span class="token punctuation">(</span><span class="token function">binary_checksum</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span> from <span class="token constant">A</span><span class="token punctuation">)</span>     <span class="token operator">=</span>    <span class="token punctuation">(</span>select <span class="token function">checksum_agg</span><span class="token punctuation">(</span><span class="token function">binary_checksum</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span> from <span class="token constant">B</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token string single-quoted-string">'相等'</span><span class="token keyword">else</span><span class="token keyword">print</span> <span class="token string single-quoted-string">'不相等'</span><span class="token number">6.</span>杀掉所有的事件探察器进程<span class="token punctuation">:</span><span class="token keyword">DECLARE</span> hcforeach <span class="token constant">CURSOR</span> <span class="token keyword">GLOBAL</span> <span class="token keyword">FOR</span> <span class="token constant">SELECT</span> <span class="token string single-quoted-string">'kill '</span><span class="token operator">+</span><span class="token function">RTRIM</span><span class="token punctuation">(</span>spid<span class="token punctuation">)</span> <span class="token constant">FROM</span> master<span class="token operator">.</span>dbo<span class="token operator">.</span>sysprocesses<span class="token constant">WHERE</span> program_name <span class="token function">IN</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'SQL profiler'</span><span class="token punctuation">,</span><span class="token constant">N</span><span class="token string single-quoted-string">'SQL 事件探查器'</span><span class="token punctuation">)</span><span class="token constant">EXEC</span> sp_msforeach_worker <span class="token string single-quoted-string">'?'</span><span class="token number">7.</span>记录搜索<span class="token punctuation">:</span>开头到<span class="token constant">N</span>条记录Select Top <span class="token constant">N</span> <span class="token operator">*</span> From 表<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token constant">N</span>到<span class="token constant">M</span>条记录<span class="token punctuation">(</span>要有主索引<span class="token constant">ID</span><span class="token punctuation">)</span>Select Top <span class="token constant">M</span><span class="token operator">-</span><span class="token constant">N</span> <span class="token operator">*</span> From 表 Where <span class="token constant">ID</span> <span class="token function">in </span><span class="token punctuation">(</span>Select Top <span class="token constant">M</span> <span class="token constant">ID</span> From 表<span class="token punctuation">)</span> Order by <span class="token constant">ID</span>   Desc<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token constant">N</span>到结尾记录Select Top <span class="token constant">N</span> <span class="token operator">*</span> From 表 Order by <span class="token constant">ID</span> Desc案例例如<span class="token number">1</span>：一张表有一万多条记录，表的第一个字段 RecID 是自增长字段， 写一个<span class="token constant">SQL</span>语句， 找出表的第<span class="token number">31</span>到第<span class="token number">40</span>个记录。 select top <span class="token number">10</span> recid from <span class="token constant">A</span> where recid not  <span class="token function">in</span><span class="token punctuation">(</span>select top <span class="token number">30</span> recid from <span class="token constant">A</span><span class="token punctuation">)</span>分析：如果这样写会产生某些问题，如果recid在表中存在逻辑索引。    select top <span class="token number">10</span> recid from <span class="token constant">A</span> where……是从索引中查找，而后面的select top <span class="token number">30</span> recid from <span class="token constant">A</span>则在数据表中查找，这样由于索引中的顺序有可能和数据表中的不一致，这样就导致查询到的不是本来的欲得到的数据。解决方案<span class="token number">1</span>，用order by select top <span class="token number">30</span> recid from <span class="token constant">A</span> order by ricid 如果该字段不是自增长，就会出现问题<span class="token number">2</span>，在那个子查询中也加条件：select top <span class="token number">30</span> recid from <span class="token constant">A</span> where recid<span class="token operator">></span><span class="token operator">-</span><span class="token number">1</span>例<span class="token number">2</span>：查询表中的最后以条记录，并不知道这个表共有多少数据<span class="token punctuation">,</span>以及表结构。set @s <span class="token operator">=</span> <span class="token string single-quoted-string">'select top 1 * from T   where pid not in (select top '</span> <span class="token operator">+</span> <span class="token function">str</span><span class="token punctuation">(</span>@count<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string single-quoted-string">' pid  from  T)'</span><span class="token keyword">print</span> @s      exec  sp_executesql  @s<span class="token number">9</span>：获取当前数据库中的所有用户表select Name from sysobjects where xtype<span class="token operator">=</span><span class="token string single-quoted-string">'u'</span> <span class="token keyword">and</span> status<span class="token operator">>=</span><span class="token number">0</span><span class="token number">10</span>：获取某一个表的所有字段select name from syscolumns where id<span class="token operator">=</span><span class="token function">object_id</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'表名'</span><span class="token punctuation">)</span>select name from syscolumns where id <span class="token function">in </span><span class="token punctuation">(</span>select id from sysobjects where type <span class="token operator">=</span> <span class="token string single-quoted-string">'u'</span> <span class="token keyword">and</span> name <span class="token operator">=</span> <span class="token string single-quoted-string">'表名'</span><span class="token punctuation">)</span>两种方式的效果相同<span class="token number">11</span>：查看与某一个表相关的视图、存储过程、函数select a<span class="token operator">.</span><span class="token operator">*</span> from sysobjects a<span class="token punctuation">,</span> syscomments b where a<span class="token operator">.</span>id <span class="token operator">=</span> b<span class="token operator">.</span>id <span class="token keyword">and</span> b<span class="token operator">.</span>text like <span class="token string single-quoted-string">'%表名%'</span><span class="token number">12</span>：查看当前数据库中所有存储过程select name <span class="token keyword">as</span> 存储过程名称 from sysobjects where xtype<span class="token operator">=</span><span class="token string single-quoted-string">'P'</span><span class="token number">13</span>：查询用户创建的所有数据库select <span class="token operator">*</span> from master<span class="token operator">.</span><span class="token operator">.</span>sysdatabases <span class="token constant">D</span> where sid not <span class="token function">in</span><span class="token punctuation">(</span>select sid from master<span class="token operator">.</span><span class="token operator">.</span>syslogins where name<span class="token operator">=</span><span class="token string single-quoted-string">'sa'</span><span class="token punctuation">)</span>或者select dbid<span class="token punctuation">,</span> name <span class="token keyword">AS</span> <span class="token constant">DB_NAME</span> from master<span class="token operator">.</span><span class="token operator">.</span>sysdatabases where sid <span class="token operator">&lt;</span><span class="token operator">></span> <span class="token number">0x01</span><span class="token number">14</span>：查询某一个表的字段和数据类型select column_name<span class="token punctuation">,</span>data_type from information_schema<span class="token operator">.</span>columnswhere table_name <span class="token operator">=</span> <span class="token string single-quoted-string">'表名'</span><span class="token number">15</span>：不同服务器数据库之间的数据操作<span class="token operator">--</span>创建链接服务器exec sp_addlinkedserver   <span class="token string single-quoted-string">'ITSV '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'SQLOLEDB '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'远程服务器名或ip地址 '</span>exec sp_addlinkedsrvlogin  <span class="token string single-quoted-string">'ITSV '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'false '</span><span class="token punctuation">,</span><span class="token constant">null</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'用户名 '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'密码 '</span><span class="token operator">--</span>查询示例select <span class="token operator">*</span> from <span class="token constant">ITSV</span><span class="token operator">.</span>数据库名<span class="token operator">.</span>dbo<span class="token operator">.</span>表名<span class="token operator">--</span>导入示例select <span class="token operator">*</span> into 表 from <span class="token constant">ITSV</span><span class="token operator">.</span>数据库名<span class="token operator">.</span>dbo<span class="token operator">.</span>表名<span class="token operator">--</span>以后不再使用时删除链接服务器exec sp_dropserver  <span class="token string single-quoted-string">'ITSV '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'droplogins '</span> <span class="token operator">--</span>连接远程<span class="token operator">/</span>局域网数据<span class="token punctuation">(</span>openrowset<span class="token operator">/</span>openquery<span class="token operator">/</span>opendatasource<span class="token punctuation">)</span><span class="token operator">--</span><span class="token number">1</span>、openrowset<span class="token operator">--</span>查询示例select <span class="token operator">*</span> from <span class="token function">openrowset</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">'SQLOLEDB '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sql服务器名 '</span><span class="token punctuation">;</span> <span class="token string single-quoted-string">'用户名 '</span><span class="token punctuation">;</span> <span class="token string single-quoted-string">'密码 '</span><span class="token punctuation">,</span>数据库名<span class="token operator">.</span>dbo<span class="token operator">.</span>表名<span class="token punctuation">)</span><span class="token operator">--</span>生成本地表select <span class="token operator">*</span> into 表 from <span class="token function">openrowset</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">'SQLOLEDB '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sql服务器名 '</span><span class="token punctuation">;</span> <span class="token string single-quoted-string">'用户名 '</span><span class="token punctuation">;</span> <span class="token string single-quoted-string">'密码 '</span><span class="token punctuation">,</span>数据库名<span class="token operator">.</span>dbo<span class="token operator">.</span>表名<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub</title>
      <link href="server/githubtool/"/>
      <url>server/githubtool/</url>
      
        <content type="html"><![CDATA[<h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><h4 id="github查看自己的ID"><a href="#github查看自己的ID" class="headerlink" title="github查看自己的ID"></a>github查看自己的ID</h4><ul><li><a href="https://api.github.com/users/zhangsison">https://api.github.com/users/zhangsison</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
